==17370== Memcheck, a memory error detector
==17370== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17370== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==17370== Command: ../../src/sparse
==17370== 
==17370== Invalid read of size 4
==17370==    at 0x484D0A8: memcpy (vg_replace_strmem.c:1023)
==17370==    by 0x111EB: Memory_copy (Memory.c:76)
==17370==    by 0x12873: FileMgr_setRootLocation (FileMgr.c:146)
==17370==    by 0x10FB3: main (main.c:60)
==17370==  Address 0x4bdcf90 is 3 bytes after a block of size 29 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x1302B: FileMgr_mergePath (FileMgr.c:438)
==17370==    by 0x1284F: FileMgr_setRootLocation (FileMgr.c:144)
==17370==    by 0x10FB3: main (main.c:60)
==17370== 
==17370== Invalid read of size 4
==17370==    at 0x484D094: memcpy (vg_replace_strmem.c:1023)
==17370==    by 0x111EB: Memory_copy (Memory.c:76)
==17370==    by 0x12873: FileMgr_setRootLocation (FileMgr.c:146)
==17370==    by 0x10FB3: main (main.c:60)
==17370==  Address 0x4bdcf94 is 7 bytes after a block of size 29 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x1302B: FileMgr_mergePath (FileMgr.c:438)
==17370==    by 0x1284F: FileMgr_setRootLocation (FileMgr.c:144)
==17370==    by 0x10FB3: main (main.c:60)
==17370== 
[INFO] Merged path: /home/pi/Projects/SParse/tests/self/sparse.txt
[DBUG] Matched /home/pi/Projects/SParse/tests/self/sparse.txt
[INFO] Merged path: /home/pi/Projects/SParse/src
[INFO] Merged path: /home/pi/Projects/SParse/src/
[INFO] Merged path: /home/pi/Projects/SParse/src/make.log
[INFO] Merged path: /home/pi/Projects/SParse/src/main.o
[INFO] Merged path: /home/pi/Projects/SParse/src/test.db
[INFO] Merged path: /home/pi/Projects/SParse/src/Makefile.in
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib
[INFO] Merged path: /home/pi/Projects/SParse/src/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib
[INFO] Merged path: /home/pi/Projects/SParse/src/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/sparse
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/libAppli.a
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/Makefile.in
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/FileReader
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/SParse
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Makefile.in
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/libParse.a
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/C89Grammar
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/ObjectMgr
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Types
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/libCommon.a
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Makefile.in
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Debug
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Memory
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Object
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Error
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbRequest.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbMgr.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbRequest.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbMgr.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/tests
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileMgr.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileDesc.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileDesc.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileMgr.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/tests
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr/Timer.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr/TimeMgr.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr/TimeMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr/TimeMgr.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr/Timer.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/TimeMgr/Timer.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/OptionMgr.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/OptionMgr.o
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/TimeMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/Timer.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/FileReader/FileReader.o
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/FileReader/FileReader.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/FileReader/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.y
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.o
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.l
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/SParse/SParse.o
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/SParse/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/SParse/SParse.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.lex.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.parse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.parse.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.y
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.l
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.lex.o
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.parse.o
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.o
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/Grammar1.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/C89Grammar/Declarator.c
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/C89Grammar/Declarator.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/Map.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/MapEntry.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/Map.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/MapEntry.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/tests
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/MapEntry.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/ObjectMgr/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/ObjectMgr/ObjectMgr.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/ObjectMgr/ObjectMgr.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String/String2.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String/String2.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String/tests
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/List.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/List.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/tests
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Types/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Debug/Debug.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Debug/Debug.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Debug/Debug.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Memory/Memory.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Memory/Memory.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Memory/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Object/Object.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Object/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Object/Object.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Error/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Error/Error.o
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Error/Error.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/tests/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/SdbMgr/tests/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/tests/test1
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/tests/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/FileMgr/tests/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/sparse.txt
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/test1
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/tests/test1
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/tests/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/Map/tests/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String/tests/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/String/tests/main.c
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/tests/test1
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/tests/Makefile
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/List/tests/main.c
[DBUG] SdbMgr: PRAGMA synchronous=NORMAL;
[DBUG] Count = 0
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] D==17370== Invalid write of size 1
==17370==    at 0x18B08: read_include (Grammar2.l:143)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370==  Address 0x4d7b6b3 is 0 bytes after a block of size 11 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B20C: strlen (vg_replace_strmem.c:458)
==17370==    by 0x112AF: Memory_len (Memory.c:100)
==17370==    by 0x11FF7: String_setBuffer (String2.c:205)
==17370==    by 0x18B17: read_include (Grammar2.l:145)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370==  Address 0x4d7b6b3 is 0 bytes after a block of size 11 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B20C: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x12433: Error_new (Error.c:15)
==17370==    by 0x18B27: read_include (Grammar2.l:146)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370==  Address 0x4d7b6b3 is 0 bytes after a block of size 11 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B20C: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x49CED2B: vsnprintf (vsnprintf.c:114)
==17370==    by 0x1A383: SdbRequest_execute (SdbRequest.c:79)
==17370==    by 0x1501F: Grammar2_addIncludeNode (Grammar2.c:307)
==17370==    by 0x1509B: Grammar2_processNewFile (Grammar2.c:325)
==17370==    by 0x18B33: read_include (Grammar2.l:148)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==  Address 0x4d7b6b3 is 0 bytes after a block of size 11 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B20C: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x49CED2B: vsnprintf (vsnprintf.c:114)
==17370==    by 0x1A3F3: SdbRequest_execute (SdbRequest.c:83)
==17370==    by 0x1501F: Grammar2_addIncludeNode (Grammar2.c:307)
==17370==    by 0x1509B: Grammar2_processNewFile (Grammar2.c:325)
==17370==    by 0x18B33: read_include (Grammar2.l:148)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==  Address 0x4d7b6b3 is 0 bytes after a block of size 11 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
irectory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/main.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1,1,1,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (1,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (2,1,2,0,1);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (2,'* 
  @file main.c
     
  @brief This file initialises:
  1) The OptionMgr object
  2) The FileMgr object
        
  This file contains only one function main() 
  which initialises the OptionMgr and FileMgr objects.
  The function also processes each source file in turn.
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="OptionMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE OptionMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (3,3,1,0,2);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (1, 'OptionMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/OptionMgr.h
[INFO] Merged path: ./CommonLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/OptionMgr.h
[INFO] Merged path: ./AppliLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (4,1,3,0,3);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (3,' OptionMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (5,2,1,0,4);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (1, '#ifndef _OPTIONMGR_H_#define _OPTIONMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (6,3,2,0,5);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (2, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (7,1,4,0,6);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (4,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (8,2,2,0,7);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (2, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (9,1,5,0,8);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (5,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 6
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (10,3,3,0,6);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (3, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (11,1,6,0,10);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (6,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (12,2,3,0,11);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (3, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (13,3,4,0,12);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (4, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (14,1,7,0,13);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (7,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (15,2,4,0,14);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (4, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (16,1,8,0,15);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (8,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 13
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (17,2,5,0,13);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (5, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (18,1,9,0,17);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (9,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 10
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (19,2,6,0,10);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (6, 'typedef struct OptionMgr OptionMgr;PUBLIC void OptionMgr_delete(OptionMgr * this);PUBLIC OptionMgr * OptionMgr_copy(OptionMgr * this);PUBLIC PUBLIC OptionMgr* OptionMgr_getRef();PUBLIC String * OptionMgr_getOption(OptionMgr * this, const char * name);PUBLIC void OptionMgr_setOption(OptionMgr * this, const char * optionName, String * value);PUBLIC unsigned int OptionMgr_readFromFile(OptionMgr * this);PUBLIC unsigned int OptionMgr_readFromCmdLine(OptionMgr * this, const int argc, const char ** argv);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (20,1,10,0,19);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (10,' _OPTIONMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 3
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE FileMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (21,3,5,0,3);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (5, 'FileMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileMgr.h
[INFO] Merged path: ./CommonLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileMgr.h
[INFO] Merged path: ./AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (22,1,11,0,21);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (11,' FileMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (23,2,7,0,22);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (7, '#ifndef _FILEMGR_H_#define _FILEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (24,3,6,0,23);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (6, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] ==17370== Invalid read of size 1
==17370==    at 0x484B200: strlen (vg_replace_strmem.c:458)
==17370==    by 0x112AF: Memory_len (Memory.c:100)
==17370==    by 0x11FF7: String_setBuffer (String2.c:205)
==17370==    by 0x18B17: read_include (Grammar2.l:145)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370==  Address 0x4dd913e is 0 bytes after a block of size 6 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B200: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x12433: Error_new (Error.c:15)
==17370==    by 0x18B27: read_include (Grammar2.l:146)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370==  Address 0x4dd913e is 0 bytes after a block of size 6 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B200: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x49CED2B: vsnprintf (vsnprintf.c:114)
==17370==    by 0x1A383: SdbRequest_execute (SdbRequest.c:79)
==17370==    by 0x1501F: Grammar2_addIncludeNode (Grammar2.c:307)
==17370==    by 0x1509B: Grammar2_processNewFile (Grammar2.c:325)
==17370==    by 0x18B33: read_include (Grammar2.l:148)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==  Address 0x4dd913e is 0 bytes after a block of size 6 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
==17370== Invalid read of size 1
==17370==    at 0x484B200: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x49CED2B: vsnprintf (vsnprintf.c:114)
==17370==    by 0x1A3F3: SdbRequest_execute (SdbRequest.c:83)
==17370==    by 0x1501F: Grammar2_addIncludeNode (Grammar2.c:307)
==17370==    by 0x1509B: Grammar2_processNewFile (Grammar2.c:325)
==17370==    by 0x18B33: read_include (Grammar2.l:148)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==  Address 0x4dd913e is 0 bytes after a block of size 6 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (25,1,12,0,24);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (12,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (26,2,8,0,25);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (8, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (27,1,13,0,26);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (13,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 24
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (28,3,7,0,24);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (7, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (29,1,14,0,28);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (14,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (30,2,9,0,29);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (9, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (31,3,8,0,30);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (8, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (32,1,15,0,31);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (15,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (33,2,10,0,32);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (10, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (34,1,16,0,33);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (16,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 31
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (35,2,11,0,31);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (11, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (36,1,17,0,35);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (17,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 28
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (37,3,9,0,28);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (9, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 16
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (38,1,18,0,37);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (18,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (39,2,12,0,38);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (12, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (40,3,10,0,39);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (10, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 16
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (41,1,19,0,40);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (19,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (42,2,13,0,41);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (13, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (43,1,20,0,42);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (20,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 40
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (44,2,14,0,40);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (14, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (45,1,21,0,44);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (21,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 37
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (46,2,15,0,37);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (15, 'typedef struct FileMgr FileMgr;PUBLIC void FileMgr_delete(FileMgr * this);PUBLIC FileMgr * FileMgr_copy(FileMgr * this);PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName);PUBLIC void FileMgr_close(FileMgr* this, String* fileName);PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location);PUBLIC char * FileMgr_getRootLocation(FileMgr* this);PUBLIC FileMgr* FileMgr_getRef();PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName);PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName);PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern);PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (47,1,22,0,46);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (22,' _FILEMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 21
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (48,3,11,0,21);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (11, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (49,1,23,0,48);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (23,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (50,3,12,0,49);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (12, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (51,1,24,0,50);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (24,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (52,2,16,0,51);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (16, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (53,1,25,0,52);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (25,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 50
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (54,2,17,0,50);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (17, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 48
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SParse.h"
[DBUG] Length =9
[DBUG] INCLUDE SParse.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (55,3,13,0,48);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (13, 'SParse.h');
[DBUG] Count = 0
[INFO] Merged path: ./SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SParse.h
[INFO] Merged path: ./CommonLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SParse.h
[INFO] Merged path: ./AppliLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SParse.h
[INFO] Merged path: ./ParseLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (56,1,26,0,55);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (26,' SParse.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (57,2,18,0,56);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (18, '#ifndef _SPARSE_H_#define _SPARSE_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (58,3,14,0,57);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (14, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (59,1,27,0,58);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (27,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (60,2,19,0,59);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (19, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (61,1,28,0,60);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (28,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 58
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (62,2,20,0,58);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (20, 'typedef struct SParse SParse;PUBLIC SParse *SParse_new(');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (63,1,29,0,62);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (29,' Sdb name ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (64,2,21,0,63);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (21, ');PUBLIC void SParse_delete(SParse * this);PUBLIC SParse * SParse_copy(SParse * this);PUBLIC unsigned int SParse_parse(SParse * this, const char * extension);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (65,1,30,0,64);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (30,' _SPARSE_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 55
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (66,3,15,0,55);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (15, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (67,1,31,0,66);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (31,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (68,2,22,0,67);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (22, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (69,3,16,0,68);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (16, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (70,1,32,0,69);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (32,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (71,2,23,0,70);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (23, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (72,1,33,0,71);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (33,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 69
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (73,2,24,0,69);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (24, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (74,1,34,0,73);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (34,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 66
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="ObjectMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE ObjectMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (75,3,17,0,66);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (17, 'ObjectMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ObjectMgr.h
[INFO] Merged path: ./CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (76,1,35,0,75);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (35,' ObjectMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (77,2,25,0,76);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (25, '#ifndef _OBJECTMGR_H_#define _OBJECTMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (78,3,18,0,77);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (18, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (79,1,36,0,78);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (36,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (80,2,26,0,79);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (26, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (81,3,19,0,80);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (19, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (82,1,37,0,81);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (37,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (83,2,27,0,82);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (27, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (84,1,38,0,83);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (38,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 81
[DBUG] POP State Stack Pointer = 34
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (85,2,28,0,81);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (28, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (86,1,39,0,85);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (39,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 78
[DBUG] POP State Stack Pointer = 36
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (87,3,20,0,78);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (20, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (88,1,40,0,87);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (==17370== Invalid read of size 1
==17370==    at 0x484B20C: strlen (vg_replace_strmem.c:458)
==17370==    by 0x49AB68F: vfprintf (vfprintf.c:1637)
==17370==    by 0x12473: Error_new (Error.c:27)
==17370==    by 0x18B83: read_include (Grammar2.l:157)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370==  Address 0x4ec91e8 is 0 bytes after a block of size 8 alloc'd
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x11063: Memory_alloc (Memory.c:26)
==17370==    by 0x18AD3: read_include (Grammar2.l:141)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
NodeId, Comment) VALUES (40,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (89,2,29,0,88);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (29, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (90,1,41,0,89);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (41,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 87
[DBUG] POP State Stack Pointer = 38
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (91,2,30,0,87);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (30, 'typedef struct ObjectMgr ObjectMgr;PUBLIC void ObjectMgr_delete(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_getRef();PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size);PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object);PUBLIC void ObjectMgr_report(ObjectMgr * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (92,1,42,0,91);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (42,' _OBJECTMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 75
[DBUG] POP State Stack Pointer = 40
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<signal.h>
[DBUG] Length =9
[DBUG] INCLUDE signal.h!!!
[NORM] Grammar2.lex.c: Cannot find signal.h































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (93,2,31,0,75);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (31, 'struct sigaction action;void sighandler(int signum, siginfo_t *info, void *ptr) {   Error_new(ERROR_NORMAL, "Received signal %d\n", signum);   Error_new(ERROR_FATAL, "Signal originates from process %lu\n", (unsigned long)info->si_pid);;} int main(const int argc, const char** argv){  SParse *sparse = 0;  String * inDir = 0;  OptionMgr *optionMgr = OptionMgr_getRef();  FileMgr *fileMgr = FileMgr_getRef();  ObjectMgr * objMgr = ObjectMgr_getRef();    action.sa_sigaction = sighandler;  action.sa_flags = SA_SIGINFO;   sigaction(SIGTERM, &action, 0);  sigaction(SIGSEGV, &action, 0);  sigaction(SIGSEGV, &action, 0);  sigaction(SIGINT, &action, 0);  sigaction(SIGTERM, &action, 0);  sigaction(SIGHUP, &action, 0);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (94,1,43,0,93);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (43,' Initialise OptionMgr from command line ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (95,2,32,0,94);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (32, '  OptionMgr_readFromCmdLine(optionMgr, argc, argv);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (96,1,44,0,95);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (44,' Initialise OptionMgr from file ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (97,2,33,0,96);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (33, '  OptionMgr_readFromFile(optionMgr);     ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (98,1,45,0,97);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (45,' Add Directory to FileMgr ');
[DBUG] Count = 0












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (99,2,34,0,98);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (34, '  inDir = OptionMgr_getOption(optionMgr, "Input Directory");  FileMgr_setRootLocation(fileMgr, String_getBuffer(inDir));  FileMgr_addDirectory(fileMgr, ".");    sparse = SParse_new(OptionMgr_getOption(optionMgr, "DB Name"));    SParse_parse(sparse, "*.c");    SParse_delete(sparse);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (100,1,46,0,99);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (46,' Cleanup ');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (101,2,35,0,100);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (35, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (102,1,47,0,101);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (47,'String_delete(inDir);');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (103,2,36,0,102);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (36, '  OptionMgr_delete(optionMgr);  FileMgr_delete(fileMgr);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (104,1,48,0,103);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (48,' Generate Memory report ');
[DBUG] Count = 0











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (105,2,37,0,104);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (37, '  objMgr = ObjectMgr_getRef();    ObjectMgr_report(objMgr);    ObjectMgr_delete(objMgr);    Memory_report();    return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbMgr.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbMgr.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbMgr.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (106,1,49,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (49,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (107,1,50,0,106);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (50,'* 
  @file SdbMgr.c
  
  @brief TBD
  @details TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (108,3,21,0,107);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (21, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (109,1,51,0,108);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (51,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (110,2,38,0,109);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (38, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (111,3,22,0,110);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (22, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (112,1,52,0,111);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (52,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (113,2,39,0,112);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (39, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (114,1,53,0,113);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (53,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 111
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (115,3,23,0,111);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (23, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (116,1,54,0,115);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (54,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (117,2,40,0,116);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (40, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (118,3,24,0,117);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (24, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (119,1,55,0,118);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (55,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (120,2,41,0,119);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (41, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (121,1,56,0,120);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (56,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 118
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (122,2,42,0,118);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (42, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (123,1,57,0,122);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (57,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 115
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (124,2,43,0,115);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (43, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (125,1,58,0,124);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (58,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 108
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (126,3,25,0,108);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (25, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (127,1,59,0,126);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (59,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (128,2,44,0,127);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (44, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (129,3,26,0,128);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (26, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (130,1,60,0,129);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (60,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (131,2,45,0,130);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (45, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (132,1,61,0,131);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (61,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 129
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (133,2,46,0,129);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (46, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (134,1,62,0,133);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (62,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 126
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (135,3,27,0,126);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (27, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (136,1,63,0,135);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (63,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (137,2,47,0,136);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (47, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (138,3,28,0,137);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (28, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (139,1,64,0,138);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (64,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (140,2,48,0,139);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (48, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (141,1,65,0,140);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (65,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 138
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (142,2,49,0,138);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (49, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (143,1,66,0,142);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (66,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 135
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (144,3,29,0,135);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (29, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (145,1,67,0,144);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (67,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (146,2,50,0,145);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (50, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (147,3,30,0,146);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (30, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (148,1,68,0,147);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (68,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (149,2,51,0,148);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (51, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (150,1,69,0,149);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (69,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 147
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (151,2,52,0,147);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (52, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (152,1,70,0,151);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (70,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 144
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (153,3,31,0,144);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (31, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (154,1,71,0,153);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (71,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (155,3,32,0,154);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (32, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (156,1,72,0,155);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (72,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (157,2,53,0,156);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (53, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (158,1,73,0,157);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (73,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 155
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (159,2,54,0,155);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (54, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 153
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<sqlite3.h>
[DBUG] Length =10
[DBUG] INCLUDE sqlite3.h!!!
[NORM] Grammar2.lex.c: Cannot find sqlite3.h


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (160,1,74,0,153);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (74,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (161,1,75,0,160);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (75,'* 
  @class SdbMgr
*************************************************');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (162,2,55,0,161);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (55, 'struct SdbMgr{  Object object;  sqlite3* db;};PRIVATE SdbMgr * sdbMgr = 0;PRIVATE unsigned int SdbMgr_open(SdbMgr* this, String* sdbName);PRIVATE void SdbMgr_close(SdbMgr* this);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (163,1,76,0,162);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (76,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (164,1,77,0,163);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (77,'* 
  @private
*************************************************');
[DBUG] Count = 0














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (165,2,56,0,164);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (56, 'PUBLIC SdbMgr* SdbMgr_new(String * name){  SdbMgr* this = 0;  this = (SdbMgr*)Object_new(sizeof(SdbMgr),(Destructor)&SdbMgr_delete, (Copy_operator)&SdbMgr_copy);  this->object.size = sizeof(SdbMgr);    SdbMgr_open(this, name);  sdbMgr = this;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (166,1,78,0,165);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (78,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (167,1,79,0,166);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (79,'* 
  @brief Destroy an instance of the class SdbMgr.
  @public
  @memberof SdbMgr
*************************************************');
[DBUG] Count = 0



















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (168,2,57,0,167);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (57, 'PUBLIC void SdbMgr_delete(SdbMgr* this){   if (this!=0)  {    if (this->object.refCount==1)    {      SdbMgr_close(this);      this->db = 0;      Object_delete(&this->object);      sdbMgr = 0;    }    else    {      this->object.refCount--;    }  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (169,1,80,0,168);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (80,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (170,1,81,0,169);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (81,'* 
  @brief Create a copy of an SdbMgr object.
  @public
  @memberof SdbMgr
  @return A copy of the SdbMgr object.
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (171,2,58,0,170);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (58, 'PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this){  SdbMgr * copy = 0;  return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (172,1,82,0,171);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (82,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (173,1,83,0,172);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (83,'* 
  @brief Get a reference to an object.
  @public
  @memberof SdbMgr
  @return A reference to a SdbMgr object.
*************************************************');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (174,2,59,0,173);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (59, 'PUBLIC SdbMgr * SdbMgr_getRef(){      if (sdbMgr!=0)  {    sdbMgr->object.refCount++;  }    return sdbMgr;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (175,1,84,0,174);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (84,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (176,1,85,0,175);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (85,'* 
  @brief Execute a Sdb request.
  @public
  @memberof SdbMgr
  @return status
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (177,2,60,0,176);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (60, 'PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result){  int rc = 0;  sqlite3_stmt *res = 0;  int step = 0;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (178,1,86,0,177);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (86,'void **rows = 0;');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (179,2,61,0,178);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (61, '  unsigned int count = 0;  int i;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (180,1,87,0,179);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (87,'printf("SdbMgr: %s\n", statement);');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (181,2,62,0,180);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (62, '  Error_new(ERROR_DBG, "SdbMgr: %s\n", statement);  rc = sqlite3_prepare_v2(this->db, statement, -1, &res, 0);    step = sqlite3_step(res);    count = sqlite3_column_count(res);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (182,1,88,0,181);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (88,'printf("Count = %d\n", count);');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (183,2,63,0,182);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (63, '  Error_new(ERROR_DBG, "Count = %d\n", count);   if (count>0)   {    *result = (String**)Memory_alloc(sizeof(String*)*count);        while (step != SQLITE_DONE)    {      for (i=0; i<count; i++)      {        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (184,1,89,0,183);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (89,'printf("SdbMgr: Query performed\n");');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (185,2,64,0,184);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (64, '        *result[i] = String_new((char *)sqlite3_column_text(res, i));      }    step = sqlite3_step(res);    }  }  sqlite3_finalize(res);    return 0;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (186,1,90,0,185);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (90,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (187,1,91,0,186);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (91,'* 
  @private
*************************************************');
[DBUG] Count = 0












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (188,2,65,0,187);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (65, 'PRIVATE unsigned int SdbMgr_open(SdbMgr* this, String* sdbName){  unsigned int result = 0;  String ** requestResult = 0;    result = sqlite3_open(String_getBuffer(sdbName), &(this->db));  (void)SdbMgr_execute(this, "PRAGMA synchronous=NORMAL;", &requestResult);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (189,1,92,0,188);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (92,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (190,1,93,0,189);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (93,'* 
  @private
*************************************************');
[DBUG] Count = 0





[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (191,2,66,0,190);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (66, 'PRIVATE void SdbMgr_close(SdbMgr* this){  sqlite3_close(this->db);}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbRequest.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbRequest.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/SdbMgr/SdbRequest.c');
[DBUG] Count = 0
[DBUG] File name ="SdbRequest.h"
[DBUG] Length =13
[DBUG] INCLUDE SdbRequest.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (192,3,33,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (33, 'SdbRequest.h');
[DBUG] Count = 0
[DBUG] FileREader_addFile: Reached SdbRequest.h
[INFO] Merged path: ./SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbRequest.h
[INFO] Merged path: ./CommonLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbRequest.h
[INFO] Merged path: ./AppliLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (193,1,94,0,192);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (94,' SdbRequest.h ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (194,2,67,0,193);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (67, '#ifndef _SDBREQUEST_H_#define _SDBREQUEST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (195,3,34,0,194);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (34, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (196,1,95,0,195);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (95,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (197,2,68,0,196);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (68, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (198,1,96,0,197);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (96,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 195
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (199,2,69,0,195);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (69, 'typedef struct SdbRequest SdbRequest;PUBLIC SdbRequest * SdbRequest_new(const char * fmt);PUBLIC void SdbRequest_delete(SdbRequest * this);PUBLIC SdbRequest * SdbRequest_copy(SdbRequest * this);PUBLIC void SdbRequest_execute(SdbRequest * this, ...);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (200,1,97,0,199);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (97,' _SDBREQUEST_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 192
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (201,3,35,0,192);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (35, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (202,1,98,0,201);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (98,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (203,2,70,0,202);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (70, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (204,3,36,0,203);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (36, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (205,1,99,0,204);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (99,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (206,2,71,0,205);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (71, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (207,1,100,0,206);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (100,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 204
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (208,2,72,0,204);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (72, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (209,1,101,0,208);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (101,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 201
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (210,3,37,0,201);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (37, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (211,1,102,0,210);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (102,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (212,2,73,0,211);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (73, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (213,3,38,0,212);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (38, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (214,1,103,0,213);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (103,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (215,2,74,0,214);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (74, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (216,1,104,0,215);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (104,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 213
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (217,3,39,0,213);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (39, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (218,1,105,0,217);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (105,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (219,2,75,0,218);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (75, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (220,3,40,0,219);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (40, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (221,1,106,0,220);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (106,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (222,2,76,0,221);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (76, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (223,1,107,0,222);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (107,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 220
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (224,2,77,0,220);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (77, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (225,1,108,0,224);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (108,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 217
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (226,2,78,0,217);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (78, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (227,1,109,0,226);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (109,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 210
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (228,3,41,0,210);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (41, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (229,1,110,0,228);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (110,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (230,2,79,0,229);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (79, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (231,3,42,0,230);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (42, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (232,1,111,0,231);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (111,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (233,2,80,0,232);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (80, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (234,1,112,0,233);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (112,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 231
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (235,2,81,0,231);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (81, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (236,1,113,0,235);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (113,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 228
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h

[DBUG] File name =<stdarg.h>
[DBUG] Length =9
[DBUG] INCLUDE stdarg.h!!!
[NORM] Grammar2.lex.c: Cannot find stdarg.h











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (237,2,82,0,228);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (82, 'struct SdbRequest{  Object object;  char * buffer;  unsigned int size;  const char * fmt;  String ** result;};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (238,1,114,0,237);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (114,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (239,1,115,0,238);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (115,'* 
  @brief Create a new SdbRequest instance
  @memberof SdbRequest
  @public
  @parameter SQL statement template
  @return Instance of an SdbRequest
*************************************************');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (240,2,83,0,239);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (83, 'PUBLIC SdbRequest * SdbRequest_new(const char * fmt){  SdbRequest * this = 0;  this = (SdbRequest*)Object_new(sizeof(SdbRequest),(Destructor)&SdbRequest_delete, (Copy_operator)&SdbRequest_copy);  this->object.size = sizeof(SdbRequest);    this->fmt = fmt;  this->size = 0;  this->buffer = 0;  this->result = 0;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (241,1,116,0,240);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (116,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (242,1,117,0,241);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (117,'* 
  @brief Create a new SdbRequest instance
  @memberof SdbRequest
  @public
  @parameter SQL statement template
  @return Instance of an SdbRequest
*************************************************');
[DBUG] Count = 0



















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (243,2,84,0,242);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (84, 'PUBLIC void SdbRequest_delete(SdbRequest * this){  if (this->buffer)  {    Memory_free(this->buffer, this->size);    this->buffer = 0;    this->size = 0;  }  Object_delete(&this->object);}PUBLIC SdbRequest * SdbRequest_copy(SdbRequest * this){  SdbRequest * result = 0;    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (244,1,118,0,243);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (118,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (245,1,119,0,244);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (119,'* 
  @brief Execute a SdbRequest
  @memberof SdbRequest
  @public
  @parameter Variable list of parameter to use with SQL template
  @return Instance of an SdbRequest
*************************************************');
[DBUG] Count = 0























[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (246,2,85,0,245);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (85, 'PUBLIC void SdbRequest_execute(SdbRequest * this, ...){  unsigned int size = 0;  SdbMgr * sdbMgr = SdbMgr_getRef();  va_list args;    va_start(args, this);  size = vsnprintf(0, 0, this->fmt, args);  this->buffer = Memory_realloc(this->buffer, this->size + 1, size + 1);  this->buffer[size] = 0;    vsnprintf(this->buffer, size+1, this->fmt, args);  this->size =size;  va_end(args);    SdbMgr_execute(sdbMgr,                  this->buffer,                  &this->result);    SdbMgr_delete(sdbMgr);}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileDesc.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileDesc.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/FileMgr/FileDesc.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (247,1,120,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (120,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (248,1,121,0,247);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (121,'* 
  @file FileDesc.c
  
  @brief The FileDesc class describe a File in the FIleMgr.
  
  The class FileDesc is TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="FileDesc.h"
[DBUG] Length =11
[DBUG] INCLUDE FileDesc.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (249,3,43,0,248);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (43, 'FileDesc.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileDesc.h
[INFO] Merged path: ./CommonLib/include/FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileDesc.h
[INFO] Merged path: ./AppliLib/include/FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (250,1,122,0,249);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (122,' FileDesc.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (251,2,86,0,250);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (86, '#ifndef _FILEDESC_H_#define _FILEDESC_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (252,3,44,0,251);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (44, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (253,1,123,0,252);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (123,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (254,2,87,0,253);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (87, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (255,1,124,0,254);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (124,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 252
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (256,3,45,0,252);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (45, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (257,1,125,0,256);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (125,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (258,2,88,0,257);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (88, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (259,3,46,0,258);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (46, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (260,1,126,0,259);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (126,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (261,2,89,0,260);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (89, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (262,1,127,0,261);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (127,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 259
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (263,2,90,0,259);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (90, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (264,1,128,0,263);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (128,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 256
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (265,2,91,0,256);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (91, 'typedef struct FileDesc FileDesc;PUBLIC FileDesc * FileDesc_new();PUBLIC void FileDesc_delete(FileDesc * this);PUBLIC FileDesc * FileDesc_copy(FileDesc * this);PUBLIC void FileDesc_setFullName(FileDesc * this, String * fullName);PUBLIC String * FileDesc_getFullName(FileDesc * this);PUBLIC void FileDesc_setName(FileDesc * this, String * name);PUBLIC String * FileDesc_getName(FileDesc * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (266,1,129,0,265);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (129,' _FILEDESC_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 249
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (267,3,47,0,249);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (47, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (268,1,130,0,267);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (130,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (269,2,92,0,268);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (92, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (270,3,48,0,269);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (48, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (271,1,131,0,270);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (131,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (272,2,93,0,271);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (93, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (273,1,132,0,272);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (132,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 270
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (274,2,94,0,270);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (94, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (275,1,133,0,274);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (133,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 267
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (276,3,49,0,267);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (49, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (277,1,134,0,276);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (134,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (278,2,95,0,277);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (95, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (279,3,50,0,278);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (50, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (280,1,135,0,279);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (135,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (281,2,96,0,280);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (96, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (282,1,136,0,281);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (136,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 279
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (283,2,97,0,279);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (97, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (284,1,137,0,283);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (137,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 276
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (285,2,98,0,276);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (98, 'struct FileDesc{  Object object;  String * name;  String * fullName;};PRIVATE String * FileDesc_getBasename(FileDesc * this);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (286,1,138,0,285);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (138,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (287,1,139,0,286);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (139,'* 
  @brief TBD
  @public
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (288,2,99,0,287);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (99, 'PUBLIC FileDesc * FileDesc_new(){  FileDesc * this = 0;    this = (FileDesc*)Object_new(sizeof(FileDesc),(Destructor)&FileDesc_delete, (Copy_operator)&FileDesc_copy);  this->name = 0;  this->fullName = 0;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (289,1,140,0,288);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (140,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (290,1,141,0,289);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (141,'* 
  @brief TBD
  @public
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (291,2,100,0,290);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (100, 'PUBLIC void FileDesc_delete(FileDesc * this){  String_delete(this->fullName);  String_delete(this->name);  Object_delete(&this->object);}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (292,1,142,0,291);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (142,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (293,1,143,0,292);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (143,'* 
  @brief TBD
  @public
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (294,2,101,0,293);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (101, 'PUBLIC FileDesc * FileDesc_copy(FileDesc * this){  FileDesc * copy = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (295,1,144,0,294);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (144,' TODO: Not implemented ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (296,2,102,0,295);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (102, '    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (297,1,145,0,296);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (145,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (298,1,146,0,297);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (146,'* 
  @brief TBD
  @public
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (299,2,103,0,298);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (103, 'PUBLIC void FileDesc_setFullName(FileDesc * this, String * fullName){  this->fullName = fullName;  this->name = FileDesc_getBasename(this);}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (300,1,147,0,299);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (147,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (301,1,148,0,300);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (148,'* 
  @brief TBD
  @public
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (302,2,104,0,301);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (104, 'PUBLIC String * FileDesc_getFullName(FileDesc * this){  return this->fullName;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (303,1,149,0,302);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (149,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (304,1,150,0,303);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (150,'* 
  @brief TBD
  @public
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (305,2,105,0,304);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (105, 'PUBLIC String * FileDesc_getName(FileDesc * this){  return this->name;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (306,1,151,0,305);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (151,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (307,1,152,0,306);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (152,'* 
  @brief TBD
  @private
  @memberof FileDesc
*************************************************');
[DBUG] Count = 0




















[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (308,2,106,0,307);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (106, 'PRIVATE String * FileDesc_getBasename(FileDesc * this){  String * result = 0;    char * p = String_getBuffer(this->fullName) + String_getLength(this->fullName);    while (p>=String_getBuffer(this->fullName) )  {    if (*p=='/')     {      p++;      result = String_new(p);      break;    }    p--;  }    return result;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileMgr.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/FileMgr/FileMgr.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/FileMgr/FileMgr.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (309,1,153,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (153,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (310,1,154,0,309);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (154,'* 
  @file FileMgr.c
  
  @brief The FileMgr class manages a list of files contained
  in a group of locations.
  
  The class FileMgr is TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="FileMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE FileMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (311,3,51,0,310);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (51, 'FileMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileMgr.h
[INFO] Merged path: ./CommonLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileMgr.h
[INFO] Merged path: ./AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (312,1,155,0,311);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (155,' FileMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (313,2,107,0,312);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (107, '#ifndef _FILEMGR_H_#define _FILEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (314,3,52,0,313);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (52, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (315,1,156,0,314);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (156,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (316,2,108,0,315);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (108, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (317,1,157,0,316);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (157,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 314
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (318,3,53,0,314);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (53, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (319,1,158,0,318);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (158,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (320,2,109,0,319);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (109, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (321,3,54,0,320);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (54, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (322,1,159,0,321);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (159,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (323,2,110,0,322);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (110, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (324,1,160,0,323);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (160,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 321
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (325,2,111,0,321);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (111, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (326,1,161,0,325);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (161,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 318
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (327,3,55,0,318);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (55, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (328,1,162,0,327);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (162,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (329,2,112,0,328);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (112, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (330,3,56,0,329);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (56, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (331,1,163,0,330);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (163,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (332,2,113,0,331);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (113, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (333,1,164,0,332);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (164,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 330
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (334,2,114,0,330);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (114, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (335,1,165,0,334);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (165,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 327
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (336,2,115,0,327);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (115, 'typedef struct FileMgr FileMgr;PUBLIC void FileMgr_delete(FileMgr * this);PUBLIC FileMgr * FileMgr_copy(FileMgr * this);PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName);PUBLIC void FileMgr_close(FileMgr* this, String* fileName);PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location);PUBLIC char * FileMgr_getRootLocation(FileMgr* this);PUBLIC FileMgr* FileMgr_getRef();PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName);PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName);PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern);PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (337,1,166,0,336);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (166,' _FILEMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 311
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (338,3,57,0,311);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (57, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (339,1,167,0,338);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (167,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (340,2,116,0,339);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (116, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (341,3,58,0,340);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (58, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (342,1,168,0,341);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (168,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (343,2,117,0,342);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (117, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (344,1,169,0,343);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (169,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 341
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (345,2,118,0,341);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (118, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (346,1,170,0,345);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (170,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 338
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (347,3,59,0,338);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (59, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (348,1,171,0,347);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (171,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (349,2,119,0,348);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (119, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (350,3,60,0,349);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (60, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (351,1,172,0,350);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (172,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (352,2,120,0,351);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (120, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (353,1,173,0,352);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (173,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 350
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (354,2,121,0,350);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (121, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (355,1,174,0,354);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (174,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 347
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (356,3,61,0,347);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (61, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (357,1,175,0,356);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (175,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (358,2,122,0,357);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (122, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (359,3,62,0,358);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (62, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (360,1,176,0,359);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (176,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (361,2,123,0,360);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (123, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (362,1,177,0,361);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (177,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 359
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (363,2,124,0,359);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (124, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (364,1,178,0,363);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (178,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 356
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileDesc.h"
[DBUG] Length =11
[DBUG] INCLUDE FileDesc.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (365,3,63,0,356);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (63, 'FileDesc.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileDesc.h
[INFO] Merged path: ./CommonLib/include/FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileDesc.h
[INFO] Merged path: ./AppliLib/include/FileDesc.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileDesc.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (366,1,179,0,365);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (179,' FileDesc.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (367,2,125,0,366);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (125, '#ifndef _FILEDESC_H_#define _FILEDESC_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (368,3,64,0,367);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (64, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (369,1,180,0,368);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (180,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (370,2,126,0,369);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (126, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (371,1,181,0,370);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (181,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 368
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (372,3,65,0,368);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (65, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (373,1,182,0,372);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (182,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (374,2,127,0,373);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (127, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (375,3,66,0,374);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (66, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (376,1,183,0,375);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (183,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (377,2,128,0,376);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (128, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (378,1,184,0,377);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (184,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 375
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (379,2,129,0,375);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (129, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (380,1,185,0,379);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (185,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 372
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (381,2,130,0,372);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (130, 'typedef struct FileDesc FileDesc;PUBLIC FileDesc * FileDesc_new();PUBLIC void FileDesc_delete(FileDesc * this);PUBLIC FileDesc * FileDesc_copy(FileDesc * this);PUBLIC void FileDesc_setFullName(FileDesc * this, String * fullName);PUBLIC String * FileDesc_getFullName(FileDesc * this);PUBLIC void FileDesc_setName(FileDesc * this, String * name);PUBLIC String * FileDesc_getName(FileDesc * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (382,1,186,0,381);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (186,' _FILEDESC_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 365
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (383,3,67,0,365);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (67, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (384,1,187,0,383);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (187,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (385,2,131,0,384);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (131, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (386,3,68,0,385);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (68, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (387,1,188,0,386);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (188,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (388,2,132,0,387);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (132, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (389,1,189,0,388);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (189,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 386
[DBUG] POP State Stack Pointer = 34
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (390,2,133,0,386);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (133, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (391,1,190,0,390);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (190,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 383
[DBUG] POP State Stack Pointer = 36
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (392,3,69,0,383);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (69, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (393,1,191,0,392);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (191,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (394,3,70,0,393);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (70, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (395,1,192,0,394);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (192,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (396,2,134,0,395);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (134, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (397,1,193,0,396);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (193,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 394
[DBUG] POP State Stack Pointer = 38
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (398,2,135,0,394);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (135, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 392
[DBUG] POP State Stack Pointer = 40
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<unistd.h>
[DBUG] Length =9
[DBUG] INCLUDE unistd.h!!!
[NORM] Grammar2.lex.c: Cannot find unistd.h

[DBUG] File name =<dirent.h>
[DBUG] Length =9
[DBUG] INCLUDE dirent.h!!!
[NORM] Grammar2.lex.c: Cannot find dirent.h

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (399,1,194,0,392);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (194,'#include <stat.h>');
[DBUG] Count = 0
[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (400,2,136,0,399);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (136, '#define FILEMGR_MAX_PATH (1024)');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (401,1,195,0,400);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (195,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (402,1,196,0,401);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (196,'*
  @class FileMgr
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (403,2,137,0,402);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (137, 'struct FileMgr{  Object object;  List * files;  List * directories;  char rootLocation[FILEMGR_MAX_PATH];};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (404,1,197,0,403);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (197,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (405,1,198,0,404);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (198,'*
  @private
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (406,2,138,0,405);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (138, 'PRIVATE FileMgr * fileMgr = 0;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (407,1,199,0,406);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (199,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (408,1,200,0,407);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (200,'*
  @private
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (409,2,139,0,408);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (139, 'PRIVATE void FileMgr_mergePath(FileMgr* this, String* path1, String* path2);PRIVATE void FileMgr_listFiles(FileMgr * this, String * directory);PRIVATE FileDesc * FileMgr_isManaged(FileMgr * this, String * fullName);PRIVATE unsigned int FileMgr_existFS(FileMgr * this, String * fullName);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (410,1,201,0,409);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (201,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (411,1,202,0,410);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (202,'* 
  @brief Create an instance of the class FileMgr.
  @private
  @memberof FileMgr
  @return New instance.
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (412,2,140,0,411);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (140, 'PRIVATE FileMgr * FileMgr_new(){  FileMgr * this = 0;    this = (FileMgr*)Object_new(sizeof(FileMgr),(Destructor)&FileMgr_delete, (Copy_operator)&FileMgr_copy);  this->files = List_new();  this->directories = List_new();  if (getcwd(this->rootLocation, FILEMGR_MAX_PATH)==0)  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (413,1,203,0,412);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (203,' Error case: Cannot obtain the FileMgr root location. ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (414,2,141,0,413);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (141, '    Error_new(ERROR_FATAL, "Cannot obtain the FileMgr root location");  }    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (415,1,204,0,414);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (204,' TODO: Check this->rootLocation has a valid length ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (416,2,142,0,415);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (142, '    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (417,1,205,0,416);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (205,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (418,1,206,0,417);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (206,'* 
  @brief Delete an instance of the class FileMgr.
  @public
  @memberof FileMgr
*************************************************');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (419,2,143,0,418);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (143, 'PUBLIC void FileMgr_delete(FileMgr * this){  if (this!=0)  {    if (this->object.refCount==1)    {      List_delete(this->files);      List_delete(this->directories);      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (420,1,207,0,419);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (207,' TODO: String_delete(this->rootLocation);');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (421,2,144,0,420);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (144, '      Object_delete(&this->object);      fileMgr = 0;    }    else if (this->object.refCount>1)    {      this->object.refCount--;    }  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (422,1,208,0,421);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (208,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (423,1,209,0,422);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (209,'* 
  @brief Copy an instance of the class FileMgr.
  @public
  @memberof FileMgr
  @return New instance
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (424,2,145,0,423);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (145, 'PUBLIC FileMgr * FileMgr_copy(FileMgr * this){  this->object.refCount++;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (425,1,210,0,424);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (210,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (426,1,211,0,425);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (211,'* 
  @brief Get a reference to the singleton instance of FileMgr.
  @public
  @memberof FileMgr
  @return Reference to the singleton.
*************************************************');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (427,2,146,0,426);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (146, 'PUBLIC FileMgr* FileMgr_getRef(){  if (fileMgr==0)  {    fileMgr = FileMgr_new();  }  else  {    fileMgr->object.refCount++;  }    return fileMgr;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (428,1,212,0,427);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (212,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (429,1,213,0,428);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (213,'* 
  @brief TBD
  @public
  @memberof FileMgr
  @return Status.
*************************************************');
[DBUG] Count = 0


















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (430,2,147,0,429);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (147, 'PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location){  unsigned int result = 0;    String * newLocation = String_new(location);  String * currentLocation = String_new(this->rootLocation);  FileMgr_mergePath(this, currentLocation, newLocation);    Memory_copy(this->rootLocation, String_getBuffer(currentLocation), FILEMGR_MAX_PATH);    String_delete(newLocation);  String_delete(currentLocation);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (431,1,214,0,430);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (214,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (432,1,215,0,431);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (215,'* 
  @brief TBD
  @public
  @memberof FileMgr
  @return Status.
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (433,2,148,0,432);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (148, 'PUBLIC char * FileMgr_getRootLocation(FileMgr* this){  char * result = this->rootLocation;    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (434,1,216,0,433);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (216,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (435,1,217,0,434);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (217,'* 
  @brief Add all files in the given directory to the list of managed files.
  @public
  @memberof FileMgr
  @return Status.
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (436,2,149,0,435);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (149, 'PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName){  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (437,1,218,0,436);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (218,'static int nbCalls = 0;');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (438,2,150,0,437);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (150, '    unsigned int result = 0;  String * fullPathDirectory = String_new(this->rootLocation);  String * addedDirectory = String_new(directoryName);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (439,1,219,0,438);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (219,' TODO: Check directoryName has a valid length ');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (440,2,151,0,439);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (151, '    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (441,1,220,0,440);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (220,' Merge directory name with current path to have the full path of the directory');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (442,2,152,0,441);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (152, '  FileMgr_mergePath(this, fullPathDirectory, addedDirectory);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (443,1,221,0,442);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (221,' TODO: Check if merged path exist on filesystem ');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (444,2,153,0,443);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (153, '    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (445,1,222,0,444);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (222,' add directory to this->directories ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (446,2,154,0,445);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (154, '  List_insertHead(this->directories,fullPathDirectory);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (447,1,223,0,446);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (223,' For each directory ');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (448,2,155,0,447);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (155, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (449,1,224,0,448);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (224,' List_forEach(this->directories, FileMgr_listFiles, this); ');
[DBUG] Count = 0






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (450,2,156,0,449);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (156, '  fullPathDirectory = List_getNext(this->directories);    while (fullPathDirectory!=0)  {    FileMgr_listFiles(this, fullPathDirectory);    fullPathDirectory = List_getNext(this->directories);    #if 0    if (String_getLength(fullPathDirectory)>1000)     {      printf("String length = %d\n", String_getLength(fullPathDirectory));      printf("Nb calls = %d\n", nbCalls);    }    nbCalls++;    #endif  }    String_delete(addedDirectory);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (451,1,225,0,450);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (225,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (452,1,226,0,451);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (226,'* 
  @brief Add a files to the list of managed files.
  @public
  @memberof FileMgr
  @return Status.
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (453,2,157,0,452);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (157, 'PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName){  String * result = 0;  FileDesc * fileDesc = 0;  String * fullName = String_new(this->rootLocation);  String * addedFile = String_new(fileName);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (454,1,227,0,453);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (227,' Merge current path with fileName ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (455,2,158,0,454);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (158, '  FileMgr_mergePath(this, fullName, addedFile);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (456,1,228,0,455);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (228,' Check file is not already managed ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (457,2,159,0,456);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (159, '  if (!FileMgr_isManaged(this, fullName))  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (458,1,229,0,457);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (229,' Check file exists on filesystem ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (459,2,160,0,458);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (160, '    if (FileMgr_existFS(this, fullName))    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (460,1,230,0,459);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (230,' If exists add to the list of files ');
[DBUG] Count = 0





















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (461,2,161,0,460);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (161, '      fileDesc = FileDesc_new();      FileDesc_setFullName(fileDesc, fullName);      List_insertHead(this->files, (void*)fileDesc);      result = fullName;    }    else    {      String_delete(fullName);    }  }  else  {    String_delete(fullName);  }    String_delete(addedFile);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (462,1,231,0,461);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (231,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (463,1,232,0,462);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (232,'* 
  @brief Load a managed file into a String.
  @public
  @memberof FileMgr
  @parameter File Name
  @return Content of file.
*************************************************');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (464,2,162,0,463);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (162, 'PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName){  String * result = 0;  String * name = String_new(fileName);  FILE * f = NULL;  FileDesc * fd = NULL;    char * buffer = 0;  unsigned int length = 0;    fd = FileMgr_isManaged(this, name);    if (fd)  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (465,1,233,0,464);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (233,' Open file ');
[DBUG] Count = 0





















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (466,2,163,0,465);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (163, '    f=fopen(String_getBuffer(FileDesc_getFullName(fd)),"rb");    if (f)    {	    fseek(f, 0, SEEK_END);	    length=ftell(f);	    fseek(f, 0 , SEEK_SET);        	    buffer = (char*)Memory_alloc(length+1);      if (buffer)      {        fread(buffer, length, 1, f);        buffer[length] = 0;        result = String_new(0);        String_setBuffer(result, buffer);	      fclose(f);      }    }  }  else  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (467,1,234,0,466);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (234,' ERROR case: File is not in the list of managed files ');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (468,2,164,0,467);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (164, '    Error_new(ERROR_FATAL, "File is not in the list of managed files.");  }    String_delete(name);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (469,1,235,0,468);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (235,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (470,1,236,0,469);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (236,'* 
  @brief TBD
  @public
  @memberof FileMgr
  @return TBD
*************************************************');
[DBUG] Count = 0



























































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (471,2,165,0,470);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (165, 'PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern){  List * result = List_new();  FileDesc * fd = 0;  String * s = 0;    while ((fd = List_getNext(this->files))!=0)  {    if (String_matchWildcard(FileDesc_getName(fd), pattern))    {      s = String_getRef(FileDesc_getFullName(fd));      List_insertHead(result, s);    }  }    return result;}PRIVATE void FileMgr_listFiles(FileMgr * this, String * directory){  struct dirent *directoryEntry = NULL;  DIR * dir = 0;  FileDesc * fileDesc= 0;  String * fullName = 0;  String * name = 0;    dir = opendir(String_getBuffer(directory));    if (dir!=0)  {    while ((directoryEntry = readdir(dir)) != NULL)     {      if (directoryEntry->d_type != DT_DIR)      {        fileDesc = FileDesc_new();        fullName = String_copy(directory);        name = String_new(directoryEntry->d_name);        FileMgr_mergePath(this, fullName, name);        FileDesc_setFullName(fileDesc, fullName);        List_insertHead(this->files, (void*)fileDesc);        String_delete(name);      }      else      {        if ((Memory_ncmp(directoryEntry->d_name,"..",2)==0)            && (Memory_ncmp(directoryEntry->d_name,".",1)==0))        {          fullName = String_copy(directory);          name = String_new(directoryEntry->d_name);          FileMgr_mergePath(this, fullName, name);          List_insertHead(this->directories,fullName);          String_delete(name);        }      }    }  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (472,1,237,0,471);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (237,'*************************************************
 @brief FileMgr_mergePath
 
 This function merges 2 paths into one.
 
 @param [in/out] path1: String* - Path to merge
 @param [in]     path2: String* - Path to merge
 @return: none
*************************************************');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (473,2,166,0,472);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (166, 'PRIVATE void FileMgr_mergePath(FileMgr* this, String* path1, String* path2){  char * p2_idx = 0;  char * p1_idx = 0;  char buffer[FILEMGR_MAX_PATH];  char * mergedPath = 0;  unsigned int bufferLength = String_getLength(path1);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (474,1,238,0,473);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (238,' TODO: CHeck initial condition of validity length > 0');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (475,2,167,0,474);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (167, '    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (476,1,239,0,475);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (239,' TODO: check if path2 is absolute path in which case copy and return ');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (477,2,168,0,476);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (168, '    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (478,1,240,0,477);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (240,' Initialise result buffer');
[DBUG] Count = 0













[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (479,2,169,0,478);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (169, '  Memory_copy(buffer, String_getBuffer(path1), bufferLength);    p1_idx = buffer + String_getLength(path1);    if (*(p1_idx-1)  != '/')  {    *p1_idx = '/';    p1_idx++;  }   *p1_idx = 0;    for (p2_idx=String_getBuffer(path2); p2_idx<(String_getBuffer(path2)+String_getLength(path2)); p2_idx++)  {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (480,1,241,0,479);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (241,'Take ../ into account');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (481,2,170,0,480);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (170, '      if (Memory_ncmp(p2_idx, "..", 2) == 1)         ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (482,1,242,0,481);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (242,'((memcmp(p2_idx, "..",2)==0) && (p2_idx == (String_getBuffer(path2)+String_getLength(path2)))))');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (483,2,171,0,482);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (171, '      {        p1_idx = p1_idx - 2;        while ((*p1_idx != '/') && (p1_idx > buffer))        {          p1_idx--;        }        p1_idx++;        p2_idx = p2_idx + 2;      }      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (484,1,243,0,483);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (243,'Ignore ./ in path2');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (485,2,172,0,484);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (172, '      else if ((Memory_ncmp(p2_idx, "./", 2) == 1) ||                 ((Memory_ncmp(p2_idx, ".", 1) == 1) && (p2_idx == (String_getBuffer(path2)+String_getLength(path2)-1))))      {        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (486,1,244,0,485);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (244,'p1_idx = p1_idx - 1;');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (487,2,173,0,486);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (173, '        p2_idx = p2_idx + 1;      }      else      {        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (488,1,245,0,487);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (245,'p2_idx = p2_idx + 1;');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (489,2,174,0,488);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (174, '        *p1_idx = *p2_idx;        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (490,1,246,0,489);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (246,'*p1_idx = '/';');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (491,2,175,0,490);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (175, '        p1_idx++;      }  }    *p1_idx = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (492,1,247,0,491);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (247,'Place merged path into path1');
[DBUG] Count = 0













[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (493,2,176,0,492);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (176, '  mergedPath = (char *)Memory_alloc(p1_idx - buffer+1);  Memory_copy(mergedPath, buffer, p1_idx-buffer+1);    String_setBuffer(path1, mergedPath);    if (String_getLength(path1)>1000)   {    printf("String length = %d\n", String_getLength(path1));    printf("Str length = %d\n", Memory_len(String_getBuffer(path1)));  }  Error_new(ERROR_INFO,"Merged path: %s\n", buffer);}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (494,1,248,0,493);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (248,'*************************************************
 @brief FileMgr_searchFile
 
 This function search for a file in the file of file by its name
 or by its partial path.
 
 @memberof FileMgr
 @param [in]     name: String* - name of the file.
 @return: none
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (495,2,177,0,494);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (177, 'PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir){  String * result = 0;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (496,1,249,0,495);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (249,'String * temp = 0;');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (497,2,178,0,496);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (178, '  String * d = 0;  FileDesc * c = 0;  unsigned int isFound = 0;  String * fullPath = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (498,1,250,0,497);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (250,' For each directory in preferred list ');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (499,2,179,0,498);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (179, '  while (((d = List_getNext(preferredDir))!=0)&&(!isFound))  {    fullPath = String_new(this->rootLocation);    FileMgr_mergePath(this, d, name);    FileMgr_mergePath(this, fullPath, d);        c=FileMgr_isManaged(this, fullPath);    if (c!=0)    {      isFound = 1;      result = FileDesc_getFullName((FileDesc*)c);    }    String_delete(fullPath);  }    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (500,1,251,0,499);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (251,' If more than one file was found matching return 0 ');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (501,2,180,0,500);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (180, '  if (isFound == 0)  {    return 0;  }    if (isFound > 1)  {    Error_new(ERROR_INFO,"Several managed files match the name %s\n", String_getBuffer(name));    return 0;  }    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (502,1,252,0,501);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (252,'*************************************************
 @brief FileMgr_mergePath
 
 This function merges 2 paths into one.
 
 @param [in/out] path1: String* - Path to merge
 @param [in]     path2: String* - Path to merge
 @return: none
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (503,2,181,0,502);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (181, 'PRIVATE FileDesc * FileMgr_isManaged(FileMgr * this, String * fullName){  FileDesc * result = 0;  FileDesc * fd = 0;  unsigned int isFound = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (504,1,253,0,503);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (253,' Find file in list ');
[DBUG] Count = 0




































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (505,2,182,0,504);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (182, '  while ((fd = List_getNext(this->files))!=0)  {    if (String_isEqual(FileDesc_getFullName(fd), fullName))    {      isFound ++;      result = fd;      Error_new(ERROR_DBG,"Matched %s\n", String_getBuffer(FileDesc_getFullName(fd)));    }  }    if (isFound==0)  {    result = 0;  }  if (isFound > 1)  {    result = 0;  }    return result;}PRIVATE unsigned int FileMgr_existFS(FileMgr * this, String * fullName){  unsigned int result = 0;  FILE * f;  f=fopen(String_getBuffer(fullName),"rb");  if (f)   {    result = 1;    fclose(f);  }  return result;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/TimeMgr/Timer.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/TimeMgr/Timer.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/TimeMgr/Timer.c');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate

^
syntax error
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/TimeMgr/TimeMgr.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/TimeMgr/TimeMgr.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/TimeMgr/TimeMgr.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (506,1,254,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (254,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (507,1,255,0,506);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (255,'* 
  @file TimeMgr.c
  
  @brief This file implements the class TimeMgr
  
  The class TimeMgr is TBD
*************************************************');
[DBUG] Count = 0

[DBUG] File name ="TimeMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE TimeMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (508,3,71,0,507);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (71, 'TimeMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./TimeMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/TimeMgr.h
[INFO] Merged path: ./CommonLib/include/TimeMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/TimeMgr.h
[INFO] Merged path: ./AppliLib/include/TimeMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/TimeMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/TimeMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/TimeMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (509,1,256,0,508);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (256,' TimeMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (510,2,183,0,509);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (183, '#ifndef _TIMEMGR_H_#define _TIMEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (511,3,72,0,510);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (72, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (512,1,257,0,511);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (257,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (513,2,184,0,512);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (184, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (514,1,258,0,513);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (258,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 511
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (515,2,185,0,511);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (185, 'typedef struct TimeMgr TimeMgr;PUBLIC void TimeMgr_delete(TimeMgr * this);PUBLIC TimeMgr * TimeMgr_copy(TimeMgr * this);PUBLIC TimeMgr * TimeMgr_getRef();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (516,1,259,0,515);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (259,' _TIMEMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 508
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Timer.h"
[DBUG] Length =8
[DBUG] INCLUDE Timer.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (517,3,73,0,508);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (73, 'Timer.h');
[DBUG] Count = 0
[INFO] Merged path: ./Timer.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Timer.h
[INFO] Merged path: ./CommonLib/include/Timer.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Timer.h
[INFO] Merged path: ./AppliLib/include/Timer.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/Timer.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/Timer.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/Timer.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 517
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (518,3,74,0,517);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (74, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (519,1,260,0,518);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (260,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (520,2,186,0,519);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (186, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (521,3,75,0,520);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (75, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (522,1,261,0,521);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (261,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (523,2,187,0,522);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (187, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (524,1,262,0,523);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (262,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 521
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (525,2,188,0,521);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (188, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (526,1,263,0,525);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (263,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 518
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (527,3,76,0,518);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (76, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (528,1,264,0,527);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (264,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (529,2,189,0,528);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (189, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (530,3,77,0,529);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (77, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (531,1,265,0,530);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (265,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (532,2,190,0,531);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (190, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (533,1,266,0,532);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (266,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 530
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (534,2,191,0,530);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (191, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (535,1,267,0,534);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (267,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 527
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (536,1,268,0,527);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (268,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (537,1,269,0,536);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (269,'*
  @class TimeMgr
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (538,2,192,0,537);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (192, 'struct TimeMgr{  List * timers;}; ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (539,1,270,0,538);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (270,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (540,1,271,0,539);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (271,'*
  @private
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (541,2,193,0,540);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (193, 'PRIVATE TimeMgr * TimeMgr_new(){  TimeMgr * this = 0;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (542,1,272,0,541);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (272,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (543,1,273,0,542);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (273,'* 
  @brief TBD
  @public
  @memberof TimeMgr
*************************************************');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (544,2,194,0,543);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (194, 'PUBLIC void TimeMgr_delete(TimeMgr * this){}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (545,1,274,0,544);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (274,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (546,1,275,0,545);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (275,'*
  @brief TBD
  @public
  @memberof TimeMgr
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (547,2,195,0,546);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (195, 'PUBLIC TimeMgr * TimeMgr_copy(TimeMgr * this){  TimeMgr * copy = 0;    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (548,1,276,0,547);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (276,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (549,1,277,0,548);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (277,'*
  @brief TBD
  @public
  @memberof TimeMgr
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (550,2,196,0,549);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (196, 'PUBLIC TimeMgr * TimeMgr_getRef(){  TimeMgr * result = 0;    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (551,1,278,0,550);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (278,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (552,1,279,0,551);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (279,'* 
  @brief TBD
  @public
  @memberof TimeMgr
*************************************************');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (553,2,197,0,552);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (197, 'PUBLIC void TimeMgr_createTimer(TimeMgr * this, String * s){}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (554,1,280,0,553);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (280,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (555,1,281,0,554);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (281,'* 
  @brief TBD
  @public
  @memberof TimeMgr
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (556,2,198,0,555);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (198, 'PUBLIC void TimeMgr_timeStamp(TimeMgr * this, String * s){  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (557,1,282,0,556);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (282,' Find timer s ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (558,2,199,0,557);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (199, '  }');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (559,1,283,0,558);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (283,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (560,1,284,0,559);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (284,'* 
  @brief TBD
  @public
  @memberof TimeMgr
*************************************************');
[DBUG] Count = 0



[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (561,2,200,0,560);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (200, 'PUBLIC void TimeMgr_report(TimeMgr * this){}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/OptionMgr/OptionMgr.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/OptionMgr/OptionMgr.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/OptionMgr/OptionMgr.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (562,1,285,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (285,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (563,1,286,0,562);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (286,'* 
  @file OptionMgr.c
  
  @brief The OptionMgr class manages the application configuration.
  
  The class OptionMgr is TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="OptionMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE OptionMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (564,3,78,0,563);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (78, 'OptionMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/OptionMgr.h
[INFO] Merged path: ./CommonLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/OptionMgr.h
[INFO] Merged path: ./AppliLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (565,1,287,0,564);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (287,' OptionMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (566,2,201,0,565);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (201, '#ifndef _OPTIONMGR_H_#define _OPTIONMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (567,3,79,0,566);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (79, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (568,1,288,0,567);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (288,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (569,2,202,0,568);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (202, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (570,1,289,0,569);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (289,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 567
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (571,3,80,0,567);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (80, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (572,1,290,0,571);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (290,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (573,2,203,0,572);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (203, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (574,3,81,0,573);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (81, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (575,1,291,0,574);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (291,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (576,2,204,0,575);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (204, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (577,1,292,0,576);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (292,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 574
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (578,2,205,0,574);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (205, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (579,1,293,0,578);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (293,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 571
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (580,2,206,0,571);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (206, 'typedef struct OptionMgr OptionMgr;PUBLIC void OptionMgr_delete(OptionMgr * this);PUBLIC OptionMgr * OptionMgr_copy(OptionMgr * this);PUBLIC PUBLIC OptionMgr* OptionMgr_getRef();PUBLIC String * OptionMgr_getOption(OptionMgr * this, const char * name);PUBLIC void OptionMgr_setOption(OptionMgr * this, const char * optionName, String * value);PUBLIC unsigned int OptionMgr_readFromFile(OptionMgr * this);PUBLIC unsigned int OptionMgr_readFromCmdLine(OptionMgr * this, const int argc, const char ** argv);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (581,1,294,0,580);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (294,' _OPTIONMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 564
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (582,3,82,0,564);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (82, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (583,1,295,0,582);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (295,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (584,2,207,0,583);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (207, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (585,3,83,0,584);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (83, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (586,1,296,0,585);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (296,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (587,2,208,0,586);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (208, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (588,1,297,0,587);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (297,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 585
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (589,2,209,0,585);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (209, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (590,1,298,0,589);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (298,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 582
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (591,3,84,0,582);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (84, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (592,1,299,0,591);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (299,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (593,2,210,0,592);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (210, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (594,3,85,0,593);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (85, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (595,1,300,0,594);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (300,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (596,2,211,0,595);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (211, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (597,1,301,0,596);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (301,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 594
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (598,2,212,0,594);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (212, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (599,1,302,0,598);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (302,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 591
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Map.h"
[DBUG] Length =6
[DBUG] INCLUDE Map.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (600,3,86,0,591);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (86, 'Map.h');
[DBUG] Count = 0
[INFO] Merged path: ./Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Map.h
[INFO] Merged path: ./CommonLib/include/Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (601,1,303,0,600);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (303,' Map.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (602,2,213,0,601);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (213, '#ifndef _MAP_H_#define _MAP_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (603,3,87,0,602);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (87, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (604,1,304,0,603);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (304,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (605,2,214,0,604);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (214, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (606,1,305,0,605);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (305,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 603
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (607,3,88,0,603);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (88, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 20
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (608,1,306,0,607);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (306,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (609,2,215,0,608);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (215, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (610,3,89,0,609);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (89, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 20
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (611,1,307,0,610);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (307,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (612,2,216,0,611);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (216, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (613,1,308,0,612);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (308,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 610
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (614,2,217,0,610);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (217, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (615,1,309,0,614);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (309,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 607
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (616,2,218,0,607);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (218, 'typedef struct Map Map;PUBLIC Map * Map_new();PUBLIC void Map_delete(Map * this);PUBLIC Map * Map_copy(Map * this);PUBLIC unsigned int Map_insert(Map * this,String* s, void * p);PUBLIC unsigned int Map_find(Map * this, String* s, void ** p);PUBLIC void Map_print(Map * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (617,1,310,0,616);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (310,' _MAP_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (618,2,219,0,617);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (219, '');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 600
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE FileMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (619,3,90,0,600);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (90, 'FileMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileMgr.h
[INFO] Merged path: ./CommonLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileMgr.h
[INFO] Merged path: ./AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (620,1,311,0,619);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (311,' FileMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (621,2,220,0,620);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (220, '#ifndef _FILEMGR_H_#define _FILEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (622,3,91,0,621);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (91, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (623,1,312,0,622);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (312,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (624,2,221,0,623);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (221, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (625,1,313,0,624);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (313,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 622
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (626,3,92,0,622);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (92, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (627,1,314,0,626);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (314,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (628,2,222,0,627);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (222, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (629,3,93,0,628);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (93, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (630,1,315,0,629);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (315,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (631,2,223,0,630);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (223, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (632,1,316,0,631);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (316,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 629
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (633,2,224,0,629);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (224, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (634,1,317,0,633);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (317,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 626
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (635,3,94,0,626);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (94, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 32
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (636,1,318,0,635);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (318,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (637,2,225,0,636);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (225, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (638,3,95,0,637);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (95, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 32
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (639,1,319,0,638);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (319,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (640,2,226,0,639);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (226, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (641,1,320,0,640);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (320,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 638
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (642,2,227,0,638);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (227, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (643,1,321,0,642);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (321,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 635
[DBUG] POP State Stack Pointer = 34
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (644,2,228,0,635);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (228, 'typedef struct FileMgr FileMgr;PUBLIC void FileMgr_delete(FileMgr * this);PUBLIC FileMgr * FileMgr_copy(FileMgr * this);PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName);PUBLIC void FileMgr_close(FileMgr* this, String* fileName);PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location);PUBLIC char * FileMgr_getRootLocation(FileMgr* this);PUBLIC FileMgr* FileMgr_getRef();PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName);PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName);PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern);PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (645,1,322,0,644);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (322,' _FILEMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 619
[DBUG] POP State Stack Pointer = 36
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (646,3,96,0,619);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (96, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (647,1,323,0,646);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (323,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (648,2,229,0,647);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (229, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (649,3,97,0,648);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (97, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (650,1,324,0,649);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (324,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (651,2,230,0,650);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (230, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (652,1,325,0,651);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (325,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 649
[DBUG] POP State Stack Pointer = 38
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (653,2,231,0,649);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (231, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (654,1,326,0,653);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (326,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 646
[DBUG] POP State Stack Pointer = 40
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (655,3,98,0,646);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (98, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 42
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (656,1,327,0,655);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (327,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (657,3,99,0,656);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (99, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 42
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (658,1,328,0,657);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (328,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (659,2,232,0,658);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (232, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (660,1,329,0,659);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (329,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 657
[DBUG] POP State Stack Pointer = 42
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (661,2,233,0,657);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (233, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 655
[DBUG] POP State Stack Pointer = 44
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (662,1,330,0,655);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (330,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (663,1,331,0,662);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (331,'*
  @class OptionMgr
*************************************************');
[DBUG] Count = 0













[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (664,2,234,0,663);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (234, 'struct OptionMgr{  Object object;  Map * options;};struct OptionDefault{  char * name;  char * flag;  char * value;};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (665,1,332,0,664);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (332,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (666,1,333,0,665);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (333,'*
  @private
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (667,2,235,0,666);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (235, 'PRIVATE OptionMgr * optionMgr = 0;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (668,1,334,0,667);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (334,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (669,1,335,0,668);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (335,'*
  @private
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (670,2,236,0,669);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (236, 'PRIVATE const struct OptionDefault optionDefault[] = {  {"DB Name","-o","test.db"},  {"Input Directory","-d","."},  {"Config file name","-c","sparse.txt"}};PRIVATE unsigned int OptionMgr_parseFile(OptionMgr * this, String * fileContent);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (671,1,336,0,670);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (336,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (672,1,337,0,671);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (337,'* 
  @brief TBD
  @private
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (673,2,237,0,672);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (237, 'PRIVATE OptionMgr * OptionMgr_new(){  OptionMgr * this = 0;  int j = 0;  String * optionName = 0;  String * optionValue = 0;  const int nbOptions = sizeof(optionDefault)/sizeof(struct OptionDefault);  this = (OptionMgr*)Object_new(sizeof(OptionMgr),(Destructor)&OptionMgr_delete, (Copy_operator)&OptionMgr_copy);  this->options = Map_new();    for (j=0; j<nbOptions; j++)  {    optionName = String_new(optionDefault[j].name);    optionValue = String_new(optionDefault[j].value);    Map_insert(this->options, optionName, optionValue);  }  return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (674,1,338,0,673);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (338,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (675,1,339,0,674);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (339,'* 
  @brief TBD
  @public
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (676,2,238,0,675);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (238, 'PUBLIC void OptionMgr_delete(OptionMgr * this){  if (this!=0)  {    this->object.refCount = this->object.refCount - 1;      if (this->object.refCount == 0)    {      Map_delete(this->options);      Object_delete(&this->object);      this = 0;    }  }    }');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (677,1,340,0,676);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (340,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (678,1,341,0,677);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (341,'* 
  @brief TBD
  @public
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (679,2,239,0,678);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (239, 'PUBLIC OptionMgr * OptionMgr_copy(OptionMgr * this){  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (680,1,342,0,679);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (342,' TODO: refcount++ ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (681,2,240,0,680);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (240, '  return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (682,1,343,0,681);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (343,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (683,1,344,0,682);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (344,'* 
  @brief TBD
  @details TBD
  @public
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (684,2,241,0,683);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (241, 'PUBLIC OptionMgr* OptionMgr_getRef(){   if (optionMgr==0)  {    optionMgr = OptionMgr_new();  }  else  {    optionMgr->object.refCount++;  }    return optionMgr;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (685,1,345,0,684);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (345,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (686,1,346,0,685);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (346,'* 
  @brief TBD
  @public
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0













[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (687,2,242,0,686);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (242, 'PUBLIC String * OptionMgr_getOption(OptionMgr * this, const char * name){  String * result = 0;  String * optionName = String_new(name);  Map_find(this->options, optionName, (void**)&result);   String_delete(optionName);  return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (688,1,347,0,687);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (347,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (689,1,348,0,688);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (348,'* 
  @brief TBD
  @public
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (690,2,243,0,689);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (243, 'PUBLIC void OptionMgr_setOption(OptionMgr * this, const char * optionName, String * value){  String * option = String_new(optionName);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (691,1,349,0,690);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (349,' find optionName in this->map ');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (692,2,244,0,691);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (244, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (693,1,350,0,692);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (350,' if not found insert value ');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (694,2,245,0,693);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (245, '  Map_insert(this->options, option, value);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (695,1,351,0,694);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (351,' else modify value found in map ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (696,2,246,0,695);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (246, '}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (697,1,352,0,696);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (352,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (698,1,353,0,697);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (353,'* 
  @brief TBD
  @public
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (699,2,247,0,698);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (247, 'PUBLIC unsigned int OptionMgr_readFromFile(OptionMgr * this){  unsigned int result = 0;  FileMgr * fileMgr = FileMgr_getRef();  String * fileName = 0;  String * fileContent = 0;  String * path1 = 0;  String * fullPath = 0;    fileName = OptionMgr_getOption(this,"Config file name");  path1 = String_copy(fileName);  String_prepend(path1,"./");  if (fullPath = FileMgr_addFile(fileMgr, String_getBuffer(path1)))  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (700,1,354,0,699);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (354,' File exists and is managed ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (701,2,248,0,700);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (248, '    fileContent = FileMgr_load(fileMgr, String_getBuffer(fullPath));    OptionMgr_parseFile(this, fileContent);  }  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (702,1,355,0,701);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (355,' TODO: Try home directory ');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (703,2,249,0,702);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (249, '    String_delete(path1);  String_delete(fileContent);  FileMgr_delete(fileMgr);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (704,1,356,0,703);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (356,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (705,1,357,0,704);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (357,'* 
  @brief TBD
  @public
  @memberof OptionMgr
  @param[in] argc Number of commandline arguments.
  @param[in] argv List os commandline arguments.
  @return Status of operation.
*************************************************');
[DBUG] Count = 0

































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (706,2,250,0,705);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (250, 'PUBLIC unsigned int OptionMgr_readFromCmdLine(OptionMgr * this, const int argc, const char ** argv){  unsigned int result = 0;  int i = 0, j = 0;  String * optionName = 0;  String * optionValue = 0;  unsigned int isFound = 0;    const int nbOptions = sizeof(optionDefault)/sizeof(struct OptionDefault);  for (i=1; i<argc; i++)  {    for (j=0; j<nbOptions; j++)    {      if (Memory_cmp(optionDefault[j].flag, (void*)argv[i]))      {        optionName = String_new(optionDefault[j].name);        if ((optionDefault[j].value!=0)&&((i+1)<=argc))        {          optionValue = String_new(argv[i+1]);          i++;        }        isFound = 1;        break;      }    }    if (isFound)    {      Map_insert(this->options, optionName, optionValue);    }    else    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (707,1,358,0,706);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (358,' Error case: Illegal arg ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (708,2,251,0,707);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (251, '      Error_new(ERROR_FATAL, "Illegal argument\n");    }  }    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (709,1,359,0,708);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (359,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (710,1,360,0,709);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (360,'* 
  @brief TBD
  @details TBD
  @private
  @memberof OptionMgr
*************************************************');
[DBUG] Count = 0













































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (711,2,252,0,710);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (252, 'PRIVATE unsigned int OptionMgr_parseFile(OptionMgr * this, String * fileContent){  unsigned int result = 0;  char * p = 0;  unsigned int idx = 0;  unsigned int length =0;  String * optionName = 0;  String * optionValue = 0;  unsigned int state = 0;    for (p = String_getBuffer(fileContent);       p < String_getBuffer(fileContent)+String_getLength(fileContent);       p++)  {    switch(state)    {      case 0:        if (*p=='[')         {          state = 1;          idx = p - String_getBuffer(fileContent) + 1;          length = 0;        }        break;      case 1:        if (*p==']')         {          state = 2;          optionName = String_subString(fileContent, idx, length);        }        else length++;        break;      case 2:        if (*p!=' ')         {          state = 3;          idx = p - String_getBuffer(fileContent);          length = 1;        }        break;      case 3:        if (*p=='\n')        {          state = 0;          ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (712,1,361,0,711);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (361,' TODO: Case of windows file ');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (713,2,253,0,712);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (253, '          optionValue = String_subString(fileContent, idx, length);        OptionMgr_setOption(optionMgr, String_getBuffer(optionName), optionValue);        String_delete(optionName);        }        else        {          length++;        }        break;      default:        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (714,1,362,0,713);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (362,' Error case : ');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (715,2,254,0,714);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (254, '        break;      }    }    if ((state == 1) || (state == 2))    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (716,1,363,0,715);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (363,' Error case: Syntax error ');
[DBUG] Count = 0












[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (717,2,255,0,716);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (255, '    }    else if (state == 3)    {      optionValue = String_subString(fileContent, idx, length);      OptionMgr_setOption(optionMgr, String_getBuffer(optionName), optionValue);      String_delete(optionName);    }      return result;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/FileReader/FileReader.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/FileReader/FileReader.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/FileReader/FileReader.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (718,1,364,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (364,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (719,1,365,0,718);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (365,'* 
  @file FileReader.c
 
  @brief This file contains the implementation for the class FileReader

  The class FileReader is TBD
 *************************************************');
[DBUG] Count = 0


[DBUG] File name ="FileReader.h"
[DBUG] Length =13
[DBUG] INCLUDE FileReader.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (720,3,100,0,719);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (100, 'FileReader.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileReader.h
[INFO] Merged path: ./CommonLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileReader.h
[INFO] Merged path: ./AppliLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileReader.h
[INFO] Merged path: ./ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (721,1,366,0,720);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (366,' FileReader.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (722,2,256,0,721);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (256, '#ifndef _FILEREADER_H_#define _FILEREADER_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (723,3,101,0,722);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (101, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (724,1,367,0,723);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (367,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (725,2,257,0,724);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (257, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (726,1,368,0,725);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (368,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 723
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (727,3,102,0,723);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (102, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (728,1,369,0,727);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (369,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (729,2,258,0,728);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (258, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (730,3,103,0,729);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (103, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (731,1,370,0,730);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (370,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (732,2,259,0,731);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (259, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (733,1,371,0,732);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (371,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 730
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (734,2,260,0,730);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (260, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (735,1,372,0,734);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (372,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 727
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (736,2,261,0,727);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (261, 'typedef struct FileReader FileReader;PUBLIC FileReader * FileReader_new();PUBLIC void FileReader_delete(FileReader * this);PUBLIC FileReader * FileReader_copy(FileReader * this);PUBLIC char * FileReader_getBuffer(FileReader * this);PUBLIC String * FileReader_getName(FileReader * this);PUBLIC char * FileReader_addFile(FileReader * this, String * fileName);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (737,1,373,0,736);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (373,' _FILEREADER_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 720
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (738,3,104,0,720);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (104, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (739,1,374,0,738);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (374,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (740,2,262,0,739);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (262, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (741,3,105,0,740);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (105, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (742,1,375,0,741);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (375,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (743,2,263,0,742);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (263, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (744,1,376,0,743);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (376,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 741
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (745,2,264,0,741);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (264, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (746,1,377,0,745);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (377,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 738
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (747,3,106,0,738);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (106, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (748,1,378,0,747);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (378,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (749,2,265,0,748);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (265, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (750,3,107,0,749);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (107, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (751,1,379,0,750);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (379,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (752,2,266,0,751);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (266, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (753,1,380,0,752);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (380,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 750
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (754,2,267,0,750);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (267, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (755,1,381,0,754);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (381,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 747
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE FileMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (756,3,108,0,747);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (108, 'FileMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileMgr.h
[INFO] Merged path: ./CommonLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileMgr.h
[INFO] Merged path: ./AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (757,1,382,0,756);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (382,' FileMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (758,2,268,0,757);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (268, '#ifndef _FILEMGR_H_#define _FILEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (759,3,109,0,758);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (109, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (760,1,383,0,759);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (383,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (761,2,269,0,760);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (269, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (762,1,384,0,761);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (384,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 759
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (763,3,110,0,759);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (110, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 20
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (764,1,385,0,763);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (385,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (765,2,270,0,764);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (270, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (766,3,111,0,765);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (111, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 20
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (767,1,386,0,766);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (386,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (768,2,271,0,767);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (271, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (769,1,387,0,768);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (387,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 766
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (770,2,272,0,766);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (272, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (771,1,388,0,770);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (388,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 763
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (772,3,112,0,763);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (112, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 24
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (773,1,389,0,772);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (389,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (774,2,273,0,773);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (273, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (775,3,113,0,774);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (113, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 24
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (776,1,390,0,775);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (390,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (777,2,274,0,776);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (274, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (778,1,391,0,777);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (391,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 775
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (779,2,275,0,775);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (275, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (780,1,392,0,779);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (392,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 772
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (781,2,276,0,772);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (276, 'typedef struct FileMgr FileMgr;PUBLIC void FileMgr_delete(FileMgr * this);PUBLIC FileMgr * FileMgr_copy(FileMgr * this);PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName);PUBLIC void FileMgr_close(FileMgr* this, String* fileName);PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location);PUBLIC char * FileMgr_getRootLocation(FileMgr* this);PUBLIC FileMgr* FileMgr_getRef();PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName);PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName);PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern);PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (782,1,393,0,781);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (393,' _FILEMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 756
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="OptionMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE OptionMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (783,3,114,0,756);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (114, 'OptionMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/OptionMgr.h
[INFO] Merged path: ./CommonLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/OptionMgr.h
[INFO] Merged path: ./AppliLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (784,1,394,0,783);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (394,' OptionMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (785,2,277,0,784);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (277, '#ifndef _OPTIONMGR_H_#define _OPTIONMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (786,3,115,0,785);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (115, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (787,1,395,0,786);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (395,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (788,2,278,0,787);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (278, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (789,1,396,0,788);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (396,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 786
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (790,3,116,0,786);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (116, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 32
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (791,1,397,0,790);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (397,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (792,2,279,0,791);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (279, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (793,3,117,0,792);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (117, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 32
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (794,1,398,0,793);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (398,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (795,2,280,0,794);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (280, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (796,1,399,0,795);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (399,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 793
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (797,2,281,0,793);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (281, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (798,1,400,0,797);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (400,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 790
[DBUG] POP State Stack Pointer = 34
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (799,2,282,0,790);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (282, 'typedef struct OptionMgr OptionMgr;PUBLIC void OptionMgr_delete(OptionMgr * this);PUBLIC OptionMgr * OptionMgr_copy(OptionMgr * this);PUBLIC PUBLIC OptionMgr* OptionMgr_getRef();PUBLIC String * OptionMgr_getOption(OptionMgr * this, const char * name);PUBLIC void OptionMgr_setOption(OptionMgr * this, const char * optionName, String * value);PUBLIC unsigned int OptionMgr_readFromFile(OptionMgr * this);PUBLIC unsigned int OptionMgr_readFromCmdLine(OptionMgr * this, const int argc, const char ** argv);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (800,1,401,0,799);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (401,' _OPTIONMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 783
[DBUG] POP State Stack Pointer = 36
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (801,3,118,0,783);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (118, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (802,1,402,0,801);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (402,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (803,2,283,0,802);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (283, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (804,3,119,0,803);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (119, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (805,1,403,0,804);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (403,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (806,2,284,0,805);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (284, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (807,1,404,0,806);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (404,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 804
[DBUG] POP State Stack Pointer = 38
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (808,2,285,0,804);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (285, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (809,1,405,0,808);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (405,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 801
[DBUG] POP State Stack Pointer = 40
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (810,3,120,0,801);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (120, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 42
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (811,1,406,0,810);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (406,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (812,3,121,0,811);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (121, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 42
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (813,1,407,0,812);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (407,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (814,2,286,0,813);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (286, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (815,1,408,0,814);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (408,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 812
[DBUG] POP State Stack Pointer = 42
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (816,2,287,0,812);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (287, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 810
[DBUG] POP State Stack Pointer = 44
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (817,2,288,0,810);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (288, 'struct IncludeInfo{  Object object;  String * pattern;  List * dirs;}; ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (818,1,409,0,817);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (409,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (819,1,410,0,818);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (410,'*
   @class FileReader
 *************************************************');
[DBUG] Count = 0














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (820,2,289,0,819);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (289, 'struct FileReader{  Object object;  List * buffers;  String * fileName;  String * currentBuffer;  List * preferredDirs;};PRIVATE void FileReader_getListPreferredDir(FileReader * this);PRIVATE void FileReader_deleteListPreferredDir(FileReader * this);PRIVATE void FileReader_printListPreferredDir(FileReader * this);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (821,1,411,0,820);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (411,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (822,1,412,0,821);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (412,'* 
  @brief Create a new FileReader object.
  @public
  @memberof FileReader
  @return Created FileReader object.
*************************************************');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (823,2,290,0,822);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (290, 'PUBLIC FileReader * FileReader_new(String * fileName){  FileReader * this = 0;  FileMgr * fileMgr = FileMgr_getRef();  String * newFileContent = 0;    this = (FileReader*)Object_new(sizeof(FileReader), (Destructor)&FileReader_delete, (Copy_operator)&FileReader_copy);      this->buffers = List_new();  this->preferredDirs = List_new();    this->fileName = fileName;  Error_new(ERROR_INFO, "FileReader_new: Processing file %s\n", String_getBuffer(this->fileName));    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (824,1,413,0,823);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (413,' Build list of all directories to be used to lookup additional files (include) ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (825,2,291,0,824);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (291, '  FileReader_getListPreferredDir(this);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (826,1,414,0,825);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (414,' associate buffer containing the file to the fileRead ');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (827,2,292,0,826);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (292, '  newFileContent = FileMgr_load(fileMgr, String_getBuffer(fileName));  List_insertHead(this->buffers, newFileContent);  this->currentBuffer = newFileContent;    FileMgr_delete(fileMgr);    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (828,1,415,0,827);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (415,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (829,1,416,0,828);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (416,'* 
  @brief Delete an instance of a FileReader object.
  @public
  @memberof FileReader
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (830,2,293,0,829);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (293, 'PUBLIC void FileReader_delete(FileReader * this){  if (this!=0)  {    List_delete(this->buffers);    FileReader_deleteListPreferredDir(this);    List_delete(this->preferredDirs); ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (831,1,417,0,830);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (417,'PROBLEM');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (832,2,294,0,831);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (294, '    Object_delete(&this->object);  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (833,1,418,0,832);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (418,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (834,1,419,0,833);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (419,'* 
  @brief Copy an instance of a FileReader object.
  @public
  @memberof FileReader
  @return New instance
*************************************************');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (835,2,295,0,834);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (295, 'PUBLIC FileReader * FileReader_copy(FileReader * this){  FileReader * copy = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (836,1,420,0,835);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (420,' copy = Object_copy(this); ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (837,2,296,0,836);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (296, '    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (838,1,421,0,837);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (421,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (839,1,422,0,838);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (422,'* 
  @brief Returns the buffer of a FileReader object.
  @public
  @memberof FileReader
  @return Buffer of characters
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (840,2,297,0,839);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (297, 'PUBLIC char * FileReader_getBuffer(FileReader * this){  char * result = 0;    result = String_getBuffer(this->currentBuffer);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (841,1,423,0,840);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (423,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (842,1,424,0,841);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (424,'* 
  @brief Returns the name of a FileReader object.
  @public
  @memberof FileReader
  @return File name
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (843,2,298,0,842);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (298, 'PUBLIC String * FileReader_getName(FileReader * this){  return this->fileName;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (844,1,425,0,843);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (425,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (845,1,426,0,844);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (426,'* 
  @brief Add a new file buffer for filename
  @public
  @memberof FileReader
  @return File buffer
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (846,2,299,0,845);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (299, 'PUBLIC char * FileReader_addFile(FileReader * this, String * fileName){  FileMgr * fileMgr = FileMgr_getRef();  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (847,1,427,0,846);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (427,' Not freed');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (848,2,300,0,847);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (300, '  List * dirList = 0;  String * fullPath = 0;  String * newFileContent = 0;  struct IncludeInfo * dirInfo = 0;  char * result = 0;    if (Memory_ncmp(String_getBuffer(fileName), "SdbRequest.h", 12))  {     Error_new(ERROR_DBG, "FileREader_addFile: Reached SdbRequest.h\n");  }    if (List_getSize(this->preferredDirs)==0)  {    Error_new(ERROR_FATAL, "FileReader_addFile: preferred search dirs is empty %s\n", String_getBuffer(this->fileName));  }  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (849,1,428,0,848);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (428,' Check in the fileName matches a pattern with a default search path ');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (850,2,301,0,849);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (301, '  while ((dirInfo = (struct IncludeInfo *)List_getNext(this->preferredDirs))!=0)  {    if (String_matchWildcard(fileName,String_getBuffer(dirInfo->pattern )))    {      dirList = List_copy(dirInfo->dirs);    }  }    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (851,1,429,0,850);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (429,' In all cases make sure the current dir. is in the search path ');
[DBUG] Count = 0














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (852,2,302,0,851);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (302, '  List_insertTail(dirList, String_new("."));    fullPath = FileMgr_searchFile(fileMgr, fileName, dirList);    if (fullPath != 0)  {    newFileContent = FileMgr_load(fileMgr, String_getBuffer(fullPath));    List_insertHead(this->buffers, newFileContent);    this->currentBuffer = newFileContent;    result = String_getBuffer(newFileContent);  }  else  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (853,1,430,0,852);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (430,' Error case: Can not find the include file ');
[DBUG] Count = 0
































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (854,2,303,0,853);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (303, '  }  List_delete(dirList);  FileMgr_delete(fileMgr);    return result;}PRIVATE void FileReader_getListPreferredDir(FileReader * this){  OptionMgr * optionMgr = OptionMgr_getRef();  String * optionValue = 0;  char * buf = 0;  unsigned i, j, state = 0;  struct IncludeInfo * prefDir = 0;    Error_new(ERROR_DBG,"FileReader_getLIstPreferredDir: Building preferred Dirs\n");    optionValue = OptionMgr_getOption(optionMgr, "Include Path");    if (optionValue!=0)  {    buf = String_getBuffer(optionValue);      for (i=0; i<String_getLength(optionValue);i++)    {      switch (state)      {        case 0:          if (buf[i]!='[')          {            ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (855,1,431,0,854);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (431,' TODO: Error case ');
[DBUG] Count = 0






























































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (856,2,304,0,855);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (304, '          }          else          {            state = 1;          }          break;        case 1:          if (buf[i]!=' ')           {            state = 2;            j = i;          }          break;        case 2:          if (buf[i]==' ')          {              prefDir = (struct IncludeInfo *)Object_new(sizeof(struct IncludeInfo), 0, 0);             prefDir->pattern = String_subString(optionValue, j, i-j);             prefDir->dirs = List_new();             state = 3;          }          break;        case 3:          if (buf[i]!=' ')          {            state =4;            j = i;          }          break;        case 4:          if (buf[i]==' ')           {            List_insertHead(prefDir->dirs, String_subString(optionValue, j, i-j));            state = 5;          }          if (buf[i]==']')          {            List_insertHead(prefDir->dirs, String_subString(optionValue, j, i-j));            state = 6;          }          break;        case 5:          if (buf[i]!=' ')          {            state = 4;            j = i;          }                break;        case 6:          List_insertHead(prefDir->dirs, String_subString(optionValue, j, i-j-1));          break;        default:          break;      }    }    if (state==6)    {      List_insertHead(this->preferredDirs, prefDir);    }    else    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (857,1,432,0,856);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (432,' TODO: Syntax error ');
[DBUG] Count = 0












































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (858,2,305,0,857);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (305, '    }  }  FileReader_printListPreferredDir(this);    OptionMgr_delete(optionMgr);}PRIVATE void FileReader_printListPreferredDir(FileReader * this){  struct IncludeInfo * dirInfo = 0;  String * dir = 0;    if (List_getSize(this->preferredDirs)==0)  {    Error_new(ERROR_FATAL, "FileReader_addFile: preferred search dirs is empty %s\n", String_getBuffer(this->fileName));  }  while ((dirInfo = (struct IncludeInfo *)List_getNext(this->preferredDirs))!=0)  {    Error_new(ERROR_DBG, "File search path for files of type %s\n",String_getBuffer(dirInfo->pattern));    while((dir = (String*)List_getNext(dirInfo->dirs))!=0)    {      Error_new(ERROR_DBG, "Directory: %s\n", String_getBuffer(dir));    }  }}PRIVATE void FileReader_deleteListPreferredDir(FileReader * this){  struct IncludeInfo * dirInfo = 0;    Error_new(ERROR_DBG,"FileReader_deleteLIstPreferredDir:\n");    dirInfo = List_removeHead(this->preferredDirs);  while (dirInfo!=0)  {    String_delete(dirInfo->pattern);    List_delete(dirInfo->dirs);    Object_delete(dirInfo);    dirInfo = List_removeHead(this->preferredDirs);  }}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/Grammar1/Grammar1.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (859,1,433,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (433,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (860,1,434,0,859);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (434,'* 
   @file Grammar1.c
			      
   @brief TBD
   @details TBD
*************************************************');
[DBUG] Count = 0

[DBUG] File name ="Grammar1.h"
[DBUG] Length =11
[DBUG] INCLUDE Grammar1.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (861,3,122,0,860);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (122, 'Grammar1.h');
[DBUG] Count = 0
[INFO] Merged path: ./Grammar1.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Grammar1.h
[INFO] Merged path: ./CommonLib/include/Grammar1.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Grammar1.h
[INFO] Merged path: ./AppliLib/include/Grammar1.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/Grammar1.h
[INFO] Merged path: ./ParseLib/include/Grammar1.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/Grammar1.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/Grammar1.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/Grammar1.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (862,1,435,0,861);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (435,' Grammar1.h ');
[DBUG] Count = 0




[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (863,2,306,0,862);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (306, 'typedef struct Grammar1 Grammar1;');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 861
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (864,3,123,0,861);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (123, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (865,1,436,0,864);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (436,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (866,2,307,0,865);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (307, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (867,3,124,0,866);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (124, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (868,1,437,0,867);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (437,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (869,2,308,0,868);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (308, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (870,1,438,0,869);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (438,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 867
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (871,2,309,0,867);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (309, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (872,1,439,0,871);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (439,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 864
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (873,3,125,0,864);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (125, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (874,1,440,0,873);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (440,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (875,2,310,0,874);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (310, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (876,3,126,0,875);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (126, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (877,1,441,0,876);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (441,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (878,2,311,0,877);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (311, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (879,1,442,0,878);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (442,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 876
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (880,3,127,0,876);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (127, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (881,1,443,0,880);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (443,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (882,2,312,0,881);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (312, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (883,3,128,0,882);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (128, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (884,1,444,0,883);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (444,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (885,2,313,0,884);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (313, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (886,1,445,0,885);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (445,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 883
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (887,2,314,0,883);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (314, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (888,1,446,0,887);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (446,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 880
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (889,2,315,0,880);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (315, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (890,1,447,0,889);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (447,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 873
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileReader.h"
[DBUG] Length =13
[DBUG] INCLUDE FileReader.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (891,3,129,0,873);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (129, 'FileReader.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileReader.h
[INFO] Merged path: ./CommonLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileReader.h
[INFO] Merged path: ./AppliLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileReader.h
[INFO] Merged path: ./ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] PUSH State Stack Pointer = 16
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (892,1,448,0,891);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (448,' FileReader.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (893,2,316,0,892);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (316, '#ifndef _FILEREADER_H_#define _FILEREADER_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (894,3,130,0,893);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (130, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 16
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (895,1,449,0,894);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (449,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (896,2,317,0,895);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (317, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (897,1,450,0,896);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (450,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 894
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (898,3,131,0,894);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (131, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (899,1,451,0,898);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (451,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (900,2,318,0,899);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (318, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (901,3,132,0,900);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (132, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (902,1,452,0,901);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (452,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (903,2,319,0,902);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (319, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (904,1,453,0,903);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (453,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 901
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (905,2,320,0,901);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (320, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (906,1,454,0,905);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (454,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 898
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (907,2,321,0,898);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (321, 'typedef struct FileReader FileReader;PUBLIC FileReader * FileReader_new();PUBLIC void FileReader_delete(FileReader * this);PUBLIC FileReader * FileReader_copy(FileReader * this);PUBLIC char * FileReader_getBuffer(FileReader * this);PUBLIC String * FileReader_getName(FileReader * this);PUBLIC char * FileReader_addFile(FileReader * this, String * fileName);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (908,1,455,0,907);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (455,' _FILEREADER_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 891
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9



























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (909,2,322,0,891);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (322, 'struct Grammar1{  Object object;};PUBLIC Grammar1 * Grammar1_new(FileReader * f, SdbMgr * sdbMgr){  Grammar1 * this = 0;    return this;}PUBLIC void Grammar1_delete(Grammar1 * this){}PUBLIC Grammar1 * Grammar_copy(Grammar1 * this){  Grammar1 * result = 0;    return result;}void Grammar1_process(Grammar1 * this){  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (910,1,456,0,909);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (456,' Grammar1_scan_string(s->buffer); ');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (911,2,323,0,910);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (323, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (912,1,457,0,911);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (457,' Grammar1_parse(this); ');
[DBUG] Count = 0






[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (913,2,324,0,912);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (324, '}PUBLIC void Grammar1_changeBuffer(Grammar1 * this){}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/Grammar1/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/Grammar1/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/Grammar1/main.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (914,1,458,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (458,' main.c ');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (915,2,325,0,914);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (325, '');
[DBUG] Count = 0
[DBUG] File name ="stdio.h"
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h




















































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (916,2,326,0,915);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (326, 'int yyparse();typedef struct {  unsigned int length;  unsigned char *buffer;} String;String* load_file(char * s){  String *result = NULL;  FILE* f=fopen(s,"rb");  if (f)  {    result = (String*)malloc(sizeof(String));	  fseek(f, 0, SEEK_END);	  result->length=ftell(f);	  fseek(f, 0 , SEEK_SET);        	  result->buffer = (char*)malloc(result->length+1);    fread(result->buffer,result->length, 1, f);    result->buffer[result->length] = 0;	  fclose(f);  }    return result;}int main(int argc, char **argv){  String* s;    if (argc == 2)  {    s = load_file(argv[1]);    if (!s)    {      printf("Error: Cannot open file %s\n", argv[1]);      exit( 1 );    }    else    {      Grammar1_scan_string(s->buffer);      Grammar1_parse();    }  }    return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/SParse/SParse.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/SParse/SParse.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/SParse/SParse.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (917,1,459,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (459,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (918,1,460,0,917);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (460,'* 
  @file SParse.c
  
  @brief This file contains the implementation for the class SParse
  
  The class SParse parses all files with extension .X
  and stores the result of the parsing in the SQLite DB name.
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (919,3,133,0,918);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (133, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (920,1,461,0,919);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (461,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (921,2,327,0,920);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (327, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (922,3,134,0,921);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (134, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (923,1,462,0,922);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (462,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (924,2,328,0,923);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (328, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (925,1,463,0,924);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (463,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 922
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (926,2,329,0,922);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (329, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (927,1,464,0,926);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (464,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 919
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileReader.h"
[DBUG] Length =13
[DBUG] INCLUDE FileReader.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (928,3,135,0,919);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (135, 'FileReader.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileReader.h
[INFO] Merged path: ./CommonLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileReader.h
[INFO] Merged path: ./AppliLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileReader.h
[INFO] Merged path: ./ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (929,1,465,0,928);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (465,' FileReader.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (930,2,330,0,929);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (330, '#ifndef _FILEREADER_H_#define _FILEREADER_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (931,3,136,0,930);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (136, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (932,1,466,0,931);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (466,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (933,2,331,0,932);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (331, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (934,1,467,0,933);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (467,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 931
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (935,3,137,0,931);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (137, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (936,1,468,0,935);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (468,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (937,2,332,0,936);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (332, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (938,3,138,0,937);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (138, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (939,1,469,0,938);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (469,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (940,2,333,0,939);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (333, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (941,1,470,0,940);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (470,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 938
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (942,2,334,0,938);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (334, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (943,1,471,0,942);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (471,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 935
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (944,2,335,0,935);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (335, 'typedef struct FileReader FileReader;PUBLIC FileReader * FileReader_new();PUBLIC void FileReader_delete(FileReader * this);PUBLIC FileReader * FileReader_copy(FileReader * this);PUBLIC char * FileReader_getBuffer(FileReader * this);PUBLIC String * FileReader_getName(FileReader * this);PUBLIC char * FileReader_addFile(FileReader * this, String * fileName);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (945,1,472,0,944);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (472,' _FILEREADER_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 928
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (946,3,139,0,928);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (139, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (947,1,473,0,946);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (473,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (948,2,336,0,947);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (336, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (949,3,140,0,948);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (140, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (950,1,474,0,949);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (474,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (951,2,337,0,950);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (337, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (952,1,475,0,951);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (475,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 949
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (953,3,141,0,949);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (141, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 16
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (954,1,476,0,953);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (476,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (955,2,338,0,954);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (338, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (956,3,142,0,955);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (142, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 16
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (957,1,477,0,956);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (477,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (958,2,339,0,957);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (339, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (959,1,478,0,958);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (478,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 956
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (960,2,340,0,956);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (340, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (961,1,479,0,960);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (479,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 953
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (962,2,341,0,953);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (341, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (963,1,480,0,962);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (480,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 946
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (964,3,143,0,946);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (143, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (965,1,481,0,964);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (481,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (966,3,144,0,965);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (144, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (967,1,482,0,966);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (482,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (968,2,342,0,967);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (342, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC==17370== Conditional jump or move depends on uninitialised value(s)
==17370==    at 0x484E5B0: bcmp (vg_replace_strmem.c:1100)
==17370==    by 0x11227: Memory_ncmp (Memory.c:84)
==17370==    by 0x15337: Grammar2_isFileToBeIgnored (Grammar2.c:367)
==17370==    by 0x1506F: Grammar2_processNewFile (Grammar2.c:316)
==17370==    by 0x18B33: read_include (Grammar2.l:148)
==17370==    by 0x16233: Grammar2_lex (Grammar2.l:116)
==17370==    by 0x1564F: Grammar2_parse (Grammar2.parse.c:1141)
==17370==    by 0x14AB7: Grammar2_process (Grammar2.c:118)
==17370==    by 0x13F43: SParse_parseFile (SParse.c:138)
==17370==    by 0x19303: List_forEach (List.c:214)
==17370==    by 0x13E67: SParse_parse (SParse.c:110)
==17370==    by 0x10FE7: main (main.c:65)
==17370== 
#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (969,1,483,0,968);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (483,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 966
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (970,2,343,0,966);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (343, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 964
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Grammar2.h"
[DBUG] Length =11
[DBUG] INCLUDE Grammar2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (971,3,145,0,964);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (145, 'Grammar2.h');
[DBUG] Count = 0
[INFO] Merged path: ./Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Grammar2.h
[INFO] Merged path: ./CommonLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Grammar2.h
[INFO] Merged path: ./AppliLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/Grammar2.h
[INFO] Merged path: ./ParseLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (972,1,484,0,971);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (484,' Grammar2.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (973,3,146,0,972);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (146, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (974,1,485,0,973);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (485,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (975,2,344,0,974);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (344, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (976,1,486,0,975);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (486,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 973
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (977,3,147,0,973);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (147, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (978,1,487,0,977);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (487,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (979,2,345,0,978);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (345, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (980,3,148,0,979);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (148, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (981,1,488,0,980);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (488,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (982,2,346,0,981);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (346, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (983,1,489,0,982);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (489,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 980
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (984,3,149,0,980);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (149, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (985,1,490,0,984);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (490,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (986,2,347,0,985);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (347, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (987,3,150,0,986);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (150, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 4
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (988,1,491,0,987);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (491,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (989,2,348,0,988);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (348, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (990,1,492,0,989);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (492,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 987
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 3
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (991,2,349,0,987);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (349, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (992,1,493,0,991);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (493,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 984
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (993,2,350,0,984);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (350, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (994,1,494,0,993);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (494,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 977
[DBUG] POP State Stack Pointer = 34
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileReader.h"
[DBUG] Length =13
[DBUG] INCLUDE FileReader.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (995,3,151,0,977);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (151, 'FileReader.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileReader.h
[INFO] Merged path: ./CommonLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileReader.h
[INFO] Merged path: ./AppliLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileReader.h
[INFO] Merged path: ./ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] PUSH State Stack Pointer = 36
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (996,1,495,0,995);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (495,' FileReader.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (997,2,351,0,996);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (351, '#ifndef _FILEREADER_H_#define _FILEREADER_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (998,3,152,0,997);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (152, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 36
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (999,1,496,0,998);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (496,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1000,2,352,0,999);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (352, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1001,1,497,0,1000);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (497,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 998
[DBUG] POP State Stack Pointer = 36
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1002,3,153,0,998);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (153, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1003,1,498,0,1002);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (498,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1004,2,353,0,1003);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (353, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1005,3,154,0,1004);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (154, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 4
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1006,1,499,0,1005);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (499,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1007,2,354,0,1006);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (354, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1008,1,500,0,1007);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (500,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1005
[DBUG] POP State Stack Pointer = 38
[DBUG] POP State Stack Top = 3
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1009,2,355,0,1005);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (355, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1010,1,501,0,1009);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (501,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1002
[DBUG] POP State Stack Pointer = 40
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1011,2,356,0,1002);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (356, 'typedef struct FileReader FileReader;PUBLIC FileReader * FileReader_new();PUBLIC void FileReader_delete(FileReader * this);PUBLIC FileReader * FileReader_copy(FileReader * this);PUBLIC char * FileReader_getBuffer(FileReader * this);PUBLIC String * FileReader_getName(FileReader * this);PUBLIC char * FileReader_addFile(FileReader * this, String * fileName);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1012,1,502,0,1011);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (502,' _FILEREADER_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 995
[DBUG] POP State Stack Pointer = 42
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1013,2,357,0,995);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (357, 'typedef struct Grammar2 Grammar2;PUBLIC Grammar2 * Grammar2_new(FileReader * fr, SdbMgr * sdbMgr);PUBLIC void Grammar2_delete(Grammar2 * this);PUBLIC Grammar2 * Grammar2_copy(Grammar2 * this);PUBLIC void Grammar2_process(Grammar2 * this);PUBLIC FileReader * Grammar2_getFileReader(Grammar2 * grammar);PUBLIC SdbMgr * Grammar2_getSdbMgr(Grammar2 * grammar);PUBLIC void Grammar2_addToBuffer(Grammar2 * grammar, char * text);PUBLIC void Grammar2_addComment(Grammar2 * this);PUBLIC void Grammar2_addCodeNode(Grammar2 * this);PUBLIC void Grammar2_addIncludeNode(Grammar2 * this, char * name);PUBLIC char * Grammar2_processNewFile(Grammar2 * this, String * fileName);PUBLIC void Grammar2_returnToFile(Grammar2 * this);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 971
[DBUG] POP State Stack Pointer = 44
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE FileMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1014,3,155,0,971);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (155, 'FileMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileMgr.h
[INFO] Merged path: ./CommonLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileMgr.h
[INFO] Merged path: ./AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] PUSH State Stack Pointer = 46
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1015,1,503,0,1014);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (503,' FileMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1016,2,358,0,1015);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (358, '#ifndef _FILEMGR_H_#define _FILEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1017,3,156,0,1016);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (156, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 46
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1018,1,504,0,1017);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (504,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1019,2,359,0,1018);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (359, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1020,1,505,0,1019);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (505,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1017
[DBUG] POP State Stack Pointer = 46
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1021,3,157,0,1017);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (157, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 48
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1022,1,506,0,1021);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (506,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1023,2,360,0,1022);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (360, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1024,3,158,0,1023);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (158, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 48
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1025,1,507,0,1024);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (507,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1026,2,361,0,1025);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (361, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1027,1,508,0,1026);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (508,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1024
[DBUG] POP State Stack Pointer = 48
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1028,2,362,0,1024);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (362, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1029,1,509,0,1028);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (509,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1021
[DBUG] POP State Stack Pointer = 50
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1030,3,159,0,1021);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (159, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 52
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1031,1,510,0,1030);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (510,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1032,2,363,0,1031);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (363, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1033,3,160,0,1032);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (160, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 52
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1034,1,511,0,1033);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (511,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1035,2,364,0,1034);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (364, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1036,1,512,0,1035);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (512,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1033
[DBUG] POP State Stack Pointer = 52
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1037,2,365,0,1033);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (365, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1038,1,513,0,1037);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (513,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1030
[DBUG] POP State Stack Pointer = 54
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1039,2,366,0,1030);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (366, 'typedef struct FileMgr FileMgr;PUBLIC void FileMgr_delete(FileMgr * this);PUBLIC FileMgr * FileMgr_copy(FileMgr * this);PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName);PUBLIC void FileMgr_close(FileMgr* this, String* fileName);PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location);PUBLIC char * FileMgr_getRootLocation(FileMgr* this);PUBLIC FileMgr* FileMgr_getRef();PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName);PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName);PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern);PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1040,1,514,0,1039);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (514,' _FILEMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1014
[DBUG] POP State Stack Pointer = 56
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1041,3,161,0,1014);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (161, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 58
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1042,1,515,0,1041);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (515,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1043,2,367,0,1042);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (367, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1044,3,162,0,1043);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (162, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 58
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1045,1,516,0,1044);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (516,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1046,2,368,0,1045);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (368, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1047,1,517,0,1046);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (517,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1044
[DBUG] POP State Stack Pointer = 58
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1048,2,369,0,1044);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (369, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1049,1,518,0,1048);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (518,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1041
[DBUG] POP State Stack Pointer = 60
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SParse.h"
[DBUG] Length =9
[DBUG] INCLUDE SParse.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1050,3,163,0,1041);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (163, 'SParse.h');
[DBUG] Count = 0
[INFO] Merged path: ./SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SParse.h
[INFO] Merged path: ./CommonLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SParse.h
[INFO] Merged path: ./AppliLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SParse.h
[INFO] Merged path: ./ParseLib/include/SParse.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/SParse.h
[DBUG] PUSH State Stack Pointer = 62
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1051,1,519,0,1050);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (519,' SParse.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1052,2,370,0,1051);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (370, '#ifndef _SPARSE_H_#define _SPARSE_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1053,3,164,0,1052);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (164, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 62
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1054,1,520,0,1053);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (520,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1055,2,371,0,1054);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (371, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1056,1,521,0,1055);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (521,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1053
[DBUG] POP State Stack Pointer = 62
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1057,2,372,0,1053);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (372, 'typedef struct SParse SParse;PUBLIC SParse *SParse_new(');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1058,1,522,0,1057);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (522,' Sdb name ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1059,2,373,0,1058);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (373, ');PUBLIC void SParse_delete(SParse * this);PUBLIC SParse * SParse_copy(SParse * this);PUBLIC unsigned int SParse_parse(SParse * this, const char * extension);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1060,1,523,0,1059);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (523,' _SPARSE_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1050
[DBUG] POP State Stack Pointer = 64
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1061,1,524,0,1050);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (524,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1062,1,525,0,1061);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (525,'* 
  @private
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1063,2,374,0,1062);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (374, 'typedef struct SParseDefault{  char* extension;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1064,1,526,0,1063);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (526,'void * (*function_new)(FileReader * fr, SdbMgr * sdbMgr);');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1065,2,375,0,1064);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (375, '  Constructor function_new;  unsigned int (*function_process)(void * g);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1066,1,527,0,1065);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (527,'void (*function_delete)(void * g);');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1067,2,376,0,1066);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (376, '  Destructor function_delete;} SParseDefault;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1068,1,528,0,1067);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (528,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1069,1,529,0,1068);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (529,'* 
  @class SParse
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1070,2,377,0,1069);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (377, 'struct SParse{  Object object;  char * extension;  SdbMgr * sdbMgr;};static const SParseDefault SParse_default[] = {{"*.c",(Constructor)&Grammar2_new, &Grammar2_process,(Destructor)&Grammar2_delete}, {"*.d",0,0,0');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1071,1,530,0,1070);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (530,'&Grammar2_process');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1072,2,378,0,1071);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (378, '}}; #if 0static const char * SParse_ignoreFiles[] = {"test1.c"};#endifPRIVATE unsigned int SParse_parseFile(SParse * this, String * file);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1073,1,531,0,1072);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (531,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1074,1,532,0,1073);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (532,'* 
  @brief Create a new SParse object.
  @public
  @memberof SParse
  @return New SParse object.
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1075,2,379,0,1074);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (379, 'PUBLIC SParse *SParse_new(String * sdbName){  SParse * this = 0;  this = (SParse*)Object_new(sizeof(SParse),(Destructor)&SParse_delete, (Copy_operator)&SParse_copy);  this->object.size = sizeof(SParse);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1076,1,533,0,1075);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (533,' Initialise SdbMgr ');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1077,2,380,0,1076);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (380, '  this->sdbMgr = SdbMgr_new(sdbName);    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1078,1,534,0,1077);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (534,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1079,1,535,0,1078);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (535,'* 
  @brief Delete a SParse object.
  @public
  @memberof SParse
  @param Object to delete.
*************************************************');
[DBUG] Count = 0

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1080,2,381,0,1079);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (381, 'PUBLIC void SParse_delete(SParse * this){  if (this!=0)  {    SdbMgr_delete(this->sdbMgr);    Object_delete(&this->object);  }}PUBLIC SParse * SParse_copy(SParse * this){  SParse * copy = 0;    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1081,1,536,0,1080);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (536,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1082,1,537,0,1081);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (537,'* 
  @brief Parse all files with a given extension.
  @memberof SParse
  @param[in] extension Extension of the files to parse.
  @return Status of the operation.
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1083,2,382,0,1082);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (382, 'PUBLIC unsigned int SParse_parse(SParse * this, const char * extension){  unsigned int result = 0;    FileMgr* fileMgr  = FileMgr_getRef();  List * fileList = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1084,1,538,0,1083);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (538,' List all files with extension in all the input directories ');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1085,2,383,0,1084);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (383, '  fileList = FileMgr_filterFiles(fileMgr, extension);  List_forEach(fileList, (void (*)(void* , void *))&SParse_parseFile, (void*)this);    FileMgr_delete(fileMgr);  List_delete(fileList);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1086,1,539,0,1085);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (539,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1087,1,540,0,1086);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (540,'* 
  @brief Parse a file.
  @memberof SParse
  @private
  @param Filename.
  @return Status of the operation.
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1088,2,384,0,1087);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (384, 'PRIVATE unsigned int SParse_parseFile(SParse * this, String * file){  unsigned int error = 0;  unsigned int i = 0;  unsigned int nbRows = sizeof(SParse_default)/sizeof(SParseDefault);  void * g = 0;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1089,1,541,0,1088);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (541,' 1) If fileName is to be ignored ');
[DBUG] Count = 0

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1090,2,385,0,1089);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (385, '  for (i=0; i<nbRows; i++)  {    if (String_matchWildcard(file, SParse_default[i].extension))    {      FileReader * fileReader = FileReader_new(file);      g = SParse_default[i].function_new(fileReader, this->sdbMgr);      SParse_default[i].function_process(g);      SParse_default[i].function_delete(g);      FileReader_delete(fileReader);    }  }  return error;}#if 0');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1091,1,542,0,1090);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (542,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1092,1,543,0,1091);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (543,'* 
  @brief Check if a file should be ignored..
  @memberof SParse
  @private
  @param Filename.
  @return Status of the operation.
*************************************************');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1093,2,386,0,1092);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (386, 'PRIVATE unsigned int SParse_isFileIgnored(SParse * this ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1094,1,544,0,1093);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (544,' FileName * file ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1095,2,387,0,1094);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (387, '){  unsigned int result = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1096,1,545,0,1095);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (545,' Check if a file needs to be ignored ');
[DBUG] Count = 0






[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1097,2,388,0,1096);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (388, '    return result;}#endif');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/Grammar2/Grammar2.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1098,1,546,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (546,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1099,1,547,0,1098);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (547,'* 
  @file GRammar2.c
  
  @brief A test grammar class.
  The Grammar2 class implements a test grammar
  parsing comments code blocks and allowing includes files.
*************************************************');
[DBUG] Count = 0

[DBUG] File name ="Grammar2.h"
[DBUG] Length =11
[DBUG] INCLUDE Grammar2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1100,3,165,0,1099);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (165, 'Grammar2.h');
[DBUG] Count = 0
[INFO] Merged path: ./Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Grammar2.h
[INFO] Merged path: ./CommonLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Grammar2.h
[INFO] Merged path: ./AppliLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/Grammar2.h
[INFO] Merged path: ./ParseLib/include/Grammar2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/Grammar2.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1101,1,548,0,1100);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (548,' Grammar2.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1102,3,166,0,1101);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (166, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1103,1,549,0,1102);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (549,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1104,2,389,0,1103);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (389, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1105,1,550,0,1104);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (550,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1102
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1106,3,167,0,1102);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (167, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1107,1,551,0,1106);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (551,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1108,2,390,0,1107);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (390, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1109,3,168,0,1108);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (168, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1110,1,552,0,1109);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (552,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1111,2,391,0,1110);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (391, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1112,1,553,0,1111);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (553,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1109
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1113,3,169,0,1109);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (169, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1114,1,554,0,1113);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (554,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1115,2,392,0,1114);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (392, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1116,3,170,0,1115);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (170, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 4
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1117,1,555,0,1116);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (555,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1118,2,393,0,1117);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (393, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1119,1,556,0,1118);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (556,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1116
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 3
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1120,2,394,0,1116);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (394, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1121,1,557,0,1120);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (557,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1113
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1122,2,395,0,1113);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (395, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1123,1,558,0,1122);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (558,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1106
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileReader.h"
[DBUG] Length =13
[DBUG] INCLUDE FileReader.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1124,3,171,0,1106);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (171, 'FileReader.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileReader.h
[INFO] Merged path: ./CommonLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileReader.h
[INFO] Merged path: ./AppliLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileReader.h
[INFO] Merged path: ./ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1125,1,559,0,1124);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (559,' FileReader.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1126,2,396,0,1125);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (396, '#ifndef _FILEREADER_H_#define _FILEREADER_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1127,3,172,0,1126);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (172, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1128,1,560,0,1127);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (560,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1129,2,397,0,1128);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (397, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1130,1,561,0,1129);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (561,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1127
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1131,3,173,0,1127);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (173, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1132,1,562,0,1131);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (562,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1133,2,398,0,1132);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (398, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1134,3,174,0,1133);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (174, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 4
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1135,1,563,0,1134);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (563,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1136,2,399,0,1135);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (399, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1137,1,564,0,1136);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (564,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1134
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 3
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1138,2,400,0,1134);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (400, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1139,1,565,0,1138);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (565,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1131
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1140,2,401,0,1131);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (401, 'typedef struct FileReader FileReader;PUBLIC FileReader * FileReader_new();PUBLIC void FileReader_delete(FileReader * this);PUBLIC FileReader * FileReader_copy(FileReader * this);PUBLIC char * FileReader_getBuffer(FileReader * this);PUBLIC String * FileReader_getName(FileReader * this);PUBLIC char * FileReader_addFile(FileReader * this, String * fileName);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1141,1,566,0,1140);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (566,' _FILEREADER_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1124
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1142,2,402,0,1124);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (402, 'typedef struct Grammar2 Grammar2;PUBLIC Grammar2 * Grammar2_new(FileReader * fr, SdbMgr * sdbMgr);PUBLIC void Grammar2_delete(Grammar2 * this);PUBLIC Grammar2 * Grammar2_copy(Grammar2 * this);PUBLIC void Grammar2_process(Grammar2 * this);PUBLIC FileReader * Grammar2_getFileReader(Grammar2 * grammar);PUBLIC SdbMgr * Grammar2_getSdbMgr(Grammar2 * grammar);PUBLIC void Grammar2_addToBuffer(Grammar2 * grammar, char * text);PUBLIC void Grammar2_addComment(Grammar2 * this);PUBLIC void Grammar2_addCodeNode(Grammar2 * this);PUBLIC void Grammar2_addIncludeNode(Grammar2 * this, char * name);PUBLIC char * Grammar2_processNewFile(Grammar2 * this, String * fileName);PUBLIC void Grammar2_returnToFile(Grammar2 * this);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1100
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1143,3,175,0,1100);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (175, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1144,1,567,0,1143);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (567,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1145,2,403,0,1144);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (403, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1146,3,176,0,1145);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (176, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1147,1,568,0,1146);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (568,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1148,2,404,0,1147);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (404, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1149,1,569,0,1148);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (569,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1146
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1150,2,405,0,1146);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (405, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1151,1,570,0,1150);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (570,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1143
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="FileReader.h"
[DBUG] Length =13
[DBUG] INCLUDE FileReader.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1152,3,177,0,1143);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (177, 'FileReader.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileReader.h
[INFO] Merged path: ./CommonLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileReader.h
[INFO] Merged path: ./AppliLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileReader.h
[INFO] Merged path: ./ParseLib/include/FileReader.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/include/FileReader.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1153,1,571,0,1152);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (571,' FileReader.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1154,2,406,0,1153);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (406, '#ifndef _FILEREADER_H_#define _FILEREADER_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1155,3,178,0,1154);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (178, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1156,1,572,0,1155);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (572,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1157,2,407,0,1156);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (407, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1158,1,573,0,1157);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (573,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1155
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1159,3,179,0,1155);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (179, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1160,1,574,0,1159);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (574,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1161,2,408,0,1160);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (408, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1162,3,180,0,1161);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (180, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 28
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1163,1,575,0,1162);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (575,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1164,2,409,0,1163);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (409, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1165,1,576,0,1164);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (576,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1162
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1166,2,410,0,1162);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (410, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1167,1,577,0,1166);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (577,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1159
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1168,2,411,0,1159);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (411, 'typedef struct FileReader FileReader;PUBLIC FileReader * FileReader_new();PUBLIC void FileReader_delete(FileReader * this);PUBLIC FileReader * FileReader_copy(FileReader * this);PUBLIC char * FileReader_getBuffer(FileReader * this);PUBLIC String * FileReader_getName(FileReader * this);PUBLIC char * FileReader_addFile(FileReader * this, String * fileName);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1169,1,578,0,1168);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (578,' _FILEREADER_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1152
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbRequest.h"
[DBUG] Length =13
[DBUG] INCLUDE SdbRequest.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1170,3,181,0,1152);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (181, 'SdbRequest.h');
[DBUG] Count = 0
[DBUG] FileREader_addFile: Reached SdbRequest.h
[INFO] Merged path: ./SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbRequest.h
[INFO] Merged path: ./CommonLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbRequest.h
[INFO] Merged path: ./AppliLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1171,1,579,0,1170);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (579,' SdbRequest.h ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1172,2,412,0,1171);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (412, '#ifndef _SDBREQUEST_H_#define _SDBREQUEST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1173,3,182,0,1172);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (182, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 34
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1174,1,580,0,1173);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (580,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1175,2,413,0,1174);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (413, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1176,1,581,0,1175);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (581,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1173
[DBUG] POP State Stack Pointer = 34
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1177,2,414,0,1173);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (414, 'typedef struct SdbRequest SdbRequest;PUBLIC SdbRequest * SdbRequest_new(const char * fmt);PUBLIC void SdbRequest_delete(SdbRequest * this);PUBLIC SdbRequest * SdbRequest_copy(SdbRequest * this);PUBLIC void SdbRequest_execute(SdbRequest * this, ...);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1178,1,582,0,1177);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (582,' _SDBREQUEST_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1170
[DBUG] POP State Stack Pointer = 36
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1179,3,183,0,1170);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (183, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1180,1,583,0,1179);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (583,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1181,3,184,0,1180);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (184, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 38
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1182,1,584,0,1181);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (584,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1183,2,415,0,1182);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (415, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1184,1,585,0,1183);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (585,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1181
[DBUG] POP State Stack Pointer = 38
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1185,2,416,0,1181);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (416, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1179
[DBUG] POP State Stack Pointer = 40
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1186,3,185,0,1179);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (185, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 42
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1187,1,586,0,1186);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (586,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1188,2,417,0,1187);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (417, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1189,3,186,0,1188);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (186, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 42
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1190,1,587,0,1189);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (587,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1191,2,418,0,1190);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (418, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1192,1,588,0,1191);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (588,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1189
[DBUG] POP State Stack Pointer = 42
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1193,2,419,0,1189);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (419, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1194,1,589,0,1193);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (589,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1186
[DBUG] POP State Stack Pointer = 44
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name ="Grammar2.parse.h"
[DBUG] Length =17
[DBUG] INCLUDE Grammar2.parse.h!!!
[NORM] Grammar2.lex.c: Cannot find Grammar2.parse.h



































































































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1195,2,420,0,1186);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (420, '#define MAX_BUFFER_SIZE  (16384)extern int Grammar2_parse (void * scanner, Grammar2 * this);extern void * Grammar2_scan_string (const char * yystr , void * yyscanner);extern int Grammar2lex_init (void * scanner);extern int Grammar2lex_destroy  (void * yyscanner);PRIVATE void Grammar2_initSdbTables(Grammar2 * this);PRIVATE unsigned int nodeId = 0;PRIVATE unsigned int codeNodeId = 0;PRIVATE unsigned int commentNodeId = 0;PRIVATE unsigned int includeNodeId = 0;PRIVATE unsigned int isInitialised = 0;PRIVATE unsigned int Grammar2_isFileToBeIgnored(Grammar2 * this, String * fileName);struct GrammarContext{  Object object;  unsigned int lastNode;};typedef struct GrammarContext GrammarContext;struct Grammar2{  Object object;  void * scanner;  SdbMgr * sdbMgr;  FileReader * reader;  char buffer[MAX_BUFFER_SIZE];  char * node_text;  int node_text_position;  GrammarContext * current;  List * contexts;};PUBLIC Grammar2 * Grammar2_new(FileReader * fr, SdbMgr * sdbMgr){  Grammar2 * this = 0;    this = (Grammar2*)Object_new(sizeof(Grammar2),(Destructor)&Grammar2_delete, (Copy_operator)&Grammar2_copy);  this->reader = fr;  this->sdbMgr = sdbMgr;  Grammar2lex_init(&this->scanner);  Memory_set(this->buffer, 0, MAX_BUFFER_SIZE);  this->node_text_position=0;    this->contexts = List_new(this->contexts);  this->current = (GrammarContext*)Object_new(sizeof(GrammarContext),0,0);  this->current->lastNode = 0;  List_insertHead(this->contexts, this->current);    if (!isInitialised) Grammar2_initSdbTables(this);  return this;}PUBLIC void Grammar2_delete(Grammar2 * this){  GrammarContext * o = 0;    if (this!=0)  {     if (this->object.refCount==1)     {       Grammar2lex_destroy(this->scanner);       o = (GrammarContext*)List_removeHead(this->contexts);       List_delete(this->contexts);       Object_delete(&this->object);     }     else if (this->object.refCount>1)     {       this->object.refCount--;     }  }}PUBLIC Grammar2 * Grammar2_copy(Grammar2 * this){  Grammar2 * copy = 0;  return copy;}PUBLIC void Grammar2_process(Grammar2 * this){  SdbRequest * insertTransUnit = 0;    insertTransUnit = SdbRequest_new(    "INSERT INTO Translation_Units(File_Name) "    "VALUES ('%s');"    );      SdbRequest_execute(insertTransUnit, String_getBuffer(FileReader_getName(this->reader)));    Grammar2_scan_string(FileReader_getBuffer(this->reader), this->scanner);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1196,1,590,0,1195);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (590,'if (Memory_ncmp(String_getBuffer(FileReader_getName(this->reader)),"Timer.c",7))');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1197,2,421,0,1196);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (421, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1198,1,591,0,1197);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (591,'{');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1199,2,422,0,1198);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (422, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1200,1,592,0,1199);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (592,'         printf("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1201,2,423,0,1200);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (423, '  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1202,1,593,0,1201);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (593,'}');
[DBUG] Count = 0














































































































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1203,2,424,0,1202);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (424, '  Grammar2_parse(this->scanner, this);    SdbRequest_delete(insertTransUnit);}PRIVATE void Grammar2_initSdbTables(Grammar2 * this){  SdbRequest * dropTransUnitTable = 0;  SdbRequest * createTransUnitTable = 0;  SdbRequest * dropCommentNodeTable = 0;  SdbRequest * createCommentNodeTable = 0;  SdbRequest * dropCodeNodeTable = 0;  SdbRequest * createCodeNodeTable = 0;  SdbRequest * dropNodeTable = 0;  SdbRequest * createNodeTable = 0;  SdbRequest * dropIncludeNodeTable = 0;  SdbRequest * createIncludeNodeTable = 0;    dropTransUnitTable = SdbRequest_new(	  "DROP TABLE "	  "IF EXIST Translation_Units;"	  );  createTransUnitTable = SdbRequest_new(	 "CREATE TABLE Translation_Units ("	 "File_Name text NOT NULL "	 ");");     dropCommentNodeTable = SdbRequest_new(   "DROP TABLE "   "IF EXIST Comment_Nodes;"   );  createCommentNodeTable = SdbRequest_new(   "CREATE TABLE Comment_Nodes ("   "NodeId integer PRIMARY_KEY,"   "Comment text NOT NULL "   ");");     dropCodeNodeTable = SdbRequest_new(   "DROP TABLE "   "IF EXIST Code_Nodes;"   );  createCodeNodeTable = SdbRequest_new(   "CREATE TABLE Code_Nodes ("   "NodeId integer PRIMARY_KEY,"   "Code text NOT NULL "   ");");      dropIncludeNodeTable = SdbRequest_new(   "DROP TABLE "   "IF EXIST Include_Nodes;"   );     createIncludeNodeTable = SdbRequest_new(   "CREATE TABLE Include_Nodes ("   "NodeId integer PRIMARY_KEY,"   "EntryNode integer NOT NULL"   ");");    dropNodeTable = SdbRequest_new(   "DROP TABLE "   "IF EXIST Nodes;"   );     createNodeTable = SdbRequest_new(   "CREATE TABLE Nodes ("   "NodeId integer PRIMARY_KEY,"   "NodeType integer NOT NULL,"   "NodePtr integer NOT NULL,"   "NodeNext integer,"   "NodePrev integer"   ");");     SdbRequest_execute(dropNodeTable);  SdbRequest_execute(createNodeTable);  SdbRequest_execute(dropTransUnitTable);  SdbRequest_execute(createTransUnitTable);  SdbRequest_execute(dropCommentNodeTable);  SdbRequest_execute(createCommentNodeTable);  SdbRequest_execute(dropCodeNodeTable);  SdbRequest_execute(createCodeNodeTable);  SdbRequest_execute(dropIncludeNodeTable);  SdbRequest_execute(createIncludeNodeTable);  SdbRequest_delete(dropCodeNodeTable);  SdbRequest_delete(createCodeNodeTable);  SdbRequest_delete(dropNodeTable);  SdbRequest_delete(createNodeTable);  SdbRequest_delete(dropCommentNodeTable);  SdbRequest_delete(createCommentNodeTable);  SdbRequest_delete(dropTransUnitTable);  SdbRequest_delete(createTransUnitTable);  SdbRequest_delete(dropIncludeNodeTable);  SdbRequest_delete(createIncludeNodeTable);}PUBLIC FileReader * Grammar2_getFileReader(Grammar2 * this){  return this->reader;}PUBLIC SdbMgr * Grammar2_getSdbMgr(Grammar2 * this){  return this->sdbMgr;}PUBLIC void Grammar2_addToBuffer(Grammar2 * this, char * text){  this->buffer[this->node_text_position] = text[0];  this->node_text_position++;  if (this->node_text_position>(MAX_BUFFER_SIZE-1))   {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1204,1,594,0,1203);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (594,' Error case: Cannot obtain the FileMgr root location. ');
[DBUG] Count = 0






























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1205,2,425,0,1204);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (425, '    Error_new(ERROR_FATAL, "Grammar internal buffer too small");  }}PUBLIC void Grammar2_addNode(Grammar2 * this, unsigned int type, int nodePtr){  SdbRequest * insertNode = 0;    insertNode = SdbRequest_new(  "INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) "  "VALUES (%d,%d,%d,%d,%d);"  );  nodeId++;       SdbRequest_execute(insertNode, nodeId, type, nodePtr, 0, this->current->lastNode);    SdbRequest_delete(insertNode);}PUBLIC void Grammar2_addComment(Grammar2 * this){  SdbRequest * insertCommentNode = 0;    insertCommentNode = SdbRequest_new(  "INSERT INTO Comment_Nodes (NodeId, Comment) "  "VALUES (%d,'%s');"  );    this->buffer[this->node_text_position] = 0;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1206,1,595,0,1205);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (595,'printf("\nComment found: %s\n", this->buffer);');
[DBUG] Count = 0






























































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1207,2,426,0,1206);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (426, '  this->node_text_position = 0;  commentNodeId++;    Grammar2_addNode(this, 1, commentNodeId);  this->current->lastNode = nodeId;    SdbRequest_execute(insertCommentNode, commentNodeId, this->buffer);  SdbRequest_delete(insertCommentNode);}PUBLIC void Grammar2_addCodeNode(Grammar2 * this){  SdbRequest * insertCodeNode = 0;    if (this->node_text_position!=0)  {    insertCodeNode = SdbRequest_new(      "INSERT INTO Code_Nodes (NodeId, Code) "      "VALUES (%d, '%s');"    );      this->buffer[this->node_text_position] = 0;    this->node_text_position = 0;    codeNodeId++;        Grammar2_addNode(this, 2, codeNodeId);    this->current->lastNode = nodeId;    SdbRequest_execute(insertCodeNode, codeNodeId, this->buffer);    SdbRequest_delete(insertCodeNode);  }}PUBLIC void Grammar2_addIncludeNode(Grammar2 * this, char * name){  SdbRequest * insertIncludeNode = 0;    insertIncludeNode = SdbRequest_new(      "INSERT INTO Include_Nodes (NodeId, EntryNode) "      "VALUES (%d, '%s');"    );    includeNodeId++;     Grammar2_addNode(this, 3, includeNodeId);  this->current->lastNode = nodeId;    SdbRequest_execute(insertIncludeNode, includeNodeId, name);  SdbRequest_delete(insertIncludeNode);}PUBLIC char * Grammar2_processNewFile(Grammar2 * this, String * fileName){   char * result = 0;   GrammarContext * o = 0;   if (Grammar2_isFileToBeIgnored(this, fileName))   {     return 0;   }       ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1208,1,596,0,1207);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (596,'if (Memory_ncmp(String_getBuffer(fileName), "SdbRequest.h", 12)) ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1209,2,427,0,1208);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (427, '       ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1210,1,597,0,1209);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (597,'{');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1211,2,428,0,1210);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (428, '       ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1212,1,598,0,1211);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (598,'  printf("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1213,2,429,0,1212);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (429, '       ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1214,1,599,0,1213);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (599,'}');
[DBUG] Count = 0















































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1215,2,430,0,1214);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (430, '   Grammar2_addIncludeNode(this, String_getBuffer(fileName));      o = (GrammarContext*)Object_new(sizeof(GrammarContext),0,0);   o->lastNode = this->current->lastNode;   this->current = o;      List_insertHead(this->contexts, o);      result = FileReader_addFile(this->reader, fileName);      if (result==0)   {     Grammar2_returnToFile(this);     Error_new(ERROR_FATAL,"Grammar2_processNewFile: %s\n", String_getBuffer(fileName));   }      return result;}PUBLIC void Grammar2_returnToFile(Grammar2 * this){  GrammarContext * o = 0;    o = (GrammarContext*)List_removeHead(this->contexts);  Object_delete(&(o->object));  this->current = (GrammarContext*)List_getHead(this->contexts);   Error_new(ERROR_DBG,"Grammar2_returnToFile: %d\n", this->current->lastNode);}PRIVATE unsigned int Grammar2_isFileToBeIgnored(Grammar2 * this, String * fileName){    unsigned int result = 0;    char * buffer = String_getBuffer(fileName);    if (Memory_ncmp(buffer, "signal.h", 8)) return 1;    if (Memory_ncmp(buffer, "unistd.h", 8)) return 1;    if (Memory_ncmp(buffer, "dirent.h", 8)) return 1;    if (Memory_ncmp(buffer, "stdio.h", 7)) return 1;    if (Memory_ncmp(buffer, "sqlite3.h", 9)) return 1;    if (Memory_ncmp(buffer, "stdarg.h", 8)) return 1;    if (Memory_ncmp(buffer, "stdlib.h", 8)) return 1;    if (Memory_ncmp(buffer, "string.h", 8)) return 1;    if (Memory_ncmp(buffer, "Grammar2.parse.h", 16)) return 1;        return result;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/Grammar2/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/Grammar2/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/Grammar2/main.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1216,1,600,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (600,' main.c ');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1217,2,431,0,1216);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (431, '');
[DBUG] Count = 0
[DBUG] File name ="stdio.h"
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h

[DBUG] File name ="Grammar2.parse.h"
[DBUG] Length =17
[DBUG] INCLUDE Grammar2.parse.h!!!
[NORM] Grammar2.lex.c: Cannot find Grammar2.parse.h

























































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1218,2,432,0,1217);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (432, 'int yyparse();typedef struct {  unsigned int length;  unsigned char *buffer;} String;String* load_file(char * s){  String *result = NULL;  FILE* f=fopen(s,"rb");  if (f)  {    result = (String*)malloc(sizeof(String));	  fseek(f, 0, SEEK_END);	  result->length=ftell(f);	  fseek(f, 0 , SEEK_SET);        	  result->buffer = (char*)malloc(result->length+1);    fread(result->buffer,result->length, 1, f);    result->buffer[result->length] = 0;	  fclose(f);  }    return result;}int main(int argc, char **argv){  String* s;  int * p;  void* scanner;  if (argc == 2)  {    s = load_file(argv[1]);    if (!s)    {      printf("Error: Cannot open file %s\n", argv[1]);      exit( 1 );    }    else    {     Grammar2lex_init(&scanner);      Grammar2_scan_string(s->buffer, scanner);      Grammar2set_in(s->buffer, scanner);      Grammar2_parse(scanner, p);      Grammar2lex_destroy(scanner);    }  }    return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/ParseLib/C89Grammar/Declarator.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/ParseLib/C89Grammar/Declarator.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/ParseLib/C89Grammar/Declarator.c');
[DBUG] Count = 0







[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1219,2,433,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (433, 'struct Declarator{  DeclaratorType type;  DeclaratorScope scope;  char * name;} Declarator;');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Map/MapEntry.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Map/MapEntry.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Map/MapEntry.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1220,1,601,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (601,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1221,1,602,0,1220);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (602,'* 
   @file Map.c
		     
   @brief A support class for theMap class.
*************************************************');
[DBUG] Count = 0

[DBUG] File name ="MapEntry.h"
[DBUG] Length =11
[DBUG] INCLUDE MapEntry.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1222,3,187,0,1221);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (187, 'MapEntry.h');
[DBUG] Count = 0
[INFO] Merged path: ./MapEntry.h
[INFO] Merged path: /home/pi/Projects/SParse/src/MapEntry.h
[INFO] Merged path: ./CommonLib/include/MapEntry.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1223,1,603,0,1222);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (603,' MapEntry.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1224,2,434,0,1223);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (434, '#ifndef _MAPENTRY_H_#define _MAPENTRY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1225,3,188,0,1224);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (188, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1226,1,604,0,1225);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (604,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1227,2,435,0,1226);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (435, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1228,1,605,0,1227);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (605,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1225
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1229,3,189,0,1225);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (189, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1230,1,606,0,1229);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (606,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1231,2,436,0,1230);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (436, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1232,3,190,0,1231);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (190, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1233,1,607,0,1232);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (607,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1234,2,437,0,1233);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (437, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1235,1,608,0,1234);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (608,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1232
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1236,2,438,0,1232);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (438, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1237,1,609,0,1236);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (609,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1229
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1238,2,439,0,1229);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (439, 'typedef struct MapEntry MapEntry;PUBLIC MapEntry * MapEntry_new();PUBLIC void MapEntry_delete(MapEntry * this);PUBLIC MapEntry * MapEntry_copy(MapEntry * this);PUBLIC String * MapEntry_getString(MapEntry * this);PUBLIC void * MapEntry_getItem(MapEntry * this);PUBLIC void MapEntry_setString(MapEntry * this, String * s);PUBLIC void MapEntry_setItem(MapEntry * this, void * item);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1239,1,610,0,1238);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (610,' _MAPENTRY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1222
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1240,3,191,0,1222);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (191, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1241,1,611,0,1240);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (611,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1242,2,440,0,1241);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (440, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1243,3,192,0,1242);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (192, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1244,1,612,0,1243);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (612,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1245,2,441,0,1244);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (441, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1246,1,613,0,1245);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (613,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1243
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1247,2,442,0,1243);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (442, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1248,1,614,0,1247);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (614,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1240
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1249,3,193,0,1240);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (193, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1250,1,615,0,1249);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (615,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1251,2,443,0,1250);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (443, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1252,3,194,0,1251);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (194, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1253,1,616,0,1252);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (616,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1254,2,444,0,1253);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (444, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1255,1,617,0,1254);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (617,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1252
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1256,2,445,0,1252);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (445, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1257,1,618,0,1256);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (618,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1249
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9





























































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1258,2,446,0,1249);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (446, 'struct MapEntry{  Object object;  String * s;  void * item;};PUBLIC MapEntry * MapEntry_new(String * s, void * item){  MapEntry * this = 0;  this = (MapEntry*)Object_new(sizeof(MapEntry),(Destructor)&MapEntry_delete,(Copy_operator)&MapEntry_copy);  this->s = s;  this->item = item;  return this;}PUBLIC void MapEntry_delete(MapEntry * this){  String_delete(this->s);  if (((Object*)this->item)->delete!=0)  {    ((Object*)this->item)->delete(this->item);  }  Object_delete(&this->object);}PUBLIC MapEntry * MapEntry_copy(MapEntry * this){  MapEntry * copy = 0;  return copy;}PUBLIC String * MapEntry_getString(MapEntry * this){  return this->s;}PUBLIC void MapEntry_setString(MapEntry * this, String * s){  String_delete(this->s);  this->s = s;}PUBLIC void * MapEntry_getItem(MapEntry * this){  return this->item;}PUBLIC void MapEntry_setItem(MapEntry * this, void * item){  if (((Object*)this->item)->delete!=0)  {    ((Object*)this->item)->delete(this->item);  }  this->item = item;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Map/Map.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Map/Map.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Map/Map.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1259,1,619,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (619,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1260,1,620,0,1259);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (620,'* 
  @file Map.c
 
  @brief A Map class.
  This class provides a container indexed
  by a string.
*************************************************');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1261,2,447,0,1260);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (447, '');
[DBUG] Count = 0
[DBUG] File name ="Map.h"
[DBUG] Length =6
[DBUG] INCLUDE Map.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1262,3,195,0,1261);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (195, 'Map.h');
[DBUG] Count = 0
[INFO] Merged path: ./Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Map.h
[INFO] Merged path: ./CommonLib/include/Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1263,1,621,0,1262);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (621,' Map.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1264,2,448,0,1263);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (448, '#ifndef _MAP_H_#define _MAP_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1265,3,196,0,1264);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (196, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1266,1,622,0,1265);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (622,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1267,2,449,0,1266);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (449, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1268,1,623,0,1267);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (623,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1265
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1269,3,197,0,1265);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (197, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1270,1,624,0,1269);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (624,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1271,2,450,0,1270);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (450, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1272,3,198,0,1271);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (198, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1273,1,625,0,1272);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (625,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1274,2,451,0,1273);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (451, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1275,1,626,0,1274);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (626,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1272
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1276,2,452,0,1272);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (452, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1277,1,627,0,1276);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (627,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1269
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1278,2,453,0,1269);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (453, 'typedef struct Map Map;PUBLIC Map * Map_new();PUBLIC void Map_delete(Map * this);PUBLIC Map * Map_copy(Map * this);PUBLIC unsigned int Map_insert(Map * this,String* s, void * p);PUBLIC unsigned int Map_find(Map * this, String* s, void ** p);PUBLIC void Map_print(Map * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1279,1,628,0,1278);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (628,' _MAP_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1280,2,454,0,1279);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (454, '');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1262
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="MapEntry.h"
[DBUG] Length =11
[DBUG] INCLUDE MapEntry.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1281,3,199,0,1262);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (199, 'MapEntry.h');
[DBUG] Count = 0
[INFO] Merged path: ./MapEntry.h
[INFO] Merged path: /home/pi/Projects/SParse/src/MapEntry.h
[INFO] Merged path: ./CommonLib/include/MapEntry.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/MapEntry.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1282,1,629,0,1281);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (629,' MapEntry.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1283,2,455,0,1282);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (455, '#ifndef _MAPENTRY_H_#define _MAPENTRY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1284,3,200,0,1283);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (200, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1285,1,630,0,1284);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (630,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1286,2,456,0,1285);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (456, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1287,1,631,0,1286);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (631,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1284
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1288,3,201,0,1284);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (201, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1289,1,632,0,1288);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (632,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1290,2,457,0,1289);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (457, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1291,3,202,0,1290);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (202, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 12
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1292,1,633,0,1291);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (633,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1293,2,458,0,1292);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (458, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1294,1,634,0,1293);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (634,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1291
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1295,2,459,0,1291);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (459, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1296,1,635,0,1295);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (635,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1288
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1297,2,460,0,1288);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (460, 'typedef struct MapEntry MapEntry;PUBLIC MapEntry * MapEntry_new();PUBLIC void MapEntry_delete(MapEntry * this);PUBLIC MapEntry * MapEntry_copy(MapEntry * this);PUBLIC String * MapEntry_getString(MapEntry * this);PUBLIC void * MapEntry_getItem(MapEntry * this);PUBLIC void MapEntry_setString(MapEntry * this, String * s);PUBLIC void MapEntry_setItem(MapEntry * this, void * item);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1298,1,636,0,1297);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (636,' _MAPENTRY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1281
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1299,3,203,0,1281);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (203, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1300,1,637,0,1299);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (637,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1301,2,461,0,1300);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (461, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1302,3,204,0,1301);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (204, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1303,1,638,0,1302);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (638,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1304,2,462,0,1303);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (462, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1305,1,639,0,1304);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (639,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1302
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1306,2,463,0,1302);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (463, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1307,1,640,0,1306);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (640,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1299
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1308,3,205,0,1299);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (205, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1309,1,641,0,1308);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (641,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1310,2,464,0,1309);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (464, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1311,3,206,0,1310);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (206, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1312,1,642,0,1311);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (642,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1313,2,465,0,1312);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (465, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1314,1,643,0,1313);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (643,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1311
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1315,2,466,0,1311);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (466, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1316,1,644,0,1315);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (644,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1308
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1317,3,207,0,1308);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (207, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1318,1,645,0,1317);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (645,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1319,2,467,0,1318);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (467, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1320,3,208,0,1319);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (208, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 26
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1321,1,646,0,1320);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (646,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1322,2,468,0,1321);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (468, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1323,1,647,0,1322);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (647,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1320
[DBUG] POP State Stack Pointer = 26
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1324,2,469,0,1320);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (469, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1325,1,648,0,1324);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (648,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1317
[DBUG] POP State Stack Pointer = 28
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1326,3,209,0,1317);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (209, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1327,1,649,0,1326);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (649,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1328,2,470,0,1327);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (470, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1329,3,210,0,1328);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (210, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 30
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1330,1,650,0,1329);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (650,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1331,2,471,0,1330);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (471, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1332,1,651,0,1331);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (651,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1329
[DBUG] POP State Stack Pointer = 30
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1333,2,472,0,1329);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (472, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1334,1,652,0,1333);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (652,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1326
[DBUG] POP State Stack Pointer = 32
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1335,2,473,0,1326);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (473, '#define HTABLE_SIZE (50)');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1336,1,653,0,1335);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (653,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1337,1,654,0,1336);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (654,'*
  @private
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1338,2,474,0,1337);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (474, 'PRIVATE unsigned int Map_hash(Map * this, char * s, unsigned int i);PRIVATE MapEntry * Map_findEntry(Map* this, String * s);');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1339,1,655,0,1338);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (655,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1340,1,656,0,1339);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (656,'*
  @class Map
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1341,2,475,0,1340);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (475, 'struct Map{  Object object;  List * htable[HTABLE_SIZE];};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1342,1,657,0,1341);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (657,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1343,1,658,0,1342);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (658,'* 
  @brief Create a new instance of the class Map.
  @public
  @memberof Map
*************************************************');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1344,2,476,0,1343);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (476, 'PUBLIC Map* Map_new(){  Map * this = 0;  unsigned int i = 0;    this = (Map*)Object_new(sizeof(Map),(Destructor)&Map_delete, (Copy_operator)&Map_copy);    for (i=0;i<HTABLE_SIZE;i++)  {    this->htable[i] = 0;  }    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1345,1,659,0,1344);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (659,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1346,1,660,0,1345);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (660,'* 
  @brief TBD
  @public
  @memberof Map
*************************************************');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1347,2,477,0,1346);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (477, 'PUBLIC void Map_delete(Map * this){  unsigned int i = 0;    if (this != 0)  {    for (i=0;i<HTABLE_SIZE;i++)    {      List_delete(this->htable[i]);    }      Object_delete(&this->object);  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1348,1,661,0,1347);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (661,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1349,1,662,0,1348);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (662,'* 
  @brief Copy an instance of the class Map.
  @public
  @memberof Map
  @return Copy of instance.
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1350,2,478,0,1349);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (478, 'PUBLIC Map * Map_copy(Map * this){  Map * result = 0;    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1351,1,663,0,1350);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (663,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1352,1,664,0,1351);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (664,'* 
  @brief TBD
  @public
  @memberof Map
  @return TBD
*************************************************');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1353,2,479,0,1352);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (479, 'PUBLIC unsigned int Map_insert(Map * this,String * s, void * p){  unsigned int result = 0;  unsigned int key = 0;  unsigned int i = 0;  void * entry =0;  MapEntry * me = 0;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1354,1,665,0,1353);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (665,' Check if there is an entry under s ');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1355,2,480,0,1354);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (480, '  if ((me = Map_findEntry(this, s))!=0)  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1356,1,666,0,1355);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (666,' Replace entry with new entry an free existing entry ');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1357,2,481,0,1356);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (481, '    MapEntry_setString(me, s);    MapEntry_setItem(me, p);  }  else  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1358,1,667,0,1357);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (667,' Create a new entry ');
[DBUG] Count = 0






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1359,2,482,0,1358);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (482, '    for (i=1; (i<=String_getLength(s)) && (result==0); i++)    {      key = Map_hash(this,String_getBuffer(s), i);      if (this->htable[key] == 0)      {        this->htable[key] = List_new();        entry = MapEntry_new(s,p);        List_insertHead(this->htable[key], entry);        result = 1;      }      else if (i==String_getLength(s))       {        entry = MapEntry_new(s,p);        List_insertHead(this->htable[key], entry);      }    }  }    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1360,1,668,0,1359);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (668,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1361,1,669,0,1360);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (669,'* 
  @brief TBD
  @public
  @memberof Map
*************************************************');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1362,2,483,0,1361);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (483, 'PUBLIC unsigned int Map_find(Map* this, String* s, void** p){  unsigned int result = 0;  MapEntry * n = 0;    n = Map_findEntry(this, s);    if (n!=0)  {    *p = (MapEntry_getItem(n));  }    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1363,1,670,0,1362);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (670,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1364,1,671,0,1363);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (671,'* 
  @brief TBD
  @private
  @memberof Map
*************************************************');
[DBUG] Count = 0













[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1365,2,484,0,1364);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (484, 'PRIVATE unsigned int Map_hash(Map * this, char * s, unsigned int length){  unsigned int result = 0;  unsigned int i = 0;    for (i=0; i<length; i++)  {    result = result + s[i];    result += (result << 10);    result ^= (result>>6);  }  result = result % HTABLE_SIZE;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1366,1,672,0,1365);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (672,'
          hash += key[i], hash += ( hash << 10 ), hash ^= ( hash >> 6 );
    }
    hash += ( hash << 3 ), hash ^= ( hash >> 11 ), hash += ( hash << 15 );
    ');
[DBUG] Count = 0





































































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1367,2,485,0,1366);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (485, '  return result;}PRIVATE MapEntry * Map_findEntry(Map* this, String * s){  MapEntry * result = 0;  unsigned int key = 0;  unsigned int i = 0;  unsigned int isFound = 0;  MapEntry * n = 0;    for (i=1; (i<=String_getLength(s)) && (!isFound); i++)  {    key = Map_hash(this, String_getBuffer(s), i);    if (this->htable[key] != 0)    {      List_resetIterator(this->htable[key]);      n = (MapEntry*)List_getNext(this->htable[key]);      while (n!= 0)      {        if (String_isEqual(MapEntry_getString(n), s))        {          isFound = 1;          result = n;          break;        }        n = (MapEntry*)List_getNext(this->htable[key]);      }          }  }    return result;}PUBLIC void Map_print(Map * this){  int i = 0;  MapEntry * n = 0;  int j = 0;  char * p = 0;    if (this != 0)  {    for (i=0;i<HTABLE_SIZE;i++)    {      if (this->htable[i]!=0)      {        printf("Map.c: Map[%d] is used with %d elements.\n",i, List_getSize(this->htable[i]));        for (j=0; j<List_getSize(this->htable[i]);j++)        {          List_resetIterator(this->htable[i]);          n = (MapEntry*)List_getNext(this->htable[i]);          if  (n!=0)          {            p = (char*)(String_getBuffer((String*)MapEntry_getItem(n)));            printf("Item %d: %x %x %x %x\n", j+1, *p, *(p+1), *(p+2), *(p+3));          }          else          {            printf("Item %d: void\n");          }          n = (MapEntry*)List_getNext(this->htable[i]);        }      }    }  }}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/ObjectMgr/ObjectMgr.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/ObjectMgr/ObjectMgr.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/ObjectMgr/ObjectMgr.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1368,1,673,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (673,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1369,1,674,0,1368);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (674,'* 
  @file ObjectMgr.c
 
  @brief An object management class.
  @details This class provides an object allocation and
   de-allocation service. Only one instance of this class can be created.
*************************************************');
[DBUG] Count = 0


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1370,2,486,0,1369);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (486, '');
[DBUG] Count = 0
[DBUG] File name ="ObjectMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE ObjectMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1371,3,211,0,1370);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (211, 'ObjectMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ObjectMgr.h
[INFO] Merged path: ./CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1372,1,675,0,1371);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (675,' ObjectMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1373,2,487,0,1372);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (487, '#ifndef _OBJECTMGR_H_#define _OBJECTMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1374,3,212,0,1373);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (212, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1375,1,676,0,1374);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (676,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1376,2,488,0,1375);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (488, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1377,3,213,0,1376);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (213, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1378,1,677,0,1377);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (677,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1379,2,489,0,1378);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (489, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1380,1,678,0,1379);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (678,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1377
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1381,2,490,0,1377);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (490, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1382,1,679,0,1381);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (679,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1374
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1383,3,214,0,1374);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (214, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1384,1,680,0,1383);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (680,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1385,2,491,0,1384);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (491, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1386,1,681,0,1385);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (681,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1383
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1387,2,492,0,1383);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (492, 'typedef struct ObjectMgr ObjectMgr;PUBLIC void ObjectMgr_delete(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_getRef();PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size);PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object);PUBLIC void ObjectMgr_report(ObjectMgr * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1388,1,682,0,1387);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (682,' _OBJECTMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1371
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1389,3,215,0,1371);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (215, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1390,1,683,0,1389);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (683,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1391,2,493,0,1390);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (493, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1392,3,216,0,1391);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (216, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1393,1,684,0,1392);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (684,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1394,2,494,0,1393);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (494, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1395,1,685,0,1394);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (685,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1392
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1396,2,495,0,1392);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (495, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1397,1,686,0,1396);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (686,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1389
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1398,1,687,0,1389);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (687,'#include "Error.h"');
[DBUG] Count = 0
[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1399,3,217,0,1398);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (217, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1400,1,688,0,1399);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (688,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1401,2,496,0,1400);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (496, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1402,3,218,0,1401);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (218, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1403,1,689,0,1402);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (689,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1404,2,497,0,1403);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (497, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1405,1,690,0,1404);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (690,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1402
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1406,2,498,0,1402);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (498, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1407,1,691,0,1406);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (691,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1399
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1408,2,499,0,1399);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (499, '');
[DBUG] Count = 0
[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h

[DBUG] File name =<string.h>
[DBUG] Length =9
[DBUG] INCLUDE string.h!!!
[NORM] Grammar2.lex.c: Cannot find string.h

[DBUG] File name =<stdlib.h>
[DBUG] Length =9
[DBUG] INCLUDE stdlib.h!!!
[NORM] Grammar2.lex.c: Cannot find stdlib.h












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1409,2,500,0,1408);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (500, '#define MAX_NB_OBJECTS (40000)#define END_OF_QUEUE (0xFFFFFFFF)typedef struct ObjectInfo{  Object * ptr;  unsigned int prevId;  unsigned int nextId; } ObjectInfo;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1410,1,692,0,1409);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (692,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1411,1,693,0,1410);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (693,'*
  @class ObjectMgr
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1412,2,501,0,1411);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (501, 'struct ObjectMgr{  Object object;  unsigned int maxNbObjectAllocated; ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1413,1,694,0,1412);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (694,'*< This is member B ');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1414,2,502,0,1413);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (502, '  unsigned int allocRequestId;  unsigned int freeRequestId;  unsigned int nbAllocatedObjects;  ObjectInfo allocatedObjects[MAX_NB_OBJECTS];  unsigned int freeSpace;  unsigned int usedSpace;};PRIVATE ObjectMgr * objectMgr = 0;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1415,1,695,0,1414);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (695,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1416,1,696,0,1415);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (696,'* 
  @brief TBD
  @details TBD
  @private
  @memberof ObjectMgr
*************************************************');
[DBUG] Count = 0





































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1417,2,503,0,1416);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (503, 'PRIVATE ObjectMgr * ObjectMgr_new(){  ObjectMgr * this = 0;  int i = 0;    this = (ObjectMgr*)Memory_alloc(sizeof(ObjectMgr));      this->object.delete = (void(*)(Object*))&ObjectMgr_delete;  this->object.copy = (Object*(*)(Object*))&ObjectMgr_copy;  this->object.size = sizeof(ObjectMgr);  this->object.refCount = 1;  this->object.id =0;    this->allocRequestId = 1;  this->freeRequestId = 0;  this->nbAllocatedObjects = 1;  this->maxNbObjectAllocated = 1;  memset(this->allocatedObjects, 0, MAX_NB_OBJECTS * sizeof(Object*));    for (i=2; i<MAX_NB_OBJECTS-1; i++)  {    this->allocatedObjects[i].prevId = i - 1;    this->allocatedObjects[i].nextId = i + 1;  }  this->allocatedObjects[1].prevId = END_OF_QUEUE;   this->allocatedObjects[1].nextId = 2;   this->allocatedObjects[MAX_NB_OBJECTS-1].prevId = MAX_NB_OBJECTS-2;  this->allocatedObjects[MAX_NB_OBJECTS-1].nextId = END_OF_QUEUE;  this->freeSpace = 1;  this->allocatedObjects[0].ptr = (Object*)&this->object;  this->allocatedObjects[0].prevId = END_OF_QUEUE;  this->allocatedObjects[0].nextId = END_OF_QUEUE;  this->usedSpace = 0;  return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1418,1,697,0,1417);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (697,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1419,1,698,0,1418);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (698,'* 
  @brief Delete an instance of the class ObjectMgr.
  @public
  @memberof ObjectMgr
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1420,2,504,0,1419);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (504, 'PUBLIC void ObjectMgr_delete(ObjectMgr * this){  this->object.refCount = this->object.refCount - 1;    if (this->object.refCount == 0)  {    ObjectMgr_report(this);    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1421,1,699,0,1420);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (699,' TODO: memset(this, 0, sizeof(ObjectMgr)); ');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1422,2,505,0,1421);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (505, '    Memory_free(this, sizeof(ObjectMgr));    this = 0;  } }');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1423,1,700,0,1422);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (700,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1424,1,701,0,1423);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (701,'* 
  @brief Copy an instance of the class ObjectMgr.
  @public
  @memberof ObjectMgr
  @return New instance
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1425,2,506,0,1424);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (506, 'PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this){  return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1426,1,702,0,1425);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (702,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1427,1,703,0,1426);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (703,'* 
  @brief Get a reference to the singleton instance of ObjectMgr.
  @public
  @memberof ObjectMgr
  @return Reference to the singleton.
*************************************************');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1428,2,507,0,1427);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (507, 'PUBLIC ObjectMgr * ObjectMgr_getRef(){  if (objectMgr==0)  {    objectMgr = ObjectMgr_new();  }  else  {    objectMgr->object.refCount++;  }    return objectMgr;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1429,1,704,0,1428);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (704,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1430,1,705,0,1429);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (705,'* 
  @brief Reports the usage statistics for an instance of ObjectMgr.
  @public
  @memberof ObjectMgr
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1431,2,508,0,1430);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (508, 'PUBLIC void ObjectMgr_report(ObjectMgr * this){  printf("Object Manager Usage report:\n");  printf("Nb allocated objects: %d\n", this->nbAllocatedObjects);  printf("Max nb allocated objects: %d\n", this->maxNbObjectAllocated);  printf("Nb alloc request: %d\n", this->allocRequestId);  printf("Nb free requests: %d\n", this->freeRequestId);}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1432,1,706,0,1431);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (706,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1433,1,707,0,1432);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (707,'* 
  @brief Allocate a new object memory footprint of a given size.
  @public
  @memberof ObjectMgr
  @param[in] size size in bytes of the memory footprint.
  @return Reference to a instance of Object.
*************************************************');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1434,2,509,0,1433);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (509, 'PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size){  Object * result = 0;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1435,1,708,0,1434);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (708,'Error e;');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1436,2,510,0,1435);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (510, '    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1437,1,709,0,1436);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (709,' Ensure size requested is >0 ');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1438,2,511,0,1437);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (511, '  if (size>0)  {    if (this->nbAllocatedObjects<MAX_NB_OBJECTS)    {      result = (Object*)Memory_alloc(size);            if (result!=0)      {        this->allocatedObjects[this->usedSpace].nextId = this->freeSpace;        this->allocatedObjects[this->freeSpace].prevId = this->usedSpace;        this->usedSpace = this->freeSpace;        this->freeSpace = this->allocatedObjects[this->freeSpace].nextId;        this->allocatedObjects[this->freeSpace].prevId = END_OF_QUEUE;        this->allocatedObjects[this->usedSpace].nextId = END_OF_QUEUE;        this->nbAllocatedObjects++;        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1439,1,710,0,1438);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (710,'printf("Nb objects %d\n", this->nbAllocatedObjects );');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1440,2,512,0,1439);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (512, '        this->allocatedObjects[this->usedSpace].ptr = result;        result->id = this->usedSpace;        if (this->nbAllocatedObjects >this->maxNbObjectAllocated) this->maxNbObjectAllocated = this->nbAllocatedObjects;        this->nbAllocatedObjects++;      }      else      {        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1441,1,711,0,1440);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (711,' Error case: Failure to allocate object ');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1442,2,513,0,1441);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (513, '        printf("Cannot allocate\n");        exit(1);      }    }    else    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1443,1,712,0,1442);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (712,' Error case: too many object already created ');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1444,2,514,0,1443);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (514, '      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1445,1,713,0,1444);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (713,'e.severity = E_ERROR_FATA;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1446,2,515,0,1445);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (515, '      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1447,1,714,0,1446);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (714,'e.msg = "Too many objects already created";');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1448,2,516,0,1447);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (516, '      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1449,1,715,0,1448);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (715,'e.param = 0;');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1450,2,517,0,1449);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (517, '            ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1451,1,716,0,1450);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (716,'Error_raise(&e);');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1452,2,518,0,1451);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (518, '      printf("Too many objects\n");      exit(1);    }  }  else  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1453,1,717,0,1452);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (717,' Error case: request to create a 0 bytes object ');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1454,2,519,0,1453);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (519, '    exit(1);  }    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1455,1,718,0,1454);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (718,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1456,1,719,0,1455);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (719,'* 
  @brief De Allocate a given object.
  @public
  @memberof ObjectMgr
  @param[in] object Reference to instance of Object.
*************************************************');
[DBUG] Count = 0

























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1457,2,520,0,1456);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (520, 'PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object){  unsigned int idx =  object->id;    if (object!=0)  {    if (this->nbAllocatedObjects>1)    {       Memory_free(this->allocatedObjects[idx].ptr, this->allocatedObjects[idx].ptr->size);            if (this->allocatedObjects[idx].nextId != END_OF_QUEUE)      {        this->allocatedObjects[this->allocatedObjects[idx].nextId].prevId = this->allocatedObjects[idx].prevId;        }      else      {        this->usedSpace = this->allocatedObjects[idx].prevId;      }      this->allocatedObjects[this->allocatedObjects[idx].prevId].nextId = this->allocatedObjects[idx].nextId;      this->allocatedObjects[idx].nextId = this->freeSpace;      this->allocatedObjects[idx].prevId = END_OF_QUEUE;      this->freeSpace = idx;      this->nbAllocatedObjects = this->nbAllocatedObjects - 1;            ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1458,1,720,0,1457);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (720,'printf("Nb objects %d\n", this->nbAllocatedObjects );');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1459,2,521,0,1458);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (521, '      if (this->nbAllocatedObjects == 1) ObjectMgr_delete(this);    }    else    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1460,1,721,0,1459);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (721,' Error case: No allocated object left to free ');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1461,2,522,0,1460);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (522, '      exit(1);    }  }  else  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1462,1,722,0,1461);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (722,' Error case: request to free a NULL pointer ');
[DBUG] Count = 0




[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1463,2,523,0,1462);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (523, '    exit(1);  }}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/String/String2.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/String/String2.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/String/String2.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1464,1,723,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (723,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1465,1,724,0,1464);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (724,'* 
  @file String2.c
  
  @brief The String class provide a dynamic array of char terminated
  by 0.
  
  The class String is TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1466,3,219,0,1465);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (219, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1467,1,725,0,1466);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (725,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1468,2,524,0,1467);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (524, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1469,3,220,0,1468);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (220, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1470,1,726,0,1469);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (726,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1471,2,525,0,1470);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (525, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1472,1,727,0,1471);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (727,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1469
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1473,2,526,0,1469);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (526, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1474,1,728,0,1473);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (728,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1466
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1475,3,221,0,1466);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (221, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1476,1,729,0,1475);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (729,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1477,2,527,0,1476);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (527, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1478,3,222,0,1477);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (222, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1479,1,730,0,1478);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (730,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1480,2,528,0,1479);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (528, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1481,1,731,0,1480);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (731,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1478
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1482,2,529,0,1478);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (529, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1483,1,732,0,1482);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (732,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1475
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1484,3,223,0,1475);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (223, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1485,1,733,0,1484);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (733,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1486,2,530,0,1485);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (530, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1487,3,224,0,1486);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (224, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1488,1,734,0,1487);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (734,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1489,2,531,0,1488);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (531, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1490,1,735,0,1489);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (735,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1487
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1491,2,532,0,1487);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (532, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1492,1,736,0,1491);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (736,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1484
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name =<stdlib.h>
[DBUG] Length =9
[DBUG] INCLUDE stdlib.h!!!
[NORM] Grammar2.lex.c: Cannot find stdlib.h


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1493,1,737,0,1484);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (737,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1494,1,738,0,1493);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (738,'* 
  @class String
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1495,2,533,0,1494);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (533, 'struct String{  Object object;  char * buffer;  unsigned int length;};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1496,1,739,0,1495);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (739,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1497,1,740,0,1496);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (740,'* 
  @brief Create a new String object.
  @public
  @memberof String
  @return Created String object.
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1498,2,534,0,1497);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (534, 'PUBLIC String * String_new(const char* initString){  String * this = 0;    this = (String*)Object_new(sizeof(String),(Destructor)&String_delete, (Copy_operator)&String_copy);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1499,1,741,0,1498);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (741,' TODO: Check if this is NULL');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1500,2,535,0,1499);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (535, '  if (initString!=0)  {    this->length = Memory_len((void*)initString);    this->buffer = (char*)Memory_alloc(this->length+1);    Memory_copy(this->buffer, (void*)initString, this->length+1);    this->buffer[this->length] = 0;  }  else  {    this->buffer = 0;    this->length = 0;  }    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1501,1,742,0,1500);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (742,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1502,1,743,0,1501);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (743,'* 
  @brief Delete an instance of class String.
  @public
  @memberof String
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1503,2,536,0,1502);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (536, 'PUBLIC void String_delete(String * this){  if (this!=0)  {    if (this->object.refCount == 1)    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1504,1,744,0,1503);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (744,' TODO: Check refCOunt');
[DBUG] Count = 0













[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1505,2,537,0,1504);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (537, '      if (this->buffer!=0)       {        Memory_free(this->buffer, this->length + 1);      }      Object_delete(&this->object);    }    else if (this->object.refCount>1)    {      this->object.refCount--;    }  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1506,1,745,0,1505);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (745,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1507,1,746,0,1506);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (746,'* 
  @brief Copy an instance of class String.
  @public
  @memberof String
  @return Copy of instance.
*************************************************');
[DBUG] Count = 0




















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1508,2,538,0,1507);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (538, 'PUBLIC String * String_copy(String * this){  String * copy = 0;    if (this!=0)  {    copy = String_new(0);    copy->length = this->length;    if (this->buffer!=0)    {      copy->buffer = Memory_alloc(copy->length+1);      Memory_copy(copy->buffer, this->buffer, copy->length);      copy->buffer[this->length] = 0;    }  }    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1509,1,747,0,1508);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (747,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1510,1,748,0,1509);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (748,'* 
  @brief Copy an instance of class String.
  @public
  @memberof String
  @return Copy of instance.
*************************************************');
[DBUG] Count = 0














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1511,2,539,0,1510);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (539, 'PUBLIC String * String_getRef(String * this){  String * ref = 0;    if (this!=0)  {    this->object.refCount++;    ref = this;  }    return ref;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1512,1,749,0,1511);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (749,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1513,1,750,0,1512);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (750,'* 
  @brief TBD
  @public
  @memberof String
*************************************************');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1514,2,540,0,1513);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (540, 'PUBLIC unsigned int String_isEqual(String * this, String * compared){  unsigned int result = 0;    if (this->length!=compared->length) return 0;  result = Memory_ncmp(this->buffer, compared->buffer, this->length);    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1515,1,751,0,1514);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (751,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1516,1,752,0,1515);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (752,'* 
  @brief TBD
  @public
  @memberof String
*************************************************');
[DBUG] Count = 0
























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1517,2,541,0,1516);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (541, 'PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length){  String * result = 0;    if (this!=0)  {    result = String_new(0);    if (idx+length < this->length)    {      result->length = length;    }    else    {      result->length = this->length - idx;      }    result->buffer = Memory_alloc(result->length+1);    Memory_copy(result->buffer, this->buffer + idx, result->length);    result->buffer[length] = 0;  }    return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1518,1,753,0,1517);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (753,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1519,1,754,0,1518);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (754,'* 
  @brief TBD
  @public
  @memberof String
*************************************************');
[DBUG] Count = 0



































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1520,2,542,0,1519);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (542, 'PUBLIC int String_toInt(String* this){  int result = 0;    return result;}PUBLIC unsigned int String_getLength(String * this){  if (this!=0)  {    return this->length;  }  return 0;}PUBLIC char * String_getBuffer(String * this){  if (this!=0)  {    return this->buffer;  }  return 0;}PUBLIC void String_setBuffer(String * this, char * buffer){  if (this!=0)  {    if (this->buffer!=0)    {      Memory_free(this->buffer, this->length+1);    }    this->buffer = buffer;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1521,1,755,0,1520);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (755,' TO DO: check for NULL char');
[DBUG] Count = 0























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1522,2,543,0,1521);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (543, '    this->length = Memory_len((void*)this->buffer);  }}PUBLIC unsigned int String_isContained(String * this, String * s2){  unsigned int result = 0;  char * p = 0;    if ((this==0) || (s2==0)) return 0;    for (p=this->buffer; p<this->buffer + this->length - s2->length + 1;p++)  {    if (Memory_ncmp(p, s2->buffer, s2->length))    {      result = 1;      break;    }  }    return result;} ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1523,1,756,0,1522);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (756,'*************************************************
 @brief String_prepend
 
 This function add the prefix at the front of a String object
 
 @param [in]     prefic: const char * - prefix
 @return: unsigned int: 0 successfull
*************************************************');
[DBUG] Count = 0


















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1524,2,544,0,1523);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (544, 'PUBLIC unsigned int String_prepend(String * this, const char * prefix){  char * buffer;  unsigned int newSize = String_getLength(this) + Memory_len((void*)prefix);    buffer = Memory_alloc(newSize+1);  Memory_copy(buffer, (void*)prefix, Memory_len((void*)prefix));  Memory_copy(buffer+Memory_len((void*)prefix), String_getBuffer(this), String_getLength(this));  Memory_free(this->buffer, this->length + 1);  buffer[newSize] = 0;  this->buffer = buffer;  this->length = newSize;    return 0;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1525,1,757,0,1524);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (757,'*************************************************
 @brief String_matchWildcard
 
 This function matches a String with a wildcard
 pattern
 
 @param [in]     filter: String* - wildcard filter
 @return: unsigned int: 0 no match, 1 match
*************************************************');
[DBUG] Count = 0
























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1526,2,545,0,1525);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (545, 'PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard){  unsigned int isMatch = 1;  unsigned int f_idx = 0;  unsigned int w_idx = 0;  unsigned int wlen = Memory_len(wildcard);  unsigned int isRange = 0;    for (w_idx = 0; (w_idx < wlen) && (isMatch == 1); w_idx++)  {    if ((wildcard[w_idx]=='*') && (w_idx + 1 < wlen))    {        while ((f_idx < this->length) && (this->buffer[f_idx]!= wildcard[w_idx+1]))      {        f_idx++;      }      if (f_idx == this->length) isMatch = 0;    }    else if (wildcard[w_idx]=='?')    {    }    else if (wildcard[w_idx]=='[')    {      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1527,1,758,0,1526);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (758,'f_idx++;');
[DBUG] Count = 0














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1528,2,546,0,1527);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (546, '      isRange = 1;     }    else if (wildcard[w_idx]==']')    {      isRange = 0;    }    else if (this->buffer[f_idx]!= wildcard[w_idx])    {      if (!isRange)      {        isMatch = 0;      }     else     {        ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1529,1,759,0,1528);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (759,'f_idx++;');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1530,2,547,0,1529);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (547, '     }         } else    {      if (f_idx < this->length) f_idx++;    }  }  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1531,1,760,0,1530);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (760,' Still some char in fileName not matched by filter');
[DBUG] Count = 0





[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1532,2,548,0,1531);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (548, '  if (f_idx < this->length) isMatch = 0;    return isMatch;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/List/List.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/List/List.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/List/List.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1533,1,761,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (761,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1534,1,762,0,1533);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (762,'*
  @file List.c
     
  @brief This file contains the implementation of the class List.
				        
  The class List implement the List operations:
  - init
  - add
*************************************************');
[DBUG] Count = 0

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1535,3,225,0,1534);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (225, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1536,1,763,0,1535);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (763,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1537,2,549,0,1536);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (549, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1538,3,226,0,1537);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (226, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1539,1,764,0,1538);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (764,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1540,2,550,0,1539);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (550, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1541,1,765,0,1540);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (765,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1538
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1542,2,551,0,1538);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (551, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1543,1,766,0,1542);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (766,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1535
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1544,3,227,0,1535);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (227, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1545,1,767,0,1544);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (767,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1546,2,552,0,1545);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (552, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1547,3,228,0,1546);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (228, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1548,1,768,0,1547);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (768,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1549,2,553,0,1548);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (553, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1550,1,769,0,1549);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (769,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1547
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1551,2,554,0,1547);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (554, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1552,1,770,0,1551);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (770,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1544
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1553,3,229,0,1544);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (229, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1554,1,771,0,1553);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (771,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1555,2,555,0,1554);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (555, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1556,3,230,0,1555);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (230, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1557,1,772,0,1556);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (772,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1558,2,556,0,1557);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (556, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1559,1,773,0,1558);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (773,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1556
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1560,2,557,0,1556);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (557, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1561,1,774,0,1560);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (774,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1553
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1562,1,775,0,1553);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (775,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1563,1,776,0,1562);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (776,'*
  @private
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1564,2,558,0,1563);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (558, 'typedef struct ListNode ListNode;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1565,1,777,0,1564);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (777,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1566,1,778,0,1565);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (778,'*
  @private
*************************************************');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1567,2,559,0,1566);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (559, 'struct ListNode{  void* item;  ListNode* next;  ListNode* prev;};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1568,1,779,0,1567);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (779,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1569,1,780,0,1568);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (780,'*
  @class List
*************************************************');
[DBUG] Count = 0










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1570,2,560,0,1569);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (560, 'struct List{  Object object;  ListNode * head;  ListNode * tail;  ListNode * iterator;  unsigned int nbNodes;};');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1571,1,781,0,1570);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (781,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1572,1,782,0,1571);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (782,'* 
  @brief Create a new instance of the class List.
  @public
  @memberof List
  @return New instance.
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1573,2,561,0,1572);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (561, 'PUBLIC List* List_new(){  List * this = 0;    this = (List*)Object_new(sizeof(List),(Destructor)&List_delete, (Copy_operator)&List_copy);  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1574,1,783,0,1573);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (783,' TODO: Check if allocation failed');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1575,2,562,0,1574);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (562, '  this->head = 0;  this->tail = 0;  this->iterator = this->head;  this->nbNodes = 0;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1576,1,784,0,1575);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (784,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1577,1,785,0,1576);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (785,'* 
  @brief Delete an instance of the class List.
  @public
  @memberof List
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1578,2,563,0,1577);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (563, 'PUBLIC void List_delete(List* this){  ListNode * node = 0;    if (this!=0)  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1579,1,786,0,1578);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (786,'node = this->tail;');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1580,2,564,0,1579);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (564, '    while ((node = this->tail)!=0)    {      this->tail = node->next;      if (((Object*)node->item)->delete!=0)      {        ((Object*)node->item)->delete(node->item);      }      Memory_free(node, sizeof(ListNode));      ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1581,1,787,0,1580);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (787,'node = this->tail;');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1582,2,565,0,1581);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (565, '    }    Object_delete(&this->object);  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1583,1,788,0,1582);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (788,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1584,1,789,0,1583);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (789,'* 
  @brief Copy an instance of the class List.
  @public
  @memberof List
  @return Copy of the given instance.
*************************************************');
[DBUG] Count = 0



























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1585,2,566,0,1584);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (566, 'PUBLIC List* List_copy(List* this){  List * copy = 0;  ListNode * iterator = 0;  ListNode * node = 0;    if (this!=0)  {    copy = List_new();    iterator = this->tail;    while (iterator!=0)    {      if (((Object*)iterator->item)->copy!=0)      {        node = (ListNode *)((Object*)iterator->item)->copy(iterator->item);        List_insertHead(copy, node);      }      iterator = iterator->next;    }  }    copy->iterator = copy->tail;    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1586,1,790,0,1585);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (790,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1587,1,791,0,1586);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (791,'* 
  @brief Insert an item at the head of a list instance.
  @public
  @memberof List
  @param[in] item Reference to item.
*************************************************');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1588,2,567,0,1587);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (567, 'PUBLIC void List_insertHead(List* this, void* item){  ListNode* newNode = 0;    newNode = Memory_alloc(sizeof(ListNode));  newNode->item = item;  newNode->next = 0;  newNode->prev = this->head;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1589,1,792,0,1588);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (792,' The following test case for empty list. ');
[DBUG] Count = 0
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1590,2,568,0,1589);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (568, '  if (this->nbNodes == 0)  {    this->tail = newNode;    this->iterator = this->tail;  }  else  {      this->head->next = newNode;      if (this->iterator == 0) this->iterator = newNode;  }  this->head = newNode;  this->nbNodes ++;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1591,1,793,0,1590);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (793,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1592,1,794,0,1591);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (794,'* 
  @brief Insert an item at the tail of a List instance.
  @public
  @memberof List
  @param[in] item Reference to item.
*************************************************');
[DBUG] Count = 0









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1593,2,569,0,1592);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (569, 'PUBLIC void List_insertTail(List* this, void* item){  ListNode* newNode = 0;    newNode = Memory_alloc(sizeof(ListNode));  newNode->item = item;  newNode->next = this->tail;  newNode->prev = 0;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1594,1,795,0,1593);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (795,' The following test case for empty list. ');
[DBUG] Count = 0















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1595,2,570,0,1594);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (570, '  if (this->nbNodes == 0)  {    this->head = newNode;    this->iterator = this->head;  }  else  {    this->tail->prev = newNode;    if (this->iterator == this->tail)   this->iterator = newNode;  }  this->tail = newNode;  this->nbNodes ++;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1596,1,796,0,1595);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (796,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1597,1,797,0,1596);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (797,'* 
  @brief Merge a list into a List instance.
  @public
  @memberof List
  @param[in] l1 Reference to list to merge.
*************************************************');
[DBUG] Count = 0



















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1598,2,571,0,1597);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (571, 'PUBLIC void List_merge(List* this, List* l1){   if ((l1!=0) && (l1->head!=0))  {    this->tail->prev = l1->head;    l1->head->next = this->tail;    this->tail = l1->tail;    this->nbNodes += l1->nbNodes;    this->iterator = this->tail;  }  l1->nbNodes = 0;  l1->iterator = 0;  l1->head = 0;  l1->tail = 0;  l1->iterator = 0;  List_delete(l1);}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1599,1,798,0,1598);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (798,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1600,1,799,0,1599);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (799,'* 
  @brief Execute a given function for each item in an instance of List..
  @public
  @memberof List
  @param[in] f Pointer to function.
*************************************************');
[DBUG] Count = 0












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1601,2,572,0,1600);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (572, 'PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object){  ListNode* iterator = this->tail;    while (iterator!=0)  {    method(object, iterator->item);    iterator = iterator->next;  }}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1602,1,800,0,1601);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (800,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1603,1,801,0,1602);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (801,'* 
  @brief Get the number of item in List instance.
  @public
  @memberof List
  @return Number of items.
*************************************************');
[DBUG] Count = 0

























[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1604,2,573,0,1603);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (573, 'PUBLIC unsigned int List_getSize(List * this){  return this->nbNodes;}PUBLIC void * List_getNext(List * this){  void * result = 0;    if (this->iterator==0)   {    this->iterator = this->tail;    result = 0;  }  else  {    result = this->iterator->item;    this->iterator = this->iterator->next;  }      return result;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1605,1,802,0,1604);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (802,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1606,1,803,0,1605);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (803,'* 
  @brief Remove the head item in an instance of LIst
  @public
  @memberof List.
*************************************************');
[DBUG] Count = 0






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1607,2,574,0,1606);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (574, 'PUBLIC void * List_removeHead(List * this){  ListNode * headNode = 0;  void * item = 0;  if ((this!=0) && (this->nbNodes!=0))  {    headNode = this->head;    item = this->head->item;    if (this->head->prev!=0)    {      this->head = this->head->prev;      this->head->next = 0;    }    else    {      this->head = 0;      this->tail = 0;      this->iterator = 0;    }    this->nbNodes--;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1608,1,804,0,1607);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (804,'TODO: this->iterator;');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1609,2,575,0,1608);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (575, '    Memory_free(headNode, sizeof(ListNode));  }  return item;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1610,1,805,0,1609);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (805,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1611,1,806,0,1610);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (806,'* 
  @brief Get the head item in an insatnce of LIst
  @public
  @memberof List.
*************************************************');
[DBUG] Count = 0






















[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1612,2,576,0,1611);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (576, 'PUBLIC void * List_getHead(List * this){  void * result = 0;    if (this!=0)  {    if (this->head!=0)    {      result = this->head->item;    }  }  return result;}PUBLIC void List_resetIterator(List * this){  if (this!=0)  {    this->iterator = this->head;  }}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Debug/Debug.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Debug/Debug.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Debug/Debug.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1613,1,807,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (807,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1614,1,808,0,1613);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (808,'*
  @file Debug.c

  @brief This file contains debugging functions.

  The debugging function are TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="Debug.h"
[DBUG] Length =8
[DBUG] INCLUDE Debug.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1615,3,231,0,1614);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (231, 'Debug.h');
[DBUG] Count = 0
[INFO] Merged path: ./Debug.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Debug.h
[INFO] Merged path: ./CommonLib/include/Debug.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1616,1,809,0,1615);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (809,' Debug.h ');
[DBUG] Count = 0


[DBUG] File name =<stdarg.h>
[DBUG] Length =9
[DBUG] INCLUDE stdarg.h!!!
[NORM] Grammar2.lex.c: Cannot find stdarg.h





[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1617,2,577,0,1616);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (577, '#define TRACE(x) do { if (DEBUG) dbg_printf x; } while (0)void dbg_printf(const char *fmt, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1615
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h








[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1618,2,578,0,1615);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (578, 'void dbg_printf(const char *fmt, ...){    va_list args;    va_start(args, fmt);    vfprintf(stdout, fmt, args);    va_end(args);}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Memory/Memory.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Memory/Memory.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Memory/Memory.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1619,1,810,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (810,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1620,1,811,0,1619);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (811,'* 
  @file Memory.c
  
  @brief This file provides the implementation of the memory functions.
  
  TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1621,3,232,0,1620);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (232, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1622,1,812,0,1621);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (812,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1623,2,579,0,1622);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (579, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1624,3,233,0,1623);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (233, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1625,1,813,0,1624);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (813,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1626,2,580,0,1625);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (580, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1627,1,814,0,1626);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (814,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1624
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1628,2,581,0,1624);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (581, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1629,1,815,0,1628);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (815,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1621
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Debug.h"
[DBUG] Length =8
[DBUG] INCLUDE Debug.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1630,3,234,0,1621);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (234, 'Debug.h');
[DBUG] Count = 0
[INFO] Merged path: ./Debug.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Debug.h
[INFO] Merged path: ./CommonLib/include/Debug.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Debug.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1631,1,816,0,1630);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (816,' Debug.h ');
[DBUG] Count = 0


[DBUG] File name =<stdarg.h>
[DBUG] Length =9
[DBUG] INCLUDE stdarg.h!!!
[NORM] Grammar2.lex.c: Cannot find stdarg.h





[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1632,2,582,0,1631);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (582, '#define TRACE(x) do { if (DEBUG) dbg_printf x; } while (0)void dbg_printf(const char *fmt, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1630
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1633,3,235,0,1630);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (235, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1634,1,817,0,1633);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (817,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1635,3,236,0,1634);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (236, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1636,1,818,0,1635);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (818,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1637,2,583,0,1636);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (583, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1638,1,819,0,1637);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (819,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1635
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1639,2,584,0,1635);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (584, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1633
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<stdlib.h>
[DBUG] Length =9
[DBUG] INCLUDE stdlib.h!!!
[NORM] Grammar2.lex.c: Cannot find stdlib.h

[DBUG] File name =<string.h>
[DBUG] Length =9
[DBUG] INCLUDE string.h!!!
[NORM] Grammar2.lex.c: Cannot find string.h














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1640,2,585,0,1633);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (585, '#define DEBUG (0)PRIVATE unsigned int Memory_allocRequestId = 0;PRIVATE unsigned int Memory_freeRequestId = 0;PRIVATE unsigned int Memory_nbBytesAllocated = 0;PUBLIC void* Memory_alloc(unsigned int nbBytes){      void* p = 0;  p = malloc(nbBytes);  Memory_nbBytesAllocated += nbBytes;  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1641,1,820,0,1640);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (820,'if (Memory_nbBytesAllocated>Memory_maxNbBytesAllocated) Memory_maxNbBytesAllocated = Memory_nbBytesAllocated;');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1642,2,586,0,1641);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (586, '  Memory_allocRequestId++;      TRACE(("Memory: Malloc %d %d %p\n", Memory_allocRequestId, nbBytes,p));   ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1643,1,821,0,1642);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (821,'if (p+nbBytes> (void*)Memory_maxAddress) Memory_maxAddress = p + nbBytes;');
[DBUG] Count = 0












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1644,2,587,0,1643);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (587, '  return p;}PUBLIC void Memory_free(void* pointer, unsigned int nbBytes){  if (pointer!=0)  {    Memory_freeRequestId++;    TRACE(("Memory: Free %d|%d %p\n", Memory_freeRequestId, nbBytes,pointer));    free(pointer);    Memory_nbBytesAllocated = Memory_nbBytesAllocated - nbBytes;    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1645,1,822,0,1644);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (822,'    if (p<Memory_minAddress) 
        {
          Memory_minAddress = p;
        }');
[DBUG] Count = 0




























































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1646,2,588,0,1645);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (588, '    }}PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes){  if (pointer!=0)  {    Memory_free(pointer, prevSizeBytes);  }  pointer = Memory_alloc(newSizeBytes);    return pointer;}PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes){  if (pointer!=0)  {    memset(pointer, val, nbBytes);  }}PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes){  if ((pointer!=0) && (src!=0))  {    memcpy(pointer, src, nbBytes);  }}PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes){  unsigned int result = 0;    if (memcmp(pointer, compared, nbBytes)==0) result = 1;    return result;}PUBLIC unsigned int Memory_cmp(void * pointer, void * compared){  unsigned int result = 0;    if (strcmp(pointer, compared)==0) result=1;    return result;}PUBLIC unsigned int Memory_len(const void * pointer){  return strlen(pointer);}PUBLIC void Memory_report(){  Error_new(ERROR_INFO, "Memory Usage Report:\n"                                        "Number of memory allocation Requests: %d\n"                                        "Number of memory de-allocation Requests: %d\n", Memory_allocRequestId, Memory_freeRequestId);}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Object/Object.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Object/Object.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Object/Object.c');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1647,1,823,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (823,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1648,1,824,0,1647);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (824,'* 
  @file Object.c
  
  @brief This file contains the implementation for the class Object
  
  The class Object is TBD
*************************************************');
[DBUG] Count = 0


[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1649,3,237,0,1648);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (237, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1650,1,825,0,1649);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (825,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1651,2,589,0,1650);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (589, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1652,3,238,0,1651);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (238, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1653,1,826,0,1652);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (826,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1654,2,590,0,1653);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (590, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1655,1,827,0,1654);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (827,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1652
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1656,2,591,0,1652);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (591, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1657,1,828,0,1656);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (828,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1649
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="ObjectMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE ObjectMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1658,3,239,0,1649);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (239, 'ObjectMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ObjectMgr.h
[INFO] Merged path: ./CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1659,1,829,0,1658);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (829,' ObjectMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1660,2,592,0,1659);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (592, '#ifndef _OBJECTMGR_H_#define _OBJECTMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1661,3,240,0,1660);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (240, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1662,1,830,0,1661);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (830,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1663,2,593,0,1662);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (593, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1664,3,241,0,1663);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (241, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1665,1,831,0,1664);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (831,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1666,2,594,0,1665);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (594, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1667,1,832,0,1666);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (832,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1664
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1668,2,595,0,1664);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (595, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1669,1,833,0,1668);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (833,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1661
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1670,3,242,0,1661);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (242, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1671,1,834,0,1670);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (834,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1672,2,596,0,1671);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (596, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1673,1,835,0,1672);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (835,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1670
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1674,2,597,0,1670);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (597, 'typedef struct ObjectMgr ObjectMgr;PUBLIC void ObjectMgr_delete(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_getRef();PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size);PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object);PUBLIC void ObjectMgr_report(ObjectMgr * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1675,1,836,0,1674);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (836,' _OBJECTMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1658
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1676,1,837,0,1658);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (837,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1677,1,838,0,1676);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (838,'*
  @private
*************************************************');
[DBUG] Count = 0



[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1678,2,598,0,1677);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (598, 'PRIVATE ObjectMgr * Object_objMgrPtr = 0;');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1679,1,839,0,1678);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (839,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1680,1,840,0,1679);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (840,'* 
  @brief Create an instance of the class Object.
  @public
  @param[in] f_delete Destructor function.
  @param[in] f_copy Copy_operator function.
  @memberof Object
*************************************************');
[DBUG] Count = 0







[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1681,2,599,0,1680);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (599, 'PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*)){  Object * this = 0;    if (Object_objMgrPtr==0)  {    ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1682,1,841,0,1681);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (841,' TODO: Not re-entrant');
[DBUG] Count = 0











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1683,2,600,0,1682);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (600, '    Object_objMgrPtr = ObjectMgr_getRef();  }  this = ObjectMgr_allocate(Object_objMgrPtr, size);  this->delete = f_delete;  this->copy = f_copy;  this->refCount = 1;  this->size = size;    return this;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1684,1,842,0,1683);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (842,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1685,1,843,0,1684);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (843,'* 
  @brief Delete an instance of the class Object.
  @public
  @memberof Object
*************************************************');
[DBUG] Count = 0






[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1686,2,601,0,1685);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (601, 'PUBLIC void Object_delete(Object * this){  ObjectMgr_deallocate(Object_objMgrPtr, this);}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1687,1,844,0,1686);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (844,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1688,1,845,0,1687);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (845,'* 
  @brief Copy an instance of the class Object.
  @public
  @memberof Object
  @return New instance
*************************************************');
[DBUG] Count = 0














[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1689,2,602,0,1688);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (602, 'PUBLIC Object * Object_copy(Object * this){  Object * copy;    copy = ObjectMgr_allocate(Object_objMgrPtr, this->size);  copy->delete = this->delete;  copy->copy = this->copy;  copy->size = this->size;  copy->refCount = 1;    return copy;}');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1690,1,846,0,1689);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (846,'********************************************');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1691,1,847,0,1690);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (847,'* 
  @brief Get a reference to an instance of the class Object.
  @public
  @memberof Object
  @return Reference to instance
*************************************************');
[DBUG] Count = 0







[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1692,2,603,0,1691);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (603, 'PUBLIC Object* Object_getRef(Object* this){   this->refCount++;    return this;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Error/Error.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Error/Error.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Error/Error.c');
[DBUG] Count = 0
[DBUG] File name ="Error.h"
[DBUG] Length =8
[DBUG] INCLUDE Error.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1693,3,243,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (243, 'Error.h');
[DBUG] Count = 0
[INFO] Merged path: ./Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Error.h
[INFO] Merged path: ./CommonLib/include/Error.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Error.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1694,1,848,0,1693);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (848,' Error.h ');
[DBUG] Count = 0


[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1695,3,244,0,1694);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (244, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1696,1,849,0,1695);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (849,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1697,2,604,0,1696);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (604, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1698,1,850,0,1697);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (850,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1695
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1699,2,605,0,1695);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (605, 'typedef enum{  ERROR_DBG,  ERROR_INFO,  ERROR_NORMAL,  ERROR_FATAL} ErrorSeverity;PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...);');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1693
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name =<stdarg.h>
[DBUG] Length =9
[DBUG] INCLUDE stdarg.h!!!
[NORM] Grammar2.lex.c: Cannot find stdarg.h

[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h

[DBUG] File name =<stdlib.h>
[DBUG] Length =9
[DBUG] INCLUDE stdlib.h!!!
[NORM] Grammar2.lex.c: Cannot find stdlib.h


































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1700,2,606,0,1693);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (606, 'PUBLIC void Error_new(ErrorSeverity severity, char * msg, ...){  va_list args;  switch (severity)  {    case ERROR_DBG:	va_start(args, msg);	printf("[DBUG] ");	vprintf(msg, args);	va_end(args);	break;    case ERROR_INFO:	va_start(args, msg);	printf("[INFO] ");	vprintf(msg, args);	va_end(args);	break;    case ERROR_NORMAL:	va_start(args, msg);	printf("[NORM] ");	vprintf(msg, args);	va_end(args);	break;    case ERROR_FATAL:	va_start(args, msg);	printf("[EXIT] ");	vprintf(msg, args);	va_end(args);	exit(2);  }}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/SdbMgr/tests/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/SdbMgr/tests/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/SdbMgr/tests/main.c');
[DBUG] Count = 0
[DBUG] File name ="SdbMgr.h"
[DBUG] Length =9
[DBUG] INCLUDE SdbMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1701,3,245,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (245, 'SdbMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbMgr.h
[INFO] Merged path: ./CommonLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbMgr.h
[INFO] Merged path: ./AppliLib/include/SdbMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1702,1,851,0,1701);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (851,' SdbMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1703,2,607,0,1702);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (607, '#ifndef _SDBMGR_H_#define _SDBMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1704,3,246,0,1703);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (246, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1705,1,852,0,1704);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (852,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1706,2,608,0,1705);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (608, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1707,1,853,0,1706);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (853,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1704
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1708,3,247,0,1704);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (247, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1709,1,854,0,1708);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (854,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1710,2,609,0,1709);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (609, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1711,3,248,0,1710);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (248, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1712,1,855,0,1711);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (855,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1713,2,610,0,1712);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (610, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1714,1,856,0,1713);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (856,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1711
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1715,2,611,0,1711);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (611, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1716,1,857,0,1715);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (857,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1708
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9










[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1717,2,612,0,1708);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (612, 'typedef struct SdbMgr SdbMgr;PUBLIC SdbMgr * SdbMgr_new(String * name);PUBLIC void SdbMgr_delete(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_copy(SdbMgr* this);PUBLIC SdbMgr * SdbMgr_getRef();PUBLIC unsigned int SdbMgr_execute(SdbMgr* this, const char* statement, String *** result);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1718,1,858,0,1717);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (858,' _SDBMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1701
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="SdbRequest.h"
[DBUG] Length =13
[DBUG] INCLUDE SdbRequest.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1719,3,249,0,1701);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (249, 'SdbRequest.h');
[DBUG] Count = 0
[DBUG] FileREader_addFile: Reached SdbRequest.h
[INFO] Merged path: ./SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/SdbRequest.h
[INFO] Merged path: ./CommonLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/SdbRequest.h
[INFO] Merged path: ./AppliLib/include/SdbRequest.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/SdbRequest.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1720,1,859,0,1719);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (859,' SdbRequest.h ');
[DBUG] Count = 0




[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1721,2,613,0,1720);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (613, '#ifndef _SDBREQUEST_H_#define _SDBREQUEST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1722,3,250,0,1721);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (250, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1723,1,860,0,1722);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (860,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1724,2,614,0,1723);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (614, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1725,1,861,0,1724);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (861,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1722
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9









[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1726,2,615,0,1722);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (615, 'typedef struct SdbRequest SdbRequest;PUBLIC SdbRequest * SdbRequest_new(const char * fmt);PUBLIC void SdbRequest_delete(SdbRequest * this);PUBLIC SdbRequest * SdbRequest_copy(SdbRequest * this);PUBLIC void SdbRequest_execute(SdbRequest * this, ...);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1727,1,862,0,1726);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (862,' _SDBREQUEST_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1719
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1728,3,251,0,1719);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (251, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1729,1,863,0,1728);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (863,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1730,2,616,0,1729);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (616, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1731,3,252,0,1730);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (252, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1732,1,864,0,1731);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (864,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1733,2,617,0,1732);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (617, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1734,1,865,0,1733);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (865,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1731
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1735,2,618,0,1731);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (618, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1736,1,866,0,1735);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (866,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1728
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1737,3,253,0,1728);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (253, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1738,1,867,0,1737);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (867,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1739,2,619,0,1738);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (619, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1740,3,254,0,1739);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (254, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1741,1,868,0,1740);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (868,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1742,2,620,0,1741);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (620, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1743,1,869,0,1742);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (869,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1740
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1744,2,621,0,1740);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (621, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1745,1,870,0,1744);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (870,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1737
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h



































































































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1746,2,622,0,1737);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (622, 'typedef struct TestSdbMgr{  Object object;} TestSdbMgr;SdbMgr * testSdbMgr = 0;int step1(){  String * sdbName = String_new("test.sql");  testSdbMgr = SdbMgr_new(sdbName);  String_delete(sdbName);  return 0;}int step2(){  SdbRequest * createTable = 0;  SdbRequest * dropTable = 0;  dropTable = SdbRequest_new(              "DROP TABLE "              "IF EXISTS Test_table;"              );  createTable = SdbRequest_new(              "CREATE TABLE Test_table ( "              "Test_text text NOT NULL "              ");");                SdbRequest_execute(dropTable);  SdbRequest_execute(createTable);    SdbRequest_delete(createTable);  SdbRequest_delete(dropTable);  return 0;}int step3(){  SdbRequest * request = 0;  unsigned int i;  request = SdbRequest_new(            "INSERT INTO Test_table(Test_text) "            "VALUES ('Value %d');");    for (i=0; i<20; i++)  {                  SdbRequest_execute(request, i);  }    SdbRequest_delete(request);    return 0;}int step4(){  SdbRequest * request = 0;    request = SdbRequest_new(              "SELECT * "              "FROM Test_table "              "WHERE Test_text='%s';");    SdbRequest_execute(request, "Value 1");  SdbRequest_delete(request);  return 0;}int step5(){  SdbMgr_delete(testSdbMgr);  Memory_report();    return 0;}int main(){  step1();  step2();  step3();  step4();  step5();    return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/FileMgr/tests/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/FileMgr/tests/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/FileMgr/tests/main.c');
[DBUG] Count = 0
[DBUG] File name ="FileMgr.h"
[DBUG] Length =10
[DBUG] INCLUDE FileMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1747,3,255,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (255, 'FileMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/FileMgr.h
[INFO] Merged path: ./CommonLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/FileMgr.h
[INFO] Merged path: ./AppliLib/include/FileMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/FileMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1748,1,871,0,1747);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (871,' FileMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1749,2,623,0,1748);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (623, '#ifndef _FILEMGR_H_#define _FILEMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1750,3,256,0,1749);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (256, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1751,1,872,0,1750);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (872,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1752,2,624,0,1751);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (624, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1753,1,873,0,1752);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (873,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1750
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1754,3,257,0,1750);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (257, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1755,1,874,0,1754);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (874,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1756,2,625,0,1755);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (625, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1757,3,258,0,1756);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (258, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1758,1,875,0,1757);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (875,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1759,2,626,0,1758);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (626, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1760,1,876,0,1759);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (876,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1757
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1761,2,627,0,1757);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (627, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1762,1,877,0,1761);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (877,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1754
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1763,3,259,0,1754);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (259, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1764,1,878,0,1763);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (878,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1765,2,628,0,1764);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (628, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1766,3,260,0,1765);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (260, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 8
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1767,1,879,0,1766);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (879,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1768,2,629,0,1767);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (629, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1769,1,880,0,1768);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (880,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1766
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1770,2,630,0,1766);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (630, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1771,1,881,0,1770);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (881,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1763
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1772,2,631,0,1763);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (631, 'typedef struct FileMgr FileMgr;PUBLIC void FileMgr_delete(FileMgr * this);PUBLIC FileMgr * FileMgr_copy(FileMgr * this);PUBLIC String* FileMgr_load(FileMgr* this, const char * fileName);PUBLIC void FileMgr_close(FileMgr* this, String* fileName);PUBLIC unsigned int FileMgr_setRootLocation(FileMgr* this, const char * location);PUBLIC char * FileMgr_getRootLocation(FileMgr* this);PUBLIC FileMgr* FileMgr_getRef();PUBLIC unsigned int FileMgr_addDirectory(FileMgr * this, const char * directoryName);PUBLIC String * FileMgr_addFile(FileMgr * this, const char * fileName);PUBLIC List * FileMgr_filterFiles(FileMgr * this, const char * pattern);PUBLIC String * FileMgr_searchFile(FileMgr * this, String * name, List * preferredDir);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1773,1,882,0,1772);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (882,' _FILEMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1747
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1774,3,261,0,1747);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (261, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1775,1,883,0,1774);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (883,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1776,2,632,0,1775);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (632, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1777,3,262,0,1776);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (262, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1778,1,884,0,1777);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (884,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1779,2,633,0,1778);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (633, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1780,1,885,0,1779);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (885,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1777
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1781,2,634,0,1777);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (634, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1782,1,886,0,1781);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (886,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1774
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1783,3,263,0,1774);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (263, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1784,1,887,0,1783);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (887,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1785,2,635,0,1784);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (635, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1786,3,264,0,1785);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (264, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1787,1,888,0,1786);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (888,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1788,2,636,0,1787);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (636, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1789,1,889,0,1788);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (889,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1786
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1790,2,637,0,1786);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (637, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1791,1,890,0,1790);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (890,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1783
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1792,3,265,0,1783);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (265, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1793,1,891,0,1792);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (891,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1794,2,638,0,1793);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (638, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1795,3,266,0,1794);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (266, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1796,1,892,0,1795);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (892,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1797,2,639,0,1796);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (639, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1798,1,893,0,1797);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (893,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1795
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1799,2,640,0,1795);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (640, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1800,1,894,0,1799);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (894,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1792
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9


[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h



















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1801,2,641,0,1792);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (641, '#define FILEMGR_MAX_PATH (1024)typedef struct TestFileMgr{  Object object;  List * files;  List * directories;  char rootLocation[FILEMGR_MAX_PATH];} TestFileMgr;int step1(){  FileMgr * testFileMgr = 0;  testFileMgr = FileMgr_getRef();  printf("Root location: %s\n", (((TestFileMgr*)testFileMgr)->rootLocation));  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1802,1,895,0,1801);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (895,'FileMgr_addDirectory(testFileMgr, "../../../../../../Solo/AUK40803_tr_solo_dev/vobs/solo/fsw");');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1803,2,642,0,1802);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (642, '  FileMgr_addDirectory(testFileMgr, "..");  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1804,1,896,0,1803);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (896,'FileMgr_addDirectory(testFileMgr, "../../..");');
[DBUG] Count = 0














































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1805,2,643,0,1804);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (643, '  FileMgr_delete(testFileMgr);  Memory_report();  return 0;}int step2(){  FileMgr * testFileMgr = 0;  String * testFileContent = 0;  testFileMgr = FileMgr_getRef();  FileMgr_addDirectory(testFileMgr, ".");  testFileContent = FileMgr_load(testFileMgr, "main.c");  FileMgr_delete(testFileMgr);  String_delete(testFileContent);  Memory_report();  return 0;}int step3(){  FileMgr * testFileMgr = FileMgr_getRef();  String * testFileContent = 0;  FileMgr_addFile(testFileMgr, "../FileMgr.c");  testFileContent = FileMgr_load(testFileMgr, "FileMgr.c");  String_delete(testFileContent);  FileMgr_delete(testFileMgr);  Memory_report();  return 0;}int main(){  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1806,1,897,0,1805);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (897,'step1();');
[DBUG] Count = 0

[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1807,2,644,0,1806);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (644, '  step2();  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1808,1,898,0,1807);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (898,'step3();');
[DBUG] Count = 0



[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1809,2,645,0,1808);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (645, '  return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/AppliLib/OptionMgr/tests/main.c');
[DBUG] Count = 0
[DBUG] File name ="OptionMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE OptionMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1810,3,267,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (267, 'OptionMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/OptionMgr.h
[INFO] Merged path: ./CommonLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/OptionMgr.h
[INFO] Merged path: ./AppliLib/include/OptionMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/AppliLib/include/OptionMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1811,1,899,0,1810);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (899,' OptionMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1812,2,646,0,1811);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (646, '#ifndef _OPTIONMGR_H_#define _OPTIONMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1813,3,268,0,1812);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (268, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1814,1,900,0,1813);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (900,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1815,2,647,0,1814);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (647, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1816,1,901,0,1815);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (901,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1813
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1817,3,269,0,1813);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (269, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1818,1,902,0,1817);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (902,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1819,2,648,0,1818);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (648, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1820,3,270,0,1819);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (270, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1821,1,903,0,1820);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (903,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1822,2,649,0,1821);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (649, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1823,1,904,0,1822);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (904,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1820
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1824,2,650,0,1820);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (650, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1825,1,905,0,1824);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (905,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1817
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1826,2,651,0,1817);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (651, 'typedef struct OptionMgr OptionMgr;PUBLIC void OptionMgr_delete(OptionMgr * this);PUBLIC OptionMgr * OptionMgr_copy(OptionMgr * this);PUBLIC PUBLIC OptionMgr* OptionMgr_getRef();PUBLIC String * OptionMgr_getOption(OptionMgr * this, const char * name);PUBLIC void OptionMgr_setOption(OptionMgr * this, const char * optionName, String * value);PUBLIC unsigned int OptionMgr_readFromFile(OptionMgr * this);PUBLIC unsigned int OptionMgr_readFromCmdLine(OptionMgr * this, const int argc, const char ** argv);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1827,1,906,0,1826);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (906,' _OPTIONMGR_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1810
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1828,3,271,0,1810);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (271, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1829,1,907,0,1828);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (907,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1830,2,652,0,1829);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (652, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1831,3,272,0,1830);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (272, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1832,1,908,0,1831);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (908,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1833,2,653,0,1832);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (653, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1834,1,909,0,1833);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (909,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1831
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1835,2,654,0,1831);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (654, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1836,1,910,0,1835);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (910,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1828
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="ObjectMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE ObjectMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1837,3,273,0,1828);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (273, 'ObjectMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ObjectMgr.h
[INFO] Merged path: ./CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1838,1,911,0,1837);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (911,' ObjectMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1839,2,655,0,1838);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (655, '#ifndef _OBJECTMGR_H_#define _OBJECTMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1840,3,274,0,1839);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (274, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1841,1,912,0,1840);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (912,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1842,2,656,0,1841);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (656, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1843,3,275,0,1842);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (275, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1844,1,913,0,1843);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (913,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1845,2,657,0,1844);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (657, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1846,1,914,0,1845);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (914,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1843
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1847,2,658,0,1843);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (658, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1848,1,915,0,1847);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (915,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1840
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1849,3,276,0,1840);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (276, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1850,1,916,0,1849);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (916,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1851,2,659,0,1850);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (659, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1852,1,917,0,1851);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (917,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1849
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1853,2,660,0,1849);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (660, 'typedef struct ObjectMgr ObjectMgr;PUBLIC void ObjectMgr_delete(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_getRef();PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size);PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object);PUBLIC void ObjectMgr_report(ObjectMgr * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1854,1,918,0,1853);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (918,' _OBJECTMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1837
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1855,3,277,0,1837);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (277, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1856,1,919,0,1855);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (919,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1857,2,661,0,1856);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (661, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1858,3,278,0,1857);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (278, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1859,1,920,0,1858);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (920,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1860,2,662,0,1859);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (662, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1861,1,921,0,1860);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (921,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1858
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1862,2,663,0,1858);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (663, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1863,1,922,0,1862);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (922,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1855
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h

















































































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1864,2,664,0,1855);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (664, 'OptionMgr * testOptionMgr = 0;int step1(){  testOptionMgr = OptionMgr_getRef();  return 0;}int step2(){  String * option = 0;  option = OptionMgr_getOption(testOptionMgr,"DB Name");  printf("DB Name option = %s\n", String_getBuffer(option));  option = OptionMgr_getOption(testOptionMgr, "Input directory");  printf("Input option = %s\n", String_getBuffer(option));  return 0;}int step3(){  String * option = String_new("Yes");  OptionMgr_setOption(testOptionMgr, "Reset after initialisation", option);  option = OptionMgr_getOption(testOptionMgr, "Reset after initialisation");  printf("Reset after init. option = %s\n", String_getBuffer(option));  return 0;}int step4(){  const char *argv[] = { "-o", "test2.db" };  int argc = 3;  String * option = 0;  OptionMgr_readFromCmdLine(testOptionMgr, argc, argv);  option = OptionMgr_getOption(testOptionMgr,"DB Name");  printf("DB Name option = %s\n", String_getBuffer(option));  return 0;}int step5(){  String * option = 0;  OptionMgr_readFromFile(testOptionMgr);  option = OptionMgr_getOption(testOptionMgr,"DB Name");  printf("DB Name option = %s\n", String_getBuffer(option));  return 0;}int step6(){  OptionMgr_delete(testOptionMgr);  Memory_report();  return 0;}int main(){  step1();  step2();  step3();  step4();  step5();  step6();  return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/Map/tests/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/Map/tests/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/Map/tests/main.c');
[DBUG] Count = 0
[DBUG] File name ="Map.h"
[DBUG] Length =6
[DBUG] INCLUDE Map.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1865,3,279,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (279, 'Map.h');
[DBUG] Count = 0
[INFO] Merged path: ./Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Map.h
[INFO] Merged path: ./CommonLib/include/Map.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Map.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1866,1,923,0,1865);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (923,' Map.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1867,2,665,0,1866);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (665, '#ifndef _MAP_H_#define _MAP_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1868,3,280,0,1867);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (280, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1869,1,924,0,1868);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (924,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1870,2,666,0,1869);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (666, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1871,1,925,0,1870);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (925,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1868
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1872,3,281,0,1868);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (281, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1873,1,926,0,1872);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (926,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1874,2,667,0,1873);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (667, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1875,3,282,0,1874);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (282, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 4
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1876,1,927,0,1875);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (927,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1877,2,668,0,1876);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (668, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1878,1,928,0,1877);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (928,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1875
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1879,2,669,0,1875);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (669, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1880,1,929,0,1879);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (929,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1872
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1881,2,670,0,1872);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (670, 'typedef struct Map Map;PUBLIC Map * Map_new();PUBLIC void Map_delete(Map * this);PUBLIC Map * Map_copy(Map * this);PUBLIC unsigned int Map_insert(Map * this,String* s, void * p);PUBLIC unsigned int Map_find(Map * this, String* s, void ** p);PUBLIC void Map_print(Map * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1882,1,930,0,1881);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (930,' _MAP_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1883,2,671,0,1882);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (671, '');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1865
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1884,3,283,0,1865);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (283, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1885,1,931,0,1884);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (931,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1886,2,672,0,1885);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (672, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1887,3,284,0,1886);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (284, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1888,1,932,0,1887);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (932,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1889,2,673,0,1888);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (673, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1890,1,933,0,1889);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (933,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1887
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1891,2,674,0,1887);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (674, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1892,1,934,0,1891);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (934,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1884
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="ObjectMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE ObjectMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1893,3,285,0,1884);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (285, 'ObjectMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ObjectMgr.h
[INFO] Merged path: ./CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1894,1,935,0,1893);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (935,' ObjectMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1895,2,675,0,1894);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (675, '#ifndef _OBJECTMGR_H_#define _OBJECTMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1896,3,286,0,1895);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (286, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1897,1,936,0,1896);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (936,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1898,2,676,0,1897);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (676, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1899,3,287,0,1898);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (287, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1900,1,937,0,1899);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (937,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1901,2,677,0,1900);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (677, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1902,1,938,0,1901);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (938,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1899
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1903,2,678,0,1899);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (678, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1904,1,939,0,1903);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (939,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1896
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1905,3,288,0,1896);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (288, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 18
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1906,1,940,0,1905);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (940,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1907,2,679,0,1906);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (679, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1908,1,941,0,1907);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (941,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1905
[DBUG] POP State Stack Pointer = 18
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1909,2,680,0,1905);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (680, 'typedef struct ObjectMgr ObjectMgr;PUBLIC void ObjectMgr_delete(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_getRef();PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size);PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object);PUBLIC void ObjectMgr_report(ObjectMgr * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1910,1,942,0,1909);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (942,' _OBJECTMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1893
[DBUG] POP State Stack Pointer = 20
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Memory.h"
[DBUG] Length =9
[DBUG] INCLUDE Memory.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1911,3,289,0,1893);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (289, 'Memory.h');
[DBUG] Count = 0
[INFO] Merged path: ./Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Memory.h
[INFO] Merged path: ./CommonLib/include/Memory.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Memory.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1912,1,943,0,1911);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (943,' Memory.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1913,2,681,0,1912);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (681, '#ifndef _MEMORY_H_#define _MEMORY_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1914,3,290,0,1913);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (290, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 22
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1915,1,944,0,1914);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (944,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1916,2,682,0,1915);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (682, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1917,1,945,0,1916);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (945,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1914
[DBUG] POP State Stack Pointer = 22
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9












[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1918,2,683,0,1914);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (683, 'PUBLIC void* Memory_alloc(unsigned int nbBytes);PUBLIC void * Memory_realloc(void * pointer, unsigned int prevSizeBytes, unsigned int newSizeBytes);PUBLIC void Memory_free(void* pointer, unsigned int nbBytes);PUBLIC void Memory_set(void * pointer, unsigned char val, unsigned int nbBytes);PUBLIC void Memory_copy(void * pointer, void * src, unsigned int nbBytes);PUBLIC unsigned int Memory_ncmp(void * pointer, void * compared, unsigned int nbBytes);PUBLIC unsigned int Memory_cmp(void * pointer, void * compared);PUBLIC unsigned int Memory_len(const void * pointer);PUBLIC void Memory_report();#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1919,1,946,0,1918);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (946,' _MEMORY_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1911
[DBUG] POP State Stack Pointer = 24
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9





































































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1920,2,684,0,1911);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (684, 'Map * testMap = 0;int step1(){  testMap = Map_new();    return 0;}int step2(){  String * s = String_new("Hello world");  String * item = String_new("The value");    Map_insert(testMap, s, (void**)item);    return 0;}int step3(){  String * s = String_new("Hello world");  String * item = 0;    Map_find(testMap, s, (void**)&item);   printf("Value : %s\n", String_getBuffer(item));  String_delete(s);    return 0;}int step4(){  String * s = String_new("Hello world");  String * item = String_new("The new value");  String * newItem = 0;    Map_insert(testMap, s, item);  Map_find(testMap, s, (void**)&newItem);    printf("New value : %s\n",          String_getBuffer(newItem));    return 0;}int step5(){  Map_delete(testMap);    return 0;}int main(){  step1();  step2();  step3();  step4();  step5();  Memory_report();  return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/String/tests/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/String/tests/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/String/tests/main.c');
[DBUG] Count = 0
[DBUG] File name ="ObjectMgr.h"
[DBUG] Length =12
[DBUG] INCLUDE ObjectMgr.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1921,3,291,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (291, 'ObjectMgr.h');
[DBUG] Count = 0
[INFO] Merged path: ./ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/ObjectMgr.h
[INFO] Merged path: ./CommonLib/include/ObjectMgr.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/ObjectMgr.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1922,1,947,0,1921);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (947,' ObjectMgr.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1923,2,685,0,1922);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (685, '#ifndef _OBJECTMGR_H_#define _OBJECTMGR_H_');
[DBUG] Count = 0
[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1924,3,292,0,1923);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (292, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1925,1,948,0,1924);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (948,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1926,2,686,0,1925);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (686, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1927,3,293,0,1926);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (293, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 3
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1928,1,949,0,1927);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (949,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1929,2,687,0,1928);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (687, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1930,1,950,0,1929);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (950,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1927
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 2
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1931,2,688,0,1927);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (688, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1932,1,951,0,1931);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (951,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1924
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1933,3,294,0,1924);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (294, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1934,1,952,0,1933);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (952,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1935,2,689,0,1934);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (689, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1936,1,953,0,1935);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (953,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1933
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9











[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1937,2,690,0,1933);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (690, 'typedef struct ObjectMgr ObjectMgr;PUBLIC void ObjectMgr_delete(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_copy(ObjectMgr * this);PUBLIC ObjectMgr * ObjectMgr_getRef();PUBLIC Object * ObjectMgr_allocate(ObjectMgr * this, unsigned int size);PUBLIC void ObjectMgr_deallocate(ObjectMgr * this, Object * object);PUBLIC void ObjectMgr_report(ObjectMgr * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1938,1,954,0,1937);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (954,' _OBJECTMGR_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1921
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1939,3,295,0,1921);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (295, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1940,1,955,0,1939);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (955,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1941,2,691,0,1940);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (691, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1942,3,296,0,1941);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (296, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 10
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1943,1,956,0,1942);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (956,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1944,2,692,0,1943);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (692, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1945,1,957,0,1944);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (957,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1942
[DBUG] POP State Stack Pointer = 10
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1946,2,693,0,1942);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (693, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1947,1,958,0,1946);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (958,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1939
[DBUG] POP State Stack Pointer = 12
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="String2.h"
[DBUG] Length =10
[DBUG] INCLUDE String2.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1948,3,297,0,1939);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (297, 'String2.h');
[DBUG] Count = 0
[INFO] Merged path: ./String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/String2.h
[INFO] Merged path: ./CommonLib/include/String2.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/String2.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1949,1,959,0,1948);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (959,' String2.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1950,2,694,0,1949);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (694, '#ifndef _STRING2_H_#define _STRING2_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1951,3,298,0,1950);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (298, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 14
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1952,1,960,0,1951);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (960,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1953,2,695,0,1952);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (695, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1954,1,961,0,1953);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (961,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1951
[DBUG] POP State Stack Pointer = 14
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9
















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1955,2,696,0,1951);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (696, 'typedef struct String String;PUBLIC String * String_new(const char * constString);PUBLIC void String_delete(String * this);PUBLIC String * String_copy(String * this);PUBLIC String * String_getRef(String * this);PUBLIC unsigned int String_getLength(String * this);PUBLIC char * String_getBuffer(String * this);PUBLIC void String_setBuffer(String * this, char * buffer);PUBLIC unsigned int String_isContained(String * this, String * s2);PUBLIC unsigned int String_prepend(String * this, const char * prefix);PUBLIC unsigned int String_isEqual(String * this, String * compared);PUBLIC String * String_subString(String * this, unsigned int idx, unsigned int length);PUBLIC unsigned int String_matchWildcard(String * this, const char * wildcard);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1956,1,962,0,1955);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (962,' _STRING2_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1948
[DBUG] POP State Stack Pointer = 16
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9









































































[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1957,2,697,0,1948);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (697, 'int step1(){  String * testString = 0;  testString = String_new("Hello World!");  String_delete(testString);  return 0;}int step2(){  String * testString = 0;  String * testPattern = 0;    testString = String_new("Hello World!");  testPattern = String_new("World");  if (String_isContained(testString, testPattern))  {    printf("Passed\n");  }  String_delete(testString);  return 0;}int step3(){  String * testString = 0;  const char * testPattern = "*.c";  testString = String_new("test.c");    if (String_matchWildcard(testString, testPattern))  {    printf("Passed\n");  }    String_delete(testString);    return 0;}int step4(){  String * testString = 0;  const char * testPattern = "*.[ch]";  testString = String_new("test.h");  if (String_matchWildcard(testString, testPattern))  {    printf("Passed\n");  }  return 0;}int main(){  step1();  step2();  step3();  step4();  return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
[INFO] FileReader_new: Processing file /home/pi/Projects/SParse/src/CommonLib/List/tests/main.c
[DBUG] FileReader_getLIstPreferredDir: Building preferred Dirs
[DBUG] File search path for files of type *.h
[DBUG] Directory: ./CommonLib/include
[DBUG] Directory: ./AppliLib/include
[DBUG] Directory: ./ParseLib/include
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/List/tests/main.c
[DBUG] SdbMgr: DROP TABLE IF EXIST Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Nodes (NodeId integer PRIMARY_KEY,NodeType integer NOT NULL,NodePtr integer NOT NULL,NodeNext integer,NodePrev integer);
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Translation_Units;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Translation_Units (File_Name text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Comment_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Comment_Nodes (NodeId integer PRIMARY_KEY,Comment text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Code_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Code_Nodes (NodeId integer PRIMARY_KEY,Code text NOT NULL );
[DBUG] Count = 0
[DBUG] SdbMgr: DROP TABLE IF EXIST Include_Nodes;
[DBUG] Count = 0
[DBUG] SdbMgr: CREATE TABLE Include_Nodes (NodeId integer PRIMARY_KEY,EntryNode integer NOT NULL);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Translation_Units(File_Name) VALUES ('/home/pi/Projects/SParse/src/CommonLib/List/tests/main.c');
[DBUG] Count = 0
[DBUG] File name ="List.h"
[DBUG] Length =7
[DBUG] INCLUDE List.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1958,3,299,0,0);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (299, 'List.h');
[DBUG] Count = 0
[INFO] Merged path: ./List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/List.h
[INFO] Merged path: ./CommonLib/include/List.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/List.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1959,1,963,0,1958);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (963,' List.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1960,2,698,0,1959);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (698, '#ifndef _LIST_H_#define _LIST_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1961,3,300,0,1960);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (300, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 2
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1962,1,964,0,1961);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (964,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1963,2,699,0,1962);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (699, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1964,1,965,0,1963);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (965,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1961
[DBUG] POP State Stack Pointer = 2
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9

















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1965,2,700,0,1961);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (700, 'typedef struct List List;PUBLIC List * List_new();PUBLIC void List_delete(List* this);PUBLIC List * List_copy(List* this);PUBLIC void List_insertHead(List* this, void* item);PUBLIC void List_insertTail(List* this, void* item);PUBLIC void List_merge(List* this, List* l1);PUBLIC void List_forEach(List* this, void (*method)(void* o, void *p), void * object);PUBLIC void * List_getNext(List* this);PUBLIC void * List_removeHead(List * this);PUBLIC void * List_getHead(List * this);PUBLIC unsigned int List_getSize(List * this);PUBLIC void List_resetIterator(List * this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1966,1,966,0,1965);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (966,' _LIST_H_ ');
[DBUG] Count = 0
[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1958
[DBUG] POP State Stack Pointer = 4
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name ="Object.h"
[DBUG] Length =9
[DBUG] INCLUDE Object.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1967,3,301,0,1958);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (301, 'Object.h');
[DBUG] Count = 0
[INFO] Merged path: ./Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Object.h
[INFO] Merged path: ./CommonLib/include/Object.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Object.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 1
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1968,1,967,0,1967);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (967,' Object.h ');
[DBUG] Count = 0





[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1969,2,701,0,1968);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (701, '#ifndef _OBJECT_H_#define _OBJECT_H_');
[DBUG] Count = 0
[DBUG] File name ="Types.h"
[DBUG] Length =8
[DBUG] INCLUDE Types.h!!!
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1970,3,302,0,1969);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Include_Nodes (NodeId, EntryNode) VALUES (302, 'Types.h');
[DBUG] Count = 0
[INFO] Merged path: ./Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/Types.h
[INFO] Merged path: ./CommonLib/include/Types.h
[INFO] Merged path: /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] Matched /home/pi/Projects/SParse/src/CommonLib/include/Types.h
[DBUG] PUSH State Stack Pointer = 6
[DBUG] PUSH State Stack Top = 2
[DBUG] PUSH State Stack Max. = 9
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1971,1,968,0,1970);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (968,' Types.h ');
[DBUG] Count = 0








[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1972,2,702,0,1971);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (702, '#ifndef _TYPES_H_#define _TYPES_H_#define PUBLIC#define PRIVATE static#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1973,1,969,0,1972);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (969,' _TYPES_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1970
[DBUG] POP State Stack Pointer = 6
[DBUG] POP State Stack Top = 1
[DBUG] POP State Stack Max. = 9






















[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1974,2,703,0,1970);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (703, 'typedef struct Object Object;typedef struct Object * (*Constructor)();typedef void (*Destructor)(struct Object *);typedef struct Object * (*Copy_operator)(struct Object *);struct Object{  unsigned int id;  void (*delete)(Object * this);  Object * (*copy)(Object * this);  unsigned int refCount;  unsigned int size;};PUBLIC Object * Object_new(unsigned int size, void (*f_delete)(Object*), Object * (*f_copy)(Object*));PUBLIC void Object_delete(Object * this);PUBLIC Object * Object_copy(Object * this);PUBLIC Object* Object_getRef(Object* this);#endif ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1975,1,970,0,1974);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (970,' _OBJECT_H_ ');
[DBUG] Count = 0

[DBUG] <CODE> EOF
[DBUG] <INITIAL> EOF
[DBUG] Grammar2_returnToFile: 1967
[DBUG] POP State Stack Pointer = 8
[DBUG] POP State Stack Top = 0
[DBUG] POP State Stack Max. = 9

[DBUG] File name =<stdlib.h>
[DBUG] Length =9
[DBUG] INCLUDE stdlib.h!!!
[NORM] Grammar2.lex.c: Cannot find stdlib.h

[DBUG] File name =<stdio.h>
[DBUG] Length =8
[DBUG] INCLUDE stdio.h!!!
[NORM] Grammar2.lex.c: Cannot find stdio.h



































































































































[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1976,2,704,0,1967);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (704, '#define LIST_SIZE (10)typedef struct TestItem{  Object object;  int x;  int y;} TestItem;void TestItem_delete(TestItem * this);TestItem * TestItem_copy(TestItem * item);TestItem * TestItem_new(){  TestItem * this = 0;  this = (TestItem*)malloc(sizeof(TestItem));  this->object.delete = (Destructor)&TestItem_delete;  this->object.copy = (Copy_operator)&TestItem_copy;  this->object.size = sizeof(TestItem);  return this;}void TestItem_delete(TestItem * this){  free(this);}TestItem * TestItem_copy(TestItem * item){  TestItem * copy = 0;  copy = (TestItem*)malloc(sizeof(TestItem));  copy->x = item->x;  copy->y = item->y;  return copy;}void TestItem_print(TestItem * item, void * p){  printf("x=%d y=%d\n", item->x, item->y);}int step1(){  List * testList1 = 0;  List * testList2 = 0;  List * testList3 = 0;  TestItem * items[LIST_SIZE*2];  int i = 0;  testList1 = List_new();  testList2 = List_new();  for (i=0; i<LIST_SIZE; i++)  {    items[i] = TestItem_new();    items[i]->x = i;    items[i]->y = LIST_SIZE - i;    List_insertHead(testList1, items[i]);    printf("Nb items %d\n", List_getSize(testList1));  }  for (i=LIST_SIZE; i<LIST_SIZE*2; i++)  {    items[i] = TestItem_new();    items[i]->x = i;    items[i]->y = LIST_SIZE * 2 - i;    List_insertTail(testList2, items[i]);    printf("Nb items %d\n", List_getSize(testList2));  }  printf("List1 ------------->\n");  List_forEach(testList1, &TestItem_print, 0);  printf("List2 ------------->\n");  List_forEach(testList2, &TestItem_print, 0);  List_merge(testList1, testList2);  printf("List1 + List2 ----->\n");  List_forEach(testList1, &TestItem_print, 0);  testList3 = List_copy(testList1);  printf("Copy of List1 ------>\n");  List_forEach(testList3, &TestItem_print, 0);  List_delete(testList1);  List_delete(testList3);  Memory_report();  return 0;}int step2(){  List * testList1 = 0;    TestItem * items[LIST_SIZE];  TestItem * output = 0;  int i;    testList1 = List_new();  for (i=0; i<LIST_SIZE;i++)  {    items[i] = TestItem_new();    items[i]->x = i;    items[i]->y = LIST_SIZE - i;    List_insertHead(testList1, items[i]);    printf("Nb items %d\n", List_getSize(testList1));  }    output = List_getHead(testList1);   for (i=0; i<LIST_SIZE; i++)  {    output = List_removeHead(testList1);    TestItem_delete(output);    printf("Nb items %d\n", List_getSize(testList1));  }  List_delete(testList1);  return 0;}int main(){  ');
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1977,1,971,0,1976);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Comment_Nodes (NodeId, Comment) VALUES (971,'step1();');
[DBUG] Count = 0



[DBUG] <CODE> EOF
[DBUG] SdbMgr: INSERT INTO Nodes (NodeId, NodeType, NodePtr, NodeNext, NodePrev) VALUES (1978,2,705,0,1977);
[DBUG] Count = 0
[DBUG] SdbMgr: INSERT INTO Code_Nodes (NodeId, Code) VALUES (705, '  step2();  return 0;}');
[DBUG] Count = 0
[DBUG] <INITIAL> EOF
[DBUG] Terminate
[DBUG] FileReader_deleteLIstPreferredDir:
Object Manager Usage report:
Nb allocated objects: 9115
Max nb allocated objects: 9581
Nb alloc request: 1
Nb free requests: 0
[INFO] Memory Usage Report:
Number of memory allocation Requests: 20170
Number of memory de-allocation Requests: 19479
==17370== 
==17370== HEAP SUMMARY:
==17370==     in use at exit: 1,509,379 bytes in 722 blocks
==17370==   total heap usage: 146,225 allocs, 145,503 frees, 25,906,498 bytes allocated
==17370== 
==17370== 1,016,800 bytes in 31 blocks are definitely lost in loss record 5 of 5
==17370==    at 0x4847568: malloc (vg_replace_malloc.c:299)
==17370==    by 0x4A0088B: __alloc_dir (opendir.c:247)
==17370==    by 0x4A00987: opendir_tail (opendir.c:145)
==17370==    by 0x12CBB: FileMgr_listFiles (FileMgr.c:340)
==17370==    by 0x12947: FileMgr_addDirectory (FileMgr.c:197)
==17370==    by 0x10FBF: main (main.c:61)
==17370== 
==17370== LEAK SUMMARY:
==17370==    definitely lost: 1,016,800 bytes in 31 blocks
==17370==    indirectly lost: 0 bytes in 0 blocks
==17370==      possibly lost: 0 bytes in 0 blocks
==17370==    still reachable: 492,579 bytes in 691 blocks
==17370==         suppressed: 0 bytes in 0 blocks
==17370== Reachable blocks (those to which a pointer was found) are not shown.
==17370== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==17370== 
==17370== For counts of detected and suppressed errors, rerun with: -v
==17370== Use --track-origins=yes to see where uninitialised values come from
==17370== ERROR SUMMARY: 1873 errors from 14 contexts (suppressed: 6 from 3)
